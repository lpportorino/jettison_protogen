// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: jon_shared_data.proto
// Protobuf C++ Version: 5.29.2

#ifndef jon_5fshared_5fdata_2eproto_2epb_2eh
#define jon_5fshared_5fdata_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "jon_shared_data_types.pb.h"
#include "jon_shared_data_time.pb.h"
#include "jon_shared_data_system.pb.h"
#include "jon_shared_data_lrf.pb.h"
#include "jon_shared_data_gps.pb.h"
#include "jon_shared_data_compass.pb.h"
#include "jon_shared_data_compass_calibration.pb.h"
#include "jon_shared_data_rotary.pb.h"
#include "jon_shared_data_camera_day.pb.h"
#include "jon_shared_data_camera_heat.pb.h"
#include "jon_shared_data_rec_osd.pb.h"
#include "jon_shared_data_day_cam_glass_heater.pb.h"
#include "jon_shared_data_actual_space_time.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_jon_5fshared_5fdata_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_jon_5fshared_5fdata_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_jon_5fshared_5fdata_2eproto;
namespace ser {
class JonGUIState;
struct JonGUIStateDefaultTypeInternal;
extern JonGUIStateDefaultTypeInternal _JonGUIState_default_instance_;
}  // namespace ser
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ser {

// ===================================================================


// -------------------------------------------------------------------

class JonGUIState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ser.JonGUIState) */ {
 public:
  inline JonGUIState() : JonGUIState(nullptr) {}
  ~JonGUIState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(JonGUIState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(JonGUIState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JonGUIState(
      ::google::protobuf::internal::ConstantInitialized);

  inline JonGUIState(const JonGUIState& from) : JonGUIState(nullptr, from) {}
  inline JonGUIState(JonGUIState&& from) noexcept
      : JonGUIState(nullptr, std::move(from)) {}
  inline JonGUIState& operator=(const JonGUIState& from) {
    CopyFrom(from);
    return *this;
  }
  inline JonGUIState& operator=(JonGUIState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JonGUIState& default_instance() {
    return *internal_default_instance();
  }
  static inline const JonGUIState* internal_default_instance() {
    return reinterpret_cast<const JonGUIState*>(
        &_JonGUIState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(JonGUIState& a, JonGUIState& b) { a.Swap(&b); }
  inline void Swap(JonGUIState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JonGUIState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JonGUIState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<JonGUIState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JonGUIState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JonGUIState& from) { JonGUIState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(JonGUIState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ser.JonGUIState"; }

 protected:
  explicit JonGUIState(::google::protobuf::Arena* arena);
  JonGUIState(::google::protobuf::Arena* arena, const JonGUIState& from);
  JonGUIState(::google::protobuf::Arena* arena, JonGUIState&& from) noexcept
      : JonGUIState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSystemFieldNumber = 13,
    kMeteoInternalFieldNumber = 14,
    kLrfFieldNumber = 15,
    kTimeFieldNumber = 16,
    kGpsFieldNumber = 17,
    kCompassFieldNumber = 18,
    kRotaryFieldNumber = 19,
    kCameraDayFieldNumber = 20,
    kCameraHeatFieldNumber = 21,
    kCompassCalibrationFieldNumber = 22,
    kRecOsdFieldNumber = 23,
    kDayCamGlassHeaterFieldNumber = 24,
    kActualSpaceTimeFieldNumber = 25,
    kSystemMonotonicTimeUsFieldNumber = 2,
    kProtocolVersionFieldNumber = 1,
  };
  // .ser.JonGuiDataSystem system = 13;
  bool has_system() const;
  void clear_system() ;
  const ::ser::JonGuiDataSystem& system() const;
  PROTOBUF_NODISCARD ::ser::JonGuiDataSystem* release_system();
  ::ser::JonGuiDataSystem* mutable_system();
  void set_allocated_system(::ser::JonGuiDataSystem* value);
  void unsafe_arena_set_allocated_system(::ser::JonGuiDataSystem* value);
  ::ser::JonGuiDataSystem* unsafe_arena_release_system();

  private:
  const ::ser::JonGuiDataSystem& _internal_system() const;
  ::ser::JonGuiDataSystem* _internal_mutable_system();

  public:
  // .ser.JonGuiDataMeteo meteo_internal = 14;
  bool has_meteo_internal() const;
  void clear_meteo_internal() ;
  const ::ser::JonGuiDataMeteo& meteo_internal() const;
  PROTOBUF_NODISCARD ::ser::JonGuiDataMeteo* release_meteo_internal();
  ::ser::JonGuiDataMeteo* mutable_meteo_internal();
  void set_allocated_meteo_internal(::ser::JonGuiDataMeteo* value);
  void unsafe_arena_set_allocated_meteo_internal(::ser::JonGuiDataMeteo* value);
  ::ser::JonGuiDataMeteo* unsafe_arena_release_meteo_internal();

  private:
  const ::ser::JonGuiDataMeteo& _internal_meteo_internal() const;
  ::ser::JonGuiDataMeteo* _internal_mutable_meteo_internal();

  public:
  // .ser.JonGuiDataLrf lrf = 15;
  bool has_lrf() const;
  void clear_lrf() ;
  const ::ser::JonGuiDataLrf& lrf() const;
  PROTOBUF_NODISCARD ::ser::JonGuiDataLrf* release_lrf();
  ::ser::JonGuiDataLrf* mutable_lrf();
  void set_allocated_lrf(::ser::JonGuiDataLrf* value);
  void unsafe_arena_set_allocated_lrf(::ser::JonGuiDataLrf* value);
  ::ser::JonGuiDataLrf* unsafe_arena_release_lrf();

  private:
  const ::ser::JonGuiDataLrf& _internal_lrf() const;
  ::ser::JonGuiDataLrf* _internal_mutable_lrf();

  public:
  // .ser.JonGuiDataTime time = 16;
  bool has_time() const;
  void clear_time() ;
  const ::ser::JonGuiDataTime& time() const;
  PROTOBUF_NODISCARD ::ser::JonGuiDataTime* release_time();
  ::ser::JonGuiDataTime* mutable_time();
  void set_allocated_time(::ser::JonGuiDataTime* value);
  void unsafe_arena_set_allocated_time(::ser::JonGuiDataTime* value);
  ::ser::JonGuiDataTime* unsafe_arena_release_time();

  private:
  const ::ser::JonGuiDataTime& _internal_time() const;
  ::ser::JonGuiDataTime* _internal_mutable_time();

  public:
  // .ser.JonGuiDataGps gps = 17;
  bool has_gps() const;
  void clear_gps() ;
  const ::ser::JonGuiDataGps& gps() const;
  PROTOBUF_NODISCARD ::ser::JonGuiDataGps* release_gps();
  ::ser::JonGuiDataGps* mutable_gps();
  void set_allocated_gps(::ser::JonGuiDataGps* value);
  void unsafe_arena_set_allocated_gps(::ser::JonGuiDataGps* value);
  ::ser::JonGuiDataGps* unsafe_arena_release_gps();

  private:
  const ::ser::JonGuiDataGps& _internal_gps() const;
  ::ser::JonGuiDataGps* _internal_mutable_gps();

  public:
  // .ser.JonGuiDataCompass compass = 18;
  bool has_compass() const;
  void clear_compass() ;
  const ::ser::JonGuiDataCompass& compass() const;
  PROTOBUF_NODISCARD ::ser::JonGuiDataCompass* release_compass();
  ::ser::JonGuiDataCompass* mutable_compass();
  void set_allocated_compass(::ser::JonGuiDataCompass* value);
  void unsafe_arena_set_allocated_compass(::ser::JonGuiDataCompass* value);
  ::ser::JonGuiDataCompass* unsafe_arena_release_compass();

  private:
  const ::ser::JonGuiDataCompass& _internal_compass() const;
  ::ser::JonGuiDataCompass* _internal_mutable_compass();

  public:
  // .ser.JonGuiDataRotary rotary = 19;
  bool has_rotary() const;
  void clear_rotary() ;
  const ::ser::JonGuiDataRotary& rotary() const;
  PROTOBUF_NODISCARD ::ser::JonGuiDataRotary* release_rotary();
  ::ser::JonGuiDataRotary* mutable_rotary();
  void set_allocated_rotary(::ser::JonGuiDataRotary* value);
  void unsafe_arena_set_allocated_rotary(::ser::JonGuiDataRotary* value);
  ::ser::JonGuiDataRotary* unsafe_arena_release_rotary();

  private:
  const ::ser::JonGuiDataRotary& _internal_rotary() const;
  ::ser::JonGuiDataRotary* _internal_mutable_rotary();

  public:
  // .ser.JonGuiDataCameraDay camera_day = 20;
  bool has_camera_day() const;
  void clear_camera_day() ;
  const ::ser::JonGuiDataCameraDay& camera_day() const;
  PROTOBUF_NODISCARD ::ser::JonGuiDataCameraDay* release_camera_day();
  ::ser::JonGuiDataCameraDay* mutable_camera_day();
  void set_allocated_camera_day(::ser::JonGuiDataCameraDay* value);
  void unsafe_arena_set_allocated_camera_day(::ser::JonGuiDataCameraDay* value);
  ::ser::JonGuiDataCameraDay* unsafe_arena_release_camera_day();

  private:
  const ::ser::JonGuiDataCameraDay& _internal_camera_day() const;
  ::ser::JonGuiDataCameraDay* _internal_mutable_camera_day();

  public:
  // .ser.JonGuiDataCameraHeat camera_heat = 21;
  bool has_camera_heat() const;
  void clear_camera_heat() ;
  const ::ser::JonGuiDataCameraHeat& camera_heat() const;
  PROTOBUF_NODISCARD ::ser::JonGuiDataCameraHeat* release_camera_heat();
  ::ser::JonGuiDataCameraHeat* mutable_camera_heat();
  void set_allocated_camera_heat(::ser::JonGuiDataCameraHeat* value);
  void unsafe_arena_set_allocated_camera_heat(::ser::JonGuiDataCameraHeat* value);
  ::ser::JonGuiDataCameraHeat* unsafe_arena_release_camera_heat();

  private:
  const ::ser::JonGuiDataCameraHeat& _internal_camera_heat() const;
  ::ser::JonGuiDataCameraHeat* _internal_mutable_camera_heat();

  public:
  // .ser.JonGuiDataCompassCalibration compass_calibration = 22;
  bool has_compass_calibration() const;
  void clear_compass_calibration() ;
  const ::ser::JonGuiDataCompassCalibration& compass_calibration() const;
  PROTOBUF_NODISCARD ::ser::JonGuiDataCompassCalibration* release_compass_calibration();
  ::ser::JonGuiDataCompassCalibration* mutable_compass_calibration();
  void set_allocated_compass_calibration(::ser::JonGuiDataCompassCalibration* value);
  void unsafe_arena_set_allocated_compass_calibration(::ser::JonGuiDataCompassCalibration* value);
  ::ser::JonGuiDataCompassCalibration* unsafe_arena_release_compass_calibration();

  private:
  const ::ser::JonGuiDataCompassCalibration& _internal_compass_calibration() const;
  ::ser::JonGuiDataCompassCalibration* _internal_mutable_compass_calibration();

  public:
  // .ser.JonGuiDataRecOsd rec_osd = 23;
  bool has_rec_osd() const;
  void clear_rec_osd() ;
  const ::ser::JonGuiDataRecOsd& rec_osd() const;
  PROTOBUF_NODISCARD ::ser::JonGuiDataRecOsd* release_rec_osd();
  ::ser::JonGuiDataRecOsd* mutable_rec_osd();
  void set_allocated_rec_osd(::ser::JonGuiDataRecOsd* value);
  void unsafe_arena_set_allocated_rec_osd(::ser::JonGuiDataRecOsd* value);
  ::ser::JonGuiDataRecOsd* unsafe_arena_release_rec_osd();

  private:
  const ::ser::JonGuiDataRecOsd& _internal_rec_osd() const;
  ::ser::JonGuiDataRecOsd* _internal_mutable_rec_osd();

  public:
  // .ser.JonGuiDataDayCamGlassHeater day_cam_glass_heater = 24;
  bool has_day_cam_glass_heater() const;
  void clear_day_cam_glass_heater() ;
  const ::ser::JonGuiDataDayCamGlassHeater& day_cam_glass_heater() const;
  PROTOBUF_NODISCARD ::ser::JonGuiDataDayCamGlassHeater* release_day_cam_glass_heater();
  ::ser::JonGuiDataDayCamGlassHeater* mutable_day_cam_glass_heater();
  void set_allocated_day_cam_glass_heater(::ser::JonGuiDataDayCamGlassHeater* value);
  void unsafe_arena_set_allocated_day_cam_glass_heater(::ser::JonGuiDataDayCamGlassHeater* value);
  ::ser::JonGuiDataDayCamGlassHeater* unsafe_arena_release_day_cam_glass_heater();

  private:
  const ::ser::JonGuiDataDayCamGlassHeater& _internal_day_cam_glass_heater() const;
  ::ser::JonGuiDataDayCamGlassHeater* _internal_mutable_day_cam_glass_heater();

  public:
  // .ser.JonGuiDataActualSpaceTime actual_space_time = 25;
  bool has_actual_space_time() const;
  void clear_actual_space_time() ;
  const ::ser::JonGuiDataActualSpaceTime& actual_space_time() const;
  PROTOBUF_NODISCARD ::ser::JonGuiDataActualSpaceTime* release_actual_space_time();
  ::ser::JonGuiDataActualSpaceTime* mutable_actual_space_time();
  void set_allocated_actual_space_time(::ser::JonGuiDataActualSpaceTime* value);
  void unsafe_arena_set_allocated_actual_space_time(::ser::JonGuiDataActualSpaceTime* value);
  ::ser::JonGuiDataActualSpaceTime* unsafe_arena_release_actual_space_time();

  private:
  const ::ser::JonGuiDataActualSpaceTime& _internal_actual_space_time() const;
  ::ser::JonGuiDataActualSpaceTime* _internal_mutable_actual_space_time();

  public:
  // uint64 system_monotonic_time_us = 2;
  void clear_system_monotonic_time_us() ;
  ::uint64_t system_monotonic_time_us() const;
  void set_system_monotonic_time_us(::uint64_t value);

  private:
  ::uint64_t _internal_system_monotonic_time_us() const;
  void _internal_set_system_monotonic_time_us(::uint64_t value);

  public:
  // uint32 protocol_version = 1;
  void clear_protocol_version() ;
  ::uint32_t protocol_version() const;
  void set_protocol_version(::uint32_t value);

  private:
  ::uint32_t _internal_protocol_version() const;
  void _internal_set_protocol_version(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ser.JonGUIState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 15, 13,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const JonGUIState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::ser::JonGuiDataSystem* system_;
    ::ser::JonGuiDataMeteo* meteo_internal_;
    ::ser::JonGuiDataLrf* lrf_;
    ::ser::JonGuiDataTime* time_;
    ::ser::JonGuiDataGps* gps_;
    ::ser::JonGuiDataCompass* compass_;
    ::ser::JonGuiDataRotary* rotary_;
    ::ser::JonGuiDataCameraDay* camera_day_;
    ::ser::JonGuiDataCameraHeat* camera_heat_;
    ::ser::JonGuiDataCompassCalibration* compass_calibration_;
    ::ser::JonGuiDataRecOsd* rec_osd_;
    ::ser::JonGuiDataDayCamGlassHeater* day_cam_glass_heater_;
    ::ser::JonGuiDataActualSpaceTime* actual_space_time_;
    ::uint64_t system_monotonic_time_us_;
    ::uint32_t protocol_version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fdata_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// JonGUIState

// uint32 protocol_version = 1;
inline void JonGUIState::clear_protocol_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_version_ = 0u;
}
inline ::uint32_t JonGUIState::protocol_version() const {
  // @@protoc_insertion_point(field_get:ser.JonGUIState.protocol_version)
  return _internal_protocol_version();
}
inline void JonGUIState::set_protocol_version(::uint32_t value) {
  _internal_set_protocol_version(value);
  // @@protoc_insertion_point(field_set:ser.JonGUIState.protocol_version)
}
inline ::uint32_t JonGUIState::_internal_protocol_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.protocol_version_;
}
inline void JonGUIState::_internal_set_protocol_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_version_ = value;
}

// uint64 system_monotonic_time_us = 2;
inline void JonGUIState::clear_system_monotonic_time_us() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.system_monotonic_time_us_ = ::uint64_t{0u};
}
inline ::uint64_t JonGUIState::system_monotonic_time_us() const {
  // @@protoc_insertion_point(field_get:ser.JonGUIState.system_monotonic_time_us)
  return _internal_system_monotonic_time_us();
}
inline void JonGUIState::set_system_monotonic_time_us(::uint64_t value) {
  _internal_set_system_monotonic_time_us(value);
  // @@protoc_insertion_point(field_set:ser.JonGUIState.system_monotonic_time_us)
}
inline ::uint64_t JonGUIState::_internal_system_monotonic_time_us() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.system_monotonic_time_us_;
}
inline void JonGUIState::_internal_set_system_monotonic_time_us(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.system_monotonic_time_us_ = value;
}

// .ser.JonGuiDataSystem system = 13;
inline bool JonGUIState::has_system() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.system_ != nullptr);
  return value;
}
inline const ::ser::JonGuiDataSystem& JonGUIState::_internal_system() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ser::JonGuiDataSystem* p = _impl_.system_;
  return p != nullptr ? *p : reinterpret_cast<const ::ser::JonGuiDataSystem&>(::ser::_JonGuiDataSystem_default_instance_);
}
inline const ::ser::JonGuiDataSystem& JonGUIState::system() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ser.JonGUIState.system)
  return _internal_system();
}
inline void JonGUIState::unsafe_arena_set_allocated_system(::ser::JonGuiDataSystem* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.system_);
  }
  _impl_.system_ = reinterpret_cast<::ser::JonGuiDataSystem*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ser.JonGUIState.system)
}
inline ::ser::JonGuiDataSystem* JonGUIState::release_system() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ser::JonGuiDataSystem* released = _impl_.system_;
  _impl_.system_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ser::JonGuiDataSystem* JonGUIState::unsafe_arena_release_system() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ser.JonGUIState.system)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ser::JonGuiDataSystem* temp = _impl_.system_;
  _impl_.system_ = nullptr;
  return temp;
}
inline ::ser::JonGuiDataSystem* JonGUIState::_internal_mutable_system() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.system_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ser::JonGuiDataSystem>(GetArena());
    _impl_.system_ = reinterpret_cast<::ser::JonGuiDataSystem*>(p);
  }
  return _impl_.system_;
}
inline ::ser::JonGuiDataSystem* JonGUIState::mutable_system() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ser::JonGuiDataSystem* _msg = _internal_mutable_system();
  // @@protoc_insertion_point(field_mutable:ser.JonGUIState.system)
  return _msg;
}
inline void JonGUIState::set_allocated_system(::ser::JonGuiDataSystem* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.system_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.system_ = reinterpret_cast<::ser::JonGuiDataSystem*>(value);
  // @@protoc_insertion_point(field_set_allocated:ser.JonGUIState.system)
}

// .ser.JonGuiDataMeteo meteo_internal = 14;
inline bool JonGUIState::has_meteo_internal() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.meteo_internal_ != nullptr);
  return value;
}
inline const ::ser::JonGuiDataMeteo& JonGUIState::_internal_meteo_internal() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ser::JonGuiDataMeteo* p = _impl_.meteo_internal_;
  return p != nullptr ? *p : reinterpret_cast<const ::ser::JonGuiDataMeteo&>(::ser::_JonGuiDataMeteo_default_instance_);
}
inline const ::ser::JonGuiDataMeteo& JonGUIState::meteo_internal() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ser.JonGUIState.meteo_internal)
  return _internal_meteo_internal();
}
inline void JonGUIState::unsafe_arena_set_allocated_meteo_internal(::ser::JonGuiDataMeteo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.meteo_internal_);
  }
  _impl_.meteo_internal_ = reinterpret_cast<::ser::JonGuiDataMeteo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ser.JonGUIState.meteo_internal)
}
inline ::ser::JonGuiDataMeteo* JonGUIState::release_meteo_internal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ser::JonGuiDataMeteo* released = _impl_.meteo_internal_;
  _impl_.meteo_internal_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ser::JonGuiDataMeteo* JonGUIState::unsafe_arena_release_meteo_internal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ser.JonGUIState.meteo_internal)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ser::JonGuiDataMeteo* temp = _impl_.meteo_internal_;
  _impl_.meteo_internal_ = nullptr;
  return temp;
}
inline ::ser::JonGuiDataMeteo* JonGUIState::_internal_mutable_meteo_internal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.meteo_internal_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ser::JonGuiDataMeteo>(GetArena());
    _impl_.meteo_internal_ = reinterpret_cast<::ser::JonGuiDataMeteo*>(p);
  }
  return _impl_.meteo_internal_;
}
inline ::ser::JonGuiDataMeteo* JonGUIState::mutable_meteo_internal() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::ser::JonGuiDataMeteo* _msg = _internal_mutable_meteo_internal();
  // @@protoc_insertion_point(field_mutable:ser.JonGUIState.meteo_internal)
  return _msg;
}
inline void JonGUIState::set_allocated_meteo_internal(::ser::JonGuiDataMeteo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.meteo_internal_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.meteo_internal_ = reinterpret_cast<::ser::JonGuiDataMeteo*>(value);
  // @@protoc_insertion_point(field_set_allocated:ser.JonGUIState.meteo_internal)
}

// .ser.JonGuiDataLrf lrf = 15;
inline bool JonGUIState::has_lrf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lrf_ != nullptr);
  return value;
}
inline const ::ser::JonGuiDataLrf& JonGUIState::_internal_lrf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ser::JonGuiDataLrf* p = _impl_.lrf_;
  return p != nullptr ? *p : reinterpret_cast<const ::ser::JonGuiDataLrf&>(::ser::_JonGuiDataLrf_default_instance_);
}
inline const ::ser::JonGuiDataLrf& JonGUIState::lrf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ser.JonGUIState.lrf)
  return _internal_lrf();
}
inline void JonGUIState::unsafe_arena_set_allocated_lrf(::ser::JonGuiDataLrf* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lrf_);
  }
  _impl_.lrf_ = reinterpret_cast<::ser::JonGuiDataLrf*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ser.JonGUIState.lrf)
}
inline ::ser::JonGuiDataLrf* JonGUIState::release_lrf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ser::JonGuiDataLrf* released = _impl_.lrf_;
  _impl_.lrf_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ser::JonGuiDataLrf* JonGUIState::unsafe_arena_release_lrf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ser.JonGUIState.lrf)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ser::JonGuiDataLrf* temp = _impl_.lrf_;
  _impl_.lrf_ = nullptr;
  return temp;
}
inline ::ser::JonGuiDataLrf* JonGUIState::_internal_mutable_lrf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lrf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ser::JonGuiDataLrf>(GetArena());
    _impl_.lrf_ = reinterpret_cast<::ser::JonGuiDataLrf*>(p);
  }
  return _impl_.lrf_;
}
inline ::ser::JonGuiDataLrf* JonGUIState::mutable_lrf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::ser::JonGuiDataLrf* _msg = _internal_mutable_lrf();
  // @@protoc_insertion_point(field_mutable:ser.JonGUIState.lrf)
  return _msg;
}
inline void JonGUIState::set_allocated_lrf(::ser::JonGuiDataLrf* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lrf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.lrf_ = reinterpret_cast<::ser::JonGuiDataLrf*>(value);
  // @@protoc_insertion_point(field_set_allocated:ser.JonGUIState.lrf)
}

// .ser.JonGuiDataTime time = 16;
inline bool JonGUIState::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::ser::JonGuiDataTime& JonGUIState::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ser::JonGuiDataTime* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::ser::JonGuiDataTime&>(::ser::_JonGuiDataTime_default_instance_);
}
inline const ::ser::JonGuiDataTime& JonGUIState::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ser.JonGUIState.time)
  return _internal_time();
}
inline void JonGUIState::unsafe_arena_set_allocated_time(::ser::JonGuiDataTime* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::ser::JonGuiDataTime*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ser.JonGUIState.time)
}
inline ::ser::JonGuiDataTime* JonGUIState::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ser::JonGuiDataTime* released = _impl_.time_;
  _impl_.time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ser::JonGuiDataTime* JonGUIState::unsafe_arena_release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ser.JonGUIState.time)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ser::JonGuiDataTime* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::ser::JonGuiDataTime* JonGUIState::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ser::JonGuiDataTime>(GetArena());
    _impl_.time_ = reinterpret_cast<::ser::JonGuiDataTime*>(p);
  }
  return _impl_.time_;
}
inline ::ser::JonGuiDataTime* JonGUIState::mutable_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::ser::JonGuiDataTime* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:ser.JonGUIState.time)
  return _msg;
}
inline void JonGUIState::set_allocated_time(::ser::JonGuiDataTime* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.time_ = reinterpret_cast<::ser::JonGuiDataTime*>(value);
  // @@protoc_insertion_point(field_set_allocated:ser.JonGUIState.time)
}

// .ser.JonGuiDataGps gps = 17;
inline bool JonGUIState::has_gps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.gps_ != nullptr);
  return value;
}
inline const ::ser::JonGuiDataGps& JonGUIState::_internal_gps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ser::JonGuiDataGps* p = _impl_.gps_;
  return p != nullptr ? *p : reinterpret_cast<const ::ser::JonGuiDataGps&>(::ser::_JonGuiDataGps_default_instance_);
}
inline const ::ser::JonGuiDataGps& JonGUIState::gps() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ser.JonGUIState.gps)
  return _internal_gps();
}
inline void JonGUIState::unsafe_arena_set_allocated_gps(::ser::JonGuiDataGps* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gps_);
  }
  _impl_.gps_ = reinterpret_cast<::ser::JonGuiDataGps*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ser.JonGUIState.gps)
}
inline ::ser::JonGuiDataGps* JonGUIState::release_gps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::ser::JonGuiDataGps* released = _impl_.gps_;
  _impl_.gps_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ser::JonGuiDataGps* JonGUIState::unsafe_arena_release_gps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ser.JonGUIState.gps)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::ser::JonGuiDataGps* temp = _impl_.gps_;
  _impl_.gps_ = nullptr;
  return temp;
}
inline ::ser::JonGuiDataGps* JonGUIState::_internal_mutable_gps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gps_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ser::JonGuiDataGps>(GetArena());
    _impl_.gps_ = reinterpret_cast<::ser::JonGuiDataGps*>(p);
  }
  return _impl_.gps_;
}
inline ::ser::JonGuiDataGps* JonGUIState::mutable_gps() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::ser::JonGuiDataGps* _msg = _internal_mutable_gps();
  // @@protoc_insertion_point(field_mutable:ser.JonGUIState.gps)
  return _msg;
}
inline void JonGUIState::set_allocated_gps(::ser::JonGuiDataGps* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gps_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.gps_ = reinterpret_cast<::ser::JonGuiDataGps*>(value);
  // @@protoc_insertion_point(field_set_allocated:ser.JonGUIState.gps)
}

// .ser.JonGuiDataCompass compass = 18;
inline bool JonGUIState::has_compass() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.compass_ != nullptr);
  return value;
}
inline const ::ser::JonGuiDataCompass& JonGUIState::_internal_compass() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ser::JonGuiDataCompass* p = _impl_.compass_;
  return p != nullptr ? *p : reinterpret_cast<const ::ser::JonGuiDataCompass&>(::ser::_JonGuiDataCompass_default_instance_);
}
inline const ::ser::JonGuiDataCompass& JonGUIState::compass() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ser.JonGUIState.compass)
  return _internal_compass();
}
inline void JonGUIState::unsafe_arena_set_allocated_compass(::ser::JonGuiDataCompass* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.compass_);
  }
  _impl_.compass_ = reinterpret_cast<::ser::JonGuiDataCompass*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ser.JonGUIState.compass)
}
inline ::ser::JonGuiDataCompass* JonGUIState::release_compass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::ser::JonGuiDataCompass* released = _impl_.compass_;
  _impl_.compass_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ser::JonGuiDataCompass* JonGUIState::unsafe_arena_release_compass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ser.JonGUIState.compass)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::ser::JonGuiDataCompass* temp = _impl_.compass_;
  _impl_.compass_ = nullptr;
  return temp;
}
inline ::ser::JonGuiDataCompass* JonGUIState::_internal_mutable_compass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.compass_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ser::JonGuiDataCompass>(GetArena());
    _impl_.compass_ = reinterpret_cast<::ser::JonGuiDataCompass*>(p);
  }
  return _impl_.compass_;
}
inline ::ser::JonGuiDataCompass* JonGUIState::mutable_compass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::ser::JonGuiDataCompass* _msg = _internal_mutable_compass();
  // @@protoc_insertion_point(field_mutable:ser.JonGUIState.compass)
  return _msg;
}
inline void JonGUIState::set_allocated_compass(::ser::JonGuiDataCompass* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.compass_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.compass_ = reinterpret_cast<::ser::JonGuiDataCompass*>(value);
  // @@protoc_insertion_point(field_set_allocated:ser.JonGUIState.compass)
}

// .ser.JonGuiDataRotary rotary = 19;
inline bool JonGUIState::has_rotary() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotary_ != nullptr);
  return value;
}
inline const ::ser::JonGuiDataRotary& JonGUIState::_internal_rotary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ser::JonGuiDataRotary* p = _impl_.rotary_;
  return p != nullptr ? *p : reinterpret_cast<const ::ser::JonGuiDataRotary&>(::ser::_JonGuiDataRotary_default_instance_);
}
inline const ::ser::JonGuiDataRotary& JonGUIState::rotary() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ser.JonGUIState.rotary)
  return _internal_rotary();
}
inline void JonGUIState::unsafe_arena_set_allocated_rotary(::ser::JonGuiDataRotary* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotary_);
  }
  _impl_.rotary_ = reinterpret_cast<::ser::JonGuiDataRotary*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ser.JonGUIState.rotary)
}
inline ::ser::JonGuiDataRotary* JonGUIState::release_rotary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::ser::JonGuiDataRotary* released = _impl_.rotary_;
  _impl_.rotary_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ser::JonGuiDataRotary* JonGUIState::unsafe_arena_release_rotary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ser.JonGUIState.rotary)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::ser::JonGuiDataRotary* temp = _impl_.rotary_;
  _impl_.rotary_ = nullptr;
  return temp;
}
inline ::ser::JonGuiDataRotary* JonGUIState::_internal_mutable_rotary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotary_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ser::JonGuiDataRotary>(GetArena());
    _impl_.rotary_ = reinterpret_cast<::ser::JonGuiDataRotary*>(p);
  }
  return _impl_.rotary_;
}
inline ::ser::JonGuiDataRotary* JonGUIState::mutable_rotary() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::ser::JonGuiDataRotary* _msg = _internal_mutable_rotary();
  // @@protoc_insertion_point(field_mutable:ser.JonGUIState.rotary)
  return _msg;
}
inline void JonGUIState::set_allocated_rotary(::ser::JonGuiDataRotary* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotary_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.rotary_ = reinterpret_cast<::ser::JonGuiDataRotary*>(value);
  // @@protoc_insertion_point(field_set_allocated:ser.JonGUIState.rotary)
}

// .ser.JonGuiDataCameraDay camera_day = 20;
inline bool JonGUIState::has_camera_day() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_day_ != nullptr);
  return value;
}
inline const ::ser::JonGuiDataCameraDay& JonGUIState::_internal_camera_day() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ser::JonGuiDataCameraDay* p = _impl_.camera_day_;
  return p != nullptr ? *p : reinterpret_cast<const ::ser::JonGuiDataCameraDay&>(::ser::_JonGuiDataCameraDay_default_instance_);
}
inline const ::ser::JonGuiDataCameraDay& JonGUIState::camera_day() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ser.JonGUIState.camera_day)
  return _internal_camera_day();
}
inline void JonGUIState::unsafe_arena_set_allocated_camera_day(::ser::JonGuiDataCameraDay* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_day_);
  }
  _impl_.camera_day_ = reinterpret_cast<::ser::JonGuiDataCameraDay*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ser.JonGUIState.camera_day)
}
inline ::ser::JonGuiDataCameraDay* JonGUIState::release_camera_day() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::ser::JonGuiDataCameraDay* released = _impl_.camera_day_;
  _impl_.camera_day_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ser::JonGuiDataCameraDay* JonGUIState::unsafe_arena_release_camera_day() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ser.JonGUIState.camera_day)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::ser::JonGuiDataCameraDay* temp = _impl_.camera_day_;
  _impl_.camera_day_ = nullptr;
  return temp;
}
inline ::ser::JonGuiDataCameraDay* JonGUIState::_internal_mutable_camera_day() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_day_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ser::JonGuiDataCameraDay>(GetArena());
    _impl_.camera_day_ = reinterpret_cast<::ser::JonGuiDataCameraDay*>(p);
  }
  return _impl_.camera_day_;
}
inline ::ser::JonGuiDataCameraDay* JonGUIState::mutable_camera_day() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::ser::JonGuiDataCameraDay* _msg = _internal_mutable_camera_day();
  // @@protoc_insertion_point(field_mutable:ser.JonGUIState.camera_day)
  return _msg;
}
inline void JonGUIState::set_allocated_camera_day(::ser::JonGuiDataCameraDay* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_day_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.camera_day_ = reinterpret_cast<::ser::JonGuiDataCameraDay*>(value);
  // @@protoc_insertion_point(field_set_allocated:ser.JonGUIState.camera_day)
}

// .ser.JonGuiDataCameraHeat camera_heat = 21;
inline bool JonGUIState::has_camera_heat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.camera_heat_ != nullptr);
  return value;
}
inline const ::ser::JonGuiDataCameraHeat& JonGUIState::_internal_camera_heat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ser::JonGuiDataCameraHeat* p = _impl_.camera_heat_;
  return p != nullptr ? *p : reinterpret_cast<const ::ser::JonGuiDataCameraHeat&>(::ser::_JonGuiDataCameraHeat_default_instance_);
}
inline const ::ser::JonGuiDataCameraHeat& JonGUIState::camera_heat() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ser.JonGUIState.camera_heat)
  return _internal_camera_heat();
}
inline void JonGUIState::unsafe_arena_set_allocated_camera_heat(::ser::JonGuiDataCameraHeat* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_heat_);
  }
  _impl_.camera_heat_ = reinterpret_cast<::ser::JonGuiDataCameraHeat*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ser.JonGUIState.camera_heat)
}
inline ::ser::JonGuiDataCameraHeat* JonGUIState::release_camera_heat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::ser::JonGuiDataCameraHeat* released = _impl_.camera_heat_;
  _impl_.camera_heat_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ser::JonGuiDataCameraHeat* JonGUIState::unsafe_arena_release_camera_heat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ser.JonGUIState.camera_heat)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::ser::JonGuiDataCameraHeat* temp = _impl_.camera_heat_;
  _impl_.camera_heat_ = nullptr;
  return temp;
}
inline ::ser::JonGuiDataCameraHeat* JonGUIState::_internal_mutable_camera_heat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.camera_heat_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ser::JonGuiDataCameraHeat>(GetArena());
    _impl_.camera_heat_ = reinterpret_cast<::ser::JonGuiDataCameraHeat*>(p);
  }
  return _impl_.camera_heat_;
}
inline ::ser::JonGuiDataCameraHeat* JonGUIState::mutable_camera_heat() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::ser::JonGuiDataCameraHeat* _msg = _internal_mutable_camera_heat();
  // @@protoc_insertion_point(field_mutable:ser.JonGUIState.camera_heat)
  return _msg;
}
inline void JonGUIState::set_allocated_camera_heat(::ser::JonGuiDataCameraHeat* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.camera_heat_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.camera_heat_ = reinterpret_cast<::ser::JonGuiDataCameraHeat*>(value);
  // @@protoc_insertion_point(field_set_allocated:ser.JonGUIState.camera_heat)
}

// .ser.JonGuiDataCompassCalibration compass_calibration = 22;
inline bool JonGUIState::has_compass_calibration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.compass_calibration_ != nullptr);
  return value;
}
inline const ::ser::JonGuiDataCompassCalibration& JonGUIState::_internal_compass_calibration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ser::JonGuiDataCompassCalibration* p = _impl_.compass_calibration_;
  return p != nullptr ? *p : reinterpret_cast<const ::ser::JonGuiDataCompassCalibration&>(::ser::_JonGuiDataCompassCalibration_default_instance_);
}
inline const ::ser::JonGuiDataCompassCalibration& JonGUIState::compass_calibration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ser.JonGUIState.compass_calibration)
  return _internal_compass_calibration();
}
inline void JonGUIState::unsafe_arena_set_allocated_compass_calibration(::ser::JonGuiDataCompassCalibration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.compass_calibration_);
  }
  _impl_.compass_calibration_ = reinterpret_cast<::ser::JonGuiDataCompassCalibration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ser.JonGUIState.compass_calibration)
}
inline ::ser::JonGuiDataCompassCalibration* JonGUIState::release_compass_calibration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::ser::JonGuiDataCompassCalibration* released = _impl_.compass_calibration_;
  _impl_.compass_calibration_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ser::JonGuiDataCompassCalibration* JonGUIState::unsafe_arena_release_compass_calibration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ser.JonGUIState.compass_calibration)

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::ser::JonGuiDataCompassCalibration* temp = _impl_.compass_calibration_;
  _impl_.compass_calibration_ = nullptr;
  return temp;
}
inline ::ser::JonGuiDataCompassCalibration* JonGUIState::_internal_mutable_compass_calibration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.compass_calibration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ser::JonGuiDataCompassCalibration>(GetArena());
    _impl_.compass_calibration_ = reinterpret_cast<::ser::JonGuiDataCompassCalibration*>(p);
  }
  return _impl_.compass_calibration_;
}
inline ::ser::JonGuiDataCompassCalibration* JonGUIState::mutable_compass_calibration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000200u;
  ::ser::JonGuiDataCompassCalibration* _msg = _internal_mutable_compass_calibration();
  // @@protoc_insertion_point(field_mutable:ser.JonGUIState.compass_calibration)
  return _msg;
}
inline void JonGUIState::set_allocated_compass_calibration(::ser::JonGuiDataCompassCalibration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.compass_calibration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }

  _impl_.compass_calibration_ = reinterpret_cast<::ser::JonGuiDataCompassCalibration*>(value);
  // @@protoc_insertion_point(field_set_allocated:ser.JonGUIState.compass_calibration)
}

// .ser.JonGuiDataRecOsd rec_osd = 23;
inline bool JonGUIState::has_rec_osd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rec_osd_ != nullptr);
  return value;
}
inline const ::ser::JonGuiDataRecOsd& JonGUIState::_internal_rec_osd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ser::JonGuiDataRecOsd* p = _impl_.rec_osd_;
  return p != nullptr ? *p : reinterpret_cast<const ::ser::JonGuiDataRecOsd&>(::ser::_JonGuiDataRecOsd_default_instance_);
}
inline const ::ser::JonGuiDataRecOsd& JonGUIState::rec_osd() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ser.JonGUIState.rec_osd)
  return _internal_rec_osd();
}
inline void JonGUIState::unsafe_arena_set_allocated_rec_osd(::ser::JonGuiDataRecOsd* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rec_osd_);
  }
  _impl_.rec_osd_ = reinterpret_cast<::ser::JonGuiDataRecOsd*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ser.JonGUIState.rec_osd)
}
inline ::ser::JonGuiDataRecOsd* JonGUIState::release_rec_osd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::ser::JonGuiDataRecOsd* released = _impl_.rec_osd_;
  _impl_.rec_osd_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ser::JonGuiDataRecOsd* JonGUIState::unsafe_arena_release_rec_osd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ser.JonGUIState.rec_osd)

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::ser::JonGuiDataRecOsd* temp = _impl_.rec_osd_;
  _impl_.rec_osd_ = nullptr;
  return temp;
}
inline ::ser::JonGuiDataRecOsd* JonGUIState::_internal_mutable_rec_osd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rec_osd_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ser::JonGuiDataRecOsd>(GetArena());
    _impl_.rec_osd_ = reinterpret_cast<::ser::JonGuiDataRecOsd*>(p);
  }
  return _impl_.rec_osd_;
}
inline ::ser::JonGuiDataRecOsd* JonGUIState::mutable_rec_osd() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000400u;
  ::ser::JonGuiDataRecOsd* _msg = _internal_mutable_rec_osd();
  // @@protoc_insertion_point(field_mutable:ser.JonGUIState.rec_osd)
  return _msg;
}
inline void JonGUIState::set_allocated_rec_osd(::ser::JonGuiDataRecOsd* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rec_osd_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }

  _impl_.rec_osd_ = reinterpret_cast<::ser::JonGuiDataRecOsd*>(value);
  // @@protoc_insertion_point(field_set_allocated:ser.JonGUIState.rec_osd)
}

// .ser.JonGuiDataDayCamGlassHeater day_cam_glass_heater = 24;
inline bool JonGUIState::has_day_cam_glass_heater() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.day_cam_glass_heater_ != nullptr);
  return value;
}
inline const ::ser::JonGuiDataDayCamGlassHeater& JonGUIState::_internal_day_cam_glass_heater() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ser::JonGuiDataDayCamGlassHeater* p = _impl_.day_cam_glass_heater_;
  return p != nullptr ? *p : reinterpret_cast<const ::ser::JonGuiDataDayCamGlassHeater&>(::ser::_JonGuiDataDayCamGlassHeater_default_instance_);
}
inline const ::ser::JonGuiDataDayCamGlassHeater& JonGUIState::day_cam_glass_heater() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ser.JonGUIState.day_cam_glass_heater)
  return _internal_day_cam_glass_heater();
}
inline void JonGUIState::unsafe_arena_set_allocated_day_cam_glass_heater(::ser::JonGuiDataDayCamGlassHeater* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.day_cam_glass_heater_);
  }
  _impl_.day_cam_glass_heater_ = reinterpret_cast<::ser::JonGuiDataDayCamGlassHeater*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ser.JonGUIState.day_cam_glass_heater)
}
inline ::ser::JonGuiDataDayCamGlassHeater* JonGUIState::release_day_cam_glass_heater() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::ser::JonGuiDataDayCamGlassHeater* released = _impl_.day_cam_glass_heater_;
  _impl_.day_cam_glass_heater_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ser::JonGuiDataDayCamGlassHeater* JonGUIState::unsafe_arena_release_day_cam_glass_heater() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ser.JonGUIState.day_cam_glass_heater)

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::ser::JonGuiDataDayCamGlassHeater* temp = _impl_.day_cam_glass_heater_;
  _impl_.day_cam_glass_heater_ = nullptr;
  return temp;
}
inline ::ser::JonGuiDataDayCamGlassHeater* JonGUIState::_internal_mutable_day_cam_glass_heater() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.day_cam_glass_heater_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ser::JonGuiDataDayCamGlassHeater>(GetArena());
    _impl_.day_cam_glass_heater_ = reinterpret_cast<::ser::JonGuiDataDayCamGlassHeater*>(p);
  }
  return _impl_.day_cam_glass_heater_;
}
inline ::ser::JonGuiDataDayCamGlassHeater* JonGUIState::mutable_day_cam_glass_heater() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000800u;
  ::ser::JonGuiDataDayCamGlassHeater* _msg = _internal_mutable_day_cam_glass_heater();
  // @@protoc_insertion_point(field_mutable:ser.JonGUIState.day_cam_glass_heater)
  return _msg;
}
inline void JonGUIState::set_allocated_day_cam_glass_heater(::ser::JonGuiDataDayCamGlassHeater* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.day_cam_glass_heater_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }

  _impl_.day_cam_glass_heater_ = reinterpret_cast<::ser::JonGuiDataDayCamGlassHeater*>(value);
  // @@protoc_insertion_point(field_set_allocated:ser.JonGUIState.day_cam_glass_heater)
}

// .ser.JonGuiDataActualSpaceTime actual_space_time = 25;
inline bool JonGUIState::has_actual_space_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.actual_space_time_ != nullptr);
  return value;
}
inline const ::ser::JonGuiDataActualSpaceTime& JonGUIState::_internal_actual_space_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ser::JonGuiDataActualSpaceTime* p = _impl_.actual_space_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::ser::JonGuiDataActualSpaceTime&>(::ser::_JonGuiDataActualSpaceTime_default_instance_);
}
inline const ::ser::JonGuiDataActualSpaceTime& JonGUIState::actual_space_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ser.JonGUIState.actual_space_time)
  return _internal_actual_space_time();
}
inline void JonGUIState::unsafe_arena_set_allocated_actual_space_time(::ser::JonGuiDataActualSpaceTime* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.actual_space_time_);
  }
  _impl_.actual_space_time_ = reinterpret_cast<::ser::JonGuiDataActualSpaceTime*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ser.JonGUIState.actual_space_time)
}
inline ::ser::JonGuiDataActualSpaceTime* JonGUIState::release_actual_space_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::ser::JonGuiDataActualSpaceTime* released = _impl_.actual_space_time_;
  _impl_.actual_space_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ser::JonGuiDataActualSpaceTime* JonGUIState::unsafe_arena_release_actual_space_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ser.JonGUIState.actual_space_time)

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::ser::JonGuiDataActualSpaceTime* temp = _impl_.actual_space_time_;
  _impl_.actual_space_time_ = nullptr;
  return temp;
}
inline ::ser::JonGuiDataActualSpaceTime* JonGUIState::_internal_mutable_actual_space_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.actual_space_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ser::JonGuiDataActualSpaceTime>(GetArena());
    _impl_.actual_space_time_ = reinterpret_cast<::ser::JonGuiDataActualSpaceTime*>(p);
  }
  return _impl_.actual_space_time_;
}
inline ::ser::JonGuiDataActualSpaceTime* JonGUIState::mutable_actual_space_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00001000u;
  ::ser::JonGuiDataActualSpaceTime* _msg = _internal_mutable_actual_space_time();
  // @@protoc_insertion_point(field_mutable:ser.JonGUIState.actual_space_time)
  return _msg;
}
inline void JonGUIState::set_allocated_actual_space_time(::ser::JonGuiDataActualSpaceTime* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.actual_space_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }

  _impl_.actual_space_time_ = reinterpret_cast<::ser::JonGuiDataActualSpaceTime*>(value);
  // @@protoc_insertion_point(field_set_allocated:ser.JonGUIState.actual_space_time)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace ser


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // jon_5fshared_5fdata_2eproto_2epb_2eh
