syntax = "proto3";

option go_package = "git-codecommit.eu-central-1.amazonaws.com/v1/repos/jettison/jonp/cmd/cv";

package cmd.CV;

import "jon_shared_data_types.proto";

message Root {
  oneof cmd {
    option (buf.validate.oneof).required = true;
    SetAutoFocus set_auto_focus = 1;
    StartTrackNDC start_track_ndc = 2;
    StopTrack stop_track = 3;
    VampireModeEnable vampire_mode_enable = 4;
    VampireModeDisable vampire_mode_disable = 5;
    StabilizationModeEnable stabilization_mode_enable = 6;
    StabilizationModeDisable stabilization_mode_disable = 7;
    DumpStart dump_start = 8;
    DumpStop dump_stop = 9;
    RecognitionModeEnable recognition_mode_enable = 10;
    RecognitionModeDisable recognition_mode_disable = 11;
  }
}

message VampireModeEnable {
}

message DumpStart {
}

message DumpStop {
}

message VampireModeDisable {
}

message StabilizationModeEnable {
}

message StabilizationModeDisable {
}

message RecognitionModeEnable {
}

message RecognitionModeDisable {
}

message SetAutoFocus {
  ser.JonGuiDataVideoChannel channel = 1 [(buf.validate.field).enum = {
    defined_only: true,
    not_in: [0]
  }];
  bool value = 2;
}

message StartTrackNDC {
  ser.JonGuiDataVideoChannel channel = 1 [(buf.validate.field).enum = {
    defined_only: true,
    not_in: [0]
  }];
  double x = 2 [(buf.validate.field).double = {
    gte: -1.0,
    lte: 1.0
  }];
  double y = 3 [(buf.validate.field).double = {
    gte: -1.0,
    lte: 1.0
  }];
  uint64 frame_time = 4;
  uint64 state_time = 5;  // System monotonic time from state when user performed action
}

message StopTrack {}
