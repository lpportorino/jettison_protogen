// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: jon_shared_cmd_rotary.proto
// Protobuf C++ Version: 5.29.2

#ifndef jon_5fshared_5fcmd_5frotary_2eproto_2epb_2eh
#define jon_5fshared_5fcmd_5frotary_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "jon_shared_data_types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_jon_5fshared_5fcmd_5frotary_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_jon_5fshared_5fcmd_5frotary_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_jon_5fshared_5fcmd_5frotary_2eproto;
namespace cmd {
namespace RotaryPlatform {
class Axis;
struct AxisDefaultTypeInternal;
extern AxisDefaultTypeInternal _Axis_default_instance_;
class Azimuth;
struct AzimuthDefaultTypeInternal;
extern AzimuthDefaultTypeInternal _Azimuth_default_instance_;
class Elevation;
struct ElevationDefaultTypeInternal;
extern ElevationDefaultTypeInternal _Elevation_default_instance_;
class GetMeteo;
struct GetMeteoDefaultTypeInternal;
extern GetMeteoDefaultTypeInternal _GetMeteo_default_instance_;
class Halt;
struct HaltDefaultTypeInternal;
extern HaltDefaultTypeInternal _Halt_default_instance_;
class HaltAzimuth;
struct HaltAzimuthDefaultTypeInternal;
extern HaltAzimuthDefaultTypeInternal _HaltAzimuth_default_instance_;
class HaltElevation;
struct HaltElevationDefaultTypeInternal;
extern HaltElevationDefaultTypeInternal _HaltElevation_default_instance_;
class Root;
struct RootDefaultTypeInternal;
extern RootDefaultTypeInternal _Root_default_instance_;
class RotateAzimuth;
struct RotateAzimuthDefaultTypeInternal;
extern RotateAzimuthDefaultTypeInternal _RotateAzimuth_default_instance_;
class RotateAzimuthRelative;
struct RotateAzimuthRelativeDefaultTypeInternal;
extern RotateAzimuthRelativeDefaultTypeInternal _RotateAzimuthRelative_default_instance_;
class RotateAzimuthRelativeSet;
struct RotateAzimuthRelativeSetDefaultTypeInternal;
extern RotateAzimuthRelativeSetDefaultTypeInternal _RotateAzimuthRelativeSet_default_instance_;
class RotateAzimuthTo;
struct RotateAzimuthToDefaultTypeInternal;
extern RotateAzimuthToDefaultTypeInternal _RotateAzimuthTo_default_instance_;
class RotateElevation;
struct RotateElevationDefaultTypeInternal;
extern RotateElevationDefaultTypeInternal _RotateElevation_default_instance_;
class RotateElevationRelative;
struct RotateElevationRelativeDefaultTypeInternal;
extern RotateElevationRelativeDefaultTypeInternal _RotateElevationRelative_default_instance_;
class RotateElevationRelativeSet;
struct RotateElevationRelativeSetDefaultTypeInternal;
extern RotateElevationRelativeSetDefaultTypeInternal _RotateElevationRelativeSet_default_instance_;
class RotateElevationTo;
struct RotateElevationToDefaultTypeInternal;
extern RotateElevationToDefaultTypeInternal _RotateElevationTo_default_instance_;
class RotateToGPS;
struct RotateToGPSDefaultTypeInternal;
extern RotateToGPSDefaultTypeInternal _RotateToGPS_default_instance_;
class RotateToNDC;
struct RotateToNDCDefaultTypeInternal;
extern RotateToNDCDefaultTypeInternal _RotateToNDC_default_instance_;
class ScanAddNode;
struct ScanAddNodeDefaultTypeInternal;
extern ScanAddNodeDefaultTypeInternal _ScanAddNode_default_instance_;
class ScanDeleteNode;
struct ScanDeleteNodeDefaultTypeInternal;
extern ScanDeleteNodeDefaultTypeInternal _ScanDeleteNode_default_instance_;
class ScanNext;
struct ScanNextDefaultTypeInternal;
extern ScanNextDefaultTypeInternal _ScanNext_default_instance_;
class ScanPause;
struct ScanPauseDefaultTypeInternal;
extern ScanPauseDefaultTypeInternal _ScanPause_default_instance_;
class ScanPrev;
struct ScanPrevDefaultTypeInternal;
extern ScanPrevDefaultTypeInternal _ScanPrev_default_instance_;
class ScanRefreshNodeList;
struct ScanRefreshNodeListDefaultTypeInternal;
extern ScanRefreshNodeListDefaultTypeInternal _ScanRefreshNodeList_default_instance_;
class ScanSelectNode;
struct ScanSelectNodeDefaultTypeInternal;
extern ScanSelectNodeDefaultTypeInternal _ScanSelectNode_default_instance_;
class ScanStart;
struct ScanStartDefaultTypeInternal;
extern ScanStartDefaultTypeInternal _ScanStart_default_instance_;
class ScanStop;
struct ScanStopDefaultTypeInternal;
extern ScanStopDefaultTypeInternal _ScanStop_default_instance_;
class ScanUnpause;
struct ScanUnpauseDefaultTypeInternal;
extern ScanUnpauseDefaultTypeInternal _ScanUnpause_default_instance_;
class ScanUpdateNode;
struct ScanUpdateNodeDefaultTypeInternal;
extern ScanUpdateNodeDefaultTypeInternal _ScanUpdateNode_default_instance_;
class SetAzimuthValue;
struct SetAzimuthValueDefaultTypeInternal;
extern SetAzimuthValueDefaultTypeInternal _SetAzimuthValue_default_instance_;
class SetElevationValue;
struct SetElevationValueDefaultTypeInternal;
extern SetElevationValueDefaultTypeInternal _SetElevationValue_default_instance_;
class SetMode;
struct SetModeDefaultTypeInternal;
extern SetModeDefaultTypeInternal _SetMode_default_instance_;
class SetOriginGPS;
struct SetOriginGPSDefaultTypeInternal;
extern SetOriginGPSDefaultTypeInternal _SetOriginGPS_default_instance_;
class SetPlatformAzimuth;
struct SetPlatformAzimuthDefaultTypeInternal;
extern SetPlatformAzimuthDefaultTypeInternal _SetPlatformAzimuth_default_instance_;
class SetPlatformBank;
struct SetPlatformBankDefaultTypeInternal;
extern SetPlatformBankDefaultTypeInternal _SetPlatformBank_default_instance_;
class SetPlatformElevation;
struct SetPlatformElevationDefaultTypeInternal;
extern SetPlatformElevationDefaultTypeInternal _SetPlatformElevation_default_instance_;
class Start;
struct StartDefaultTypeInternal;
extern StartDefaultTypeInternal _Start_default_instance_;
class Stop;
struct StopDefaultTypeInternal;
extern StopDefaultTypeInternal _Stop_default_instance_;
class setUseRotaryAsCompass;
struct setUseRotaryAsCompassDefaultTypeInternal;
extern setUseRotaryAsCompassDefaultTypeInternal _setUseRotaryAsCompass_default_instance_;
}  // namespace RotaryPlatform
}  // namespace cmd
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cmd {
namespace RotaryPlatform {

// ===================================================================


// -------------------------------------------------------------------

class setUseRotaryAsCompass final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.setUseRotaryAsCompass) */ {
 public:
  inline setUseRotaryAsCompass() : setUseRotaryAsCompass(nullptr) {}
  ~setUseRotaryAsCompass() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(setUseRotaryAsCompass* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(setUseRotaryAsCompass));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR setUseRotaryAsCompass(
      ::google::protobuf::internal::ConstantInitialized);

  inline setUseRotaryAsCompass(const setUseRotaryAsCompass& from) : setUseRotaryAsCompass(nullptr, from) {}
  inline setUseRotaryAsCompass(setUseRotaryAsCompass&& from) noexcept
      : setUseRotaryAsCompass(nullptr, std::move(from)) {}
  inline setUseRotaryAsCompass& operator=(const setUseRotaryAsCompass& from) {
    CopyFrom(from);
    return *this;
  }
  inline setUseRotaryAsCompass& operator=(setUseRotaryAsCompass&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const setUseRotaryAsCompass& default_instance() {
    return *internal_default_instance();
  }
  static inline const setUseRotaryAsCompass* internal_default_instance() {
    return reinterpret_cast<const setUseRotaryAsCompass*>(
        &_setUseRotaryAsCompass_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(setUseRotaryAsCompass& a, setUseRotaryAsCompass& b) { a.Swap(&b); }
  inline void Swap(setUseRotaryAsCompass* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(setUseRotaryAsCompass* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  setUseRotaryAsCompass* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<setUseRotaryAsCompass>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const setUseRotaryAsCompass& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const setUseRotaryAsCompass& from) { setUseRotaryAsCompass::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(setUseRotaryAsCompass* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.setUseRotaryAsCompass"; }

 protected:
  explicit setUseRotaryAsCompass(::google::protobuf::Arena* arena);
  setUseRotaryAsCompass(::google::protobuf::Arena* arena, const setUseRotaryAsCompass& from);
  setUseRotaryAsCompass(::google::protobuf::Arena* arena, setUseRotaryAsCompass&& from) noexcept
      : setUseRotaryAsCompass(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFlagFieldNumber = 1,
  };
  // bool flag = 1;
  void clear_flag() ;
  bool flag() const;
  void set_flag(bool value);

  private:
  bool _internal_flag() const;
  void _internal_set_flag(bool value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.setUseRotaryAsCompass)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const setUseRotaryAsCompass& from_msg);
    bool flag_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class Stop final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.Stop) */ {
 public:
  inline Stop() : Stop(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Stop* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Stop));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Stop(
      ::google::protobuf::internal::ConstantInitialized);

  inline Stop(const Stop& from) : Stop(nullptr, from) {}
  inline Stop(Stop&& from) noexcept
      : Stop(nullptr, std::move(from)) {}
  inline Stop& operator=(const Stop& from) {
    CopyFrom(from);
    return *this;
  }
  inline Stop& operator=(Stop&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Stop& default_instance() {
    return *internal_default_instance();
  }
  static inline const Stop* internal_default_instance() {
    return reinterpret_cast<const Stop*>(
        &_Stop_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(Stop& a, Stop& b) { a.Swap(&b); }
  inline void Swap(Stop* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Stop* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Stop* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<Stop>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Stop& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Stop& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.Stop"; }

 protected:
  explicit Stop(::google::protobuf::Arena* arena);
  Stop(::google::protobuf::Arena* arena, const Stop& from);
  Stop(::google::protobuf::Arena* arena, Stop&& from) noexcept
      : Stop(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.Stop)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Stop& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class Start final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.Start) */ {
 public:
  inline Start() : Start(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Start* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Start));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Start(
      ::google::protobuf::internal::ConstantInitialized);

  inline Start(const Start& from) : Start(nullptr, from) {}
  inline Start(Start&& from) noexcept
      : Start(nullptr, std::move(from)) {}
  inline Start& operator=(const Start& from) {
    CopyFrom(from);
    return *this;
  }
  inline Start& operator=(Start&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Start& default_instance() {
    return *internal_default_instance();
  }
  static inline const Start* internal_default_instance() {
    return reinterpret_cast<const Start*>(
        &_Start_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(Start& a, Start& b) { a.Swap(&b); }
  inline void Swap(Start* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Start* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Start* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<Start>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Start& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Start& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.Start"; }

 protected:
  explicit Start(::google::protobuf::Arena* arena);
  Start(::google::protobuf::Arena* arena, const Start& from);
  Start(::google::protobuf::Arena* arena, Start&& from) noexcept
      : Start(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.Start)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Start& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class SetPlatformElevation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.SetPlatformElevation) */ {
 public:
  inline SetPlatformElevation() : SetPlatformElevation(nullptr) {}
  ~SetPlatformElevation() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetPlatformElevation* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetPlatformElevation));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetPlatformElevation(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetPlatformElevation(const SetPlatformElevation& from) : SetPlatformElevation(nullptr, from) {}
  inline SetPlatformElevation(SetPlatformElevation&& from) noexcept
      : SetPlatformElevation(nullptr, std::move(from)) {}
  inline SetPlatformElevation& operator=(const SetPlatformElevation& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPlatformElevation& operator=(SetPlatformElevation&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPlatformElevation& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPlatformElevation* internal_default_instance() {
    return reinterpret_cast<const SetPlatformElevation*>(
        &_SetPlatformElevation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(SetPlatformElevation& a, SetPlatformElevation& b) { a.Swap(&b); }
  inline void Swap(SetPlatformElevation* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPlatformElevation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPlatformElevation* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetPlatformElevation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetPlatformElevation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetPlatformElevation& from) { SetPlatformElevation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetPlatformElevation* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.SetPlatformElevation"; }

 protected:
  explicit SetPlatformElevation(::google::protobuf::Arena* arena);
  SetPlatformElevation(::google::protobuf::Arena* arena, const SetPlatformElevation& from);
  SetPlatformElevation(::google::protobuf::Arena* arena, SetPlatformElevation&& from) noexcept
      : SetPlatformElevation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // double value = 1;
  void clear_value() ;
  double value() const;
  void set_value(double value);

  private:
  double _internal_value() const;
  void _internal_set_value(double value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.SetPlatformElevation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetPlatformElevation& from_msg);
    double value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class SetPlatformBank final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.SetPlatformBank) */ {
 public:
  inline SetPlatformBank() : SetPlatformBank(nullptr) {}
  ~SetPlatformBank() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetPlatformBank* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetPlatformBank));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetPlatformBank(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetPlatformBank(const SetPlatformBank& from) : SetPlatformBank(nullptr, from) {}
  inline SetPlatformBank(SetPlatformBank&& from) noexcept
      : SetPlatformBank(nullptr, std::move(from)) {}
  inline SetPlatformBank& operator=(const SetPlatformBank& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPlatformBank& operator=(SetPlatformBank&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPlatformBank& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPlatformBank* internal_default_instance() {
    return reinterpret_cast<const SetPlatformBank*>(
        &_SetPlatformBank_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(SetPlatformBank& a, SetPlatformBank& b) { a.Swap(&b); }
  inline void Swap(SetPlatformBank* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPlatformBank* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPlatformBank* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetPlatformBank>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetPlatformBank& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetPlatformBank& from) { SetPlatformBank::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetPlatformBank* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.SetPlatformBank"; }

 protected:
  explicit SetPlatformBank(::google::protobuf::Arena* arena);
  SetPlatformBank(::google::protobuf::Arena* arena, const SetPlatformBank& from);
  SetPlatformBank(::google::protobuf::Arena* arena, SetPlatformBank&& from) noexcept
      : SetPlatformBank(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // double value = 1;
  void clear_value() ;
  double value() const;
  void set_value(double value);

  private:
  double _internal_value() const;
  void _internal_set_value(double value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.SetPlatformBank)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetPlatformBank& from_msg);
    double value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class SetPlatformAzimuth final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.SetPlatformAzimuth) */ {
 public:
  inline SetPlatformAzimuth() : SetPlatformAzimuth(nullptr) {}
  ~SetPlatformAzimuth() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetPlatformAzimuth* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetPlatformAzimuth));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetPlatformAzimuth(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetPlatformAzimuth(const SetPlatformAzimuth& from) : SetPlatformAzimuth(nullptr, from) {}
  inline SetPlatformAzimuth(SetPlatformAzimuth&& from) noexcept
      : SetPlatformAzimuth(nullptr, std::move(from)) {}
  inline SetPlatformAzimuth& operator=(const SetPlatformAzimuth& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetPlatformAzimuth& operator=(SetPlatformAzimuth&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetPlatformAzimuth& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetPlatformAzimuth* internal_default_instance() {
    return reinterpret_cast<const SetPlatformAzimuth*>(
        &_SetPlatformAzimuth_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(SetPlatformAzimuth& a, SetPlatformAzimuth& b) { a.Swap(&b); }
  inline void Swap(SetPlatformAzimuth* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetPlatformAzimuth* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetPlatformAzimuth* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetPlatformAzimuth>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetPlatformAzimuth& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetPlatformAzimuth& from) { SetPlatformAzimuth::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetPlatformAzimuth* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.SetPlatformAzimuth"; }

 protected:
  explicit SetPlatformAzimuth(::google::protobuf::Arena* arena);
  SetPlatformAzimuth(::google::protobuf::Arena* arena, const SetPlatformAzimuth& from);
  SetPlatformAzimuth(::google::protobuf::Arena* arena, SetPlatformAzimuth&& from) noexcept
      : SetPlatformAzimuth(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // double value = 1;
  void clear_value() ;
  double value() const;
  void set_value(double value);

  private:
  double _internal_value() const;
  void _internal_set_value(double value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.SetPlatformAzimuth)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetPlatformAzimuth& from_msg);
    double value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class SetOriginGPS final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.SetOriginGPS) */ {
 public:
  inline SetOriginGPS() : SetOriginGPS(nullptr) {}
  ~SetOriginGPS() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetOriginGPS* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetOriginGPS));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetOriginGPS(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetOriginGPS(const SetOriginGPS& from) : SetOriginGPS(nullptr, from) {}
  inline SetOriginGPS(SetOriginGPS&& from) noexcept
      : SetOriginGPS(nullptr, std::move(from)) {}
  inline SetOriginGPS& operator=(const SetOriginGPS& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetOriginGPS& operator=(SetOriginGPS&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetOriginGPS& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetOriginGPS* internal_default_instance() {
    return reinterpret_cast<const SetOriginGPS*>(
        &_SetOriginGPS_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(SetOriginGPS& a, SetOriginGPS& b) { a.Swap(&b); }
  inline void Swap(SetOriginGPS* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetOriginGPS* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetOriginGPS* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetOriginGPS>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetOriginGPS& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetOriginGPS& from) { SetOriginGPS::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetOriginGPS* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.SetOriginGPS"; }

 protected:
  explicit SetOriginGPS(::google::protobuf::Arena* arena);
  SetOriginGPS(::google::protobuf::Arena* arena, const SetOriginGPS& from);
  SetOriginGPS(::google::protobuf::Arena* arena, SetOriginGPS&& from) noexcept
      : SetOriginGPS(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLatitudeFieldNumber = 1,
    kLongitudeFieldNumber = 2,
    kAltitudeFieldNumber = 3,
  };
  // double latitude = 1;
  void clear_latitude() ;
  double latitude() const;
  void set_latitude(double value);

  private:
  double _internal_latitude() const;
  void _internal_set_latitude(double value);

  public:
  // double longitude = 2;
  void clear_longitude() ;
  double longitude() const;
  void set_longitude(double value);

  private:
  double _internal_longitude() const;
  void _internal_set_longitude(double value);

  public:
  // double altitude = 3;
  void clear_altitude() ;
  double altitude() const;
  void set_altitude(double value);

  private:
  double _internal_altitude() const;
  void _internal_set_altitude(double value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.SetOriginGPS)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetOriginGPS& from_msg);
    double latitude_;
    double longitude_;
    double altitude_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class SetMode final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.SetMode) */ {
 public:
  inline SetMode() : SetMode(nullptr) {}
  ~SetMode() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetMode* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetMode));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetMode(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetMode(const SetMode& from) : SetMode(nullptr, from) {}
  inline SetMode(SetMode&& from) noexcept
      : SetMode(nullptr, std::move(from)) {}
  inline SetMode& operator=(const SetMode& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMode& operator=(SetMode&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMode& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMode* internal_default_instance() {
    return reinterpret_cast<const SetMode*>(
        &_SetMode_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SetMode& a, SetMode& b) { a.Swap(&b); }
  inline void Swap(SetMode* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMode* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMode* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetMode>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetMode& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetMode& from) { SetMode::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetMode* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.SetMode"; }

 protected:
  explicit SetMode(::google::protobuf::Arena* arena);
  SetMode(::google::protobuf::Arena* arena, const SetMode& from);
  SetMode(::google::protobuf::Arena* arena, SetMode&& from) noexcept
      : SetMode(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kModeFieldNumber = 1,
  };
  // .ser.JonGuiDataRotaryMode mode = 1;
  void clear_mode() ;
  ::ser::JonGuiDataRotaryMode mode() const;
  void set_mode(::ser::JonGuiDataRotaryMode value);

  private:
  ::ser::JonGuiDataRotaryMode _internal_mode() const;
  void _internal_set_mode(::ser::JonGuiDataRotaryMode value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.SetMode)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetMode& from_msg);
    int mode_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class SetElevationValue final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.SetElevationValue) */ {
 public:
  inline SetElevationValue() : SetElevationValue(nullptr) {}
  ~SetElevationValue() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetElevationValue* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetElevationValue));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetElevationValue(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetElevationValue(const SetElevationValue& from) : SetElevationValue(nullptr, from) {}
  inline SetElevationValue(SetElevationValue&& from) noexcept
      : SetElevationValue(nullptr, std::move(from)) {}
  inline SetElevationValue& operator=(const SetElevationValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetElevationValue& operator=(SetElevationValue&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetElevationValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetElevationValue* internal_default_instance() {
    return reinterpret_cast<const SetElevationValue*>(
        &_SetElevationValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SetElevationValue& a, SetElevationValue& b) { a.Swap(&b); }
  inline void Swap(SetElevationValue* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetElevationValue* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetElevationValue* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetElevationValue>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetElevationValue& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetElevationValue& from) { SetElevationValue::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetElevationValue* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.SetElevationValue"; }

 protected:
  explicit SetElevationValue(::google::protobuf::Arena* arena);
  SetElevationValue(::google::protobuf::Arena* arena, const SetElevationValue& from);
  SetElevationValue(::google::protobuf::Arena* arena, SetElevationValue&& from) noexcept
      : SetElevationValue(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // double value = 1;
  void clear_value() ;
  double value() const;
  void set_value(double value);

  private:
  double _internal_value() const;
  void _internal_set_value(double value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.SetElevationValue)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetElevationValue& from_msg);
    double value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class SetAzimuthValue final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.SetAzimuthValue) */ {
 public:
  inline SetAzimuthValue() : SetAzimuthValue(nullptr) {}
  ~SetAzimuthValue() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetAzimuthValue* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetAzimuthValue));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetAzimuthValue(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetAzimuthValue(const SetAzimuthValue& from) : SetAzimuthValue(nullptr, from) {}
  inline SetAzimuthValue(SetAzimuthValue&& from) noexcept
      : SetAzimuthValue(nullptr, std::move(from)) {}
  inline SetAzimuthValue& operator=(const SetAzimuthValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetAzimuthValue& operator=(SetAzimuthValue&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetAzimuthValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetAzimuthValue* internal_default_instance() {
    return reinterpret_cast<const SetAzimuthValue*>(
        &_SetAzimuthValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SetAzimuthValue& a, SetAzimuthValue& b) { a.Swap(&b); }
  inline void Swap(SetAzimuthValue* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetAzimuthValue* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetAzimuthValue* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetAzimuthValue>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetAzimuthValue& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetAzimuthValue& from) { SetAzimuthValue::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetAzimuthValue* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.SetAzimuthValue"; }

 protected:
  explicit SetAzimuthValue(::google::protobuf::Arena* arena);
  SetAzimuthValue(::google::protobuf::Arena* arena, const SetAzimuthValue& from);
  SetAzimuthValue(::google::protobuf::Arena* arena, SetAzimuthValue&& from) noexcept
      : SetAzimuthValue(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
    kDirectionFieldNumber = 2,
  };
  // double value = 1;
  void clear_value() ;
  double value() const;
  void set_value(double value);

  private:
  double _internal_value() const;
  void _internal_set_value(double value);

  public:
  // .ser.JonGuiDataRotaryDirection direction = 2;
  void clear_direction() ;
  ::ser::JonGuiDataRotaryDirection direction() const;
  void set_direction(::ser::JonGuiDataRotaryDirection value);

  private:
  ::ser::JonGuiDataRotaryDirection _internal_direction() const;
  void _internal_set_direction(::ser::JonGuiDataRotaryDirection value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.SetAzimuthValue)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetAzimuthValue& from_msg);
    double value_;
    int direction_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class ScanUpdateNode final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.ScanUpdateNode) */ {
 public:
  inline ScanUpdateNode() : ScanUpdateNode(nullptr) {}
  ~ScanUpdateNode() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScanUpdateNode* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScanUpdateNode));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScanUpdateNode(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScanUpdateNode(const ScanUpdateNode& from) : ScanUpdateNode(nullptr, from) {}
  inline ScanUpdateNode(ScanUpdateNode&& from) noexcept
      : ScanUpdateNode(nullptr, std::move(from)) {}
  inline ScanUpdateNode& operator=(const ScanUpdateNode& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScanUpdateNode& operator=(ScanUpdateNode&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScanUpdateNode& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScanUpdateNode* internal_default_instance() {
    return reinterpret_cast<const ScanUpdateNode*>(
        &_ScanUpdateNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(ScanUpdateNode& a, ScanUpdateNode& b) { a.Swap(&b); }
  inline void Swap(ScanUpdateNode* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScanUpdateNode* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScanUpdateNode* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ScanUpdateNode>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScanUpdateNode& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScanUpdateNode& from) { ScanUpdateNode::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ScanUpdateNode* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.ScanUpdateNode"; }

 protected:
  explicit ScanUpdateNode(::google::protobuf::Arena* arena);
  ScanUpdateNode(::google::protobuf::Arena* arena, const ScanUpdateNode& from);
  ScanUpdateNode(::google::protobuf::Arena* arena, ScanUpdateNode&& from) noexcept
      : ScanUpdateNode(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIndexFieldNumber = 1,
    kDayZoomTableValueFieldNumber = 2,
    kAzimuthFieldNumber = 4,
    kElevationFieldNumber = 5,
    kLingerFieldNumber = 6,
    kSpeedFieldNumber = 7,
    kHeatZoomTableValueFieldNumber = 3,
  };
  // int32 index = 1;
  void clear_index() ;
  ::int32_t index() const;
  void set_index(::int32_t value);

  private:
  ::int32_t _internal_index() const;
  void _internal_set_index(::int32_t value);

  public:
  // int32 DayZoomTableValue = 2;
  void clear_dayzoomtablevalue() ;
  ::int32_t dayzoomtablevalue() const;
  void set_dayzoomtablevalue(::int32_t value);

  private:
  ::int32_t _internal_dayzoomtablevalue() const;
  void _internal_set_dayzoomtablevalue(::int32_t value);

  public:
  // double azimuth = 4;
  void clear_azimuth() ;
  double azimuth() const;
  void set_azimuth(double value);

  private:
  double _internal_azimuth() const;
  void _internal_set_azimuth(double value);

  public:
  // double elevation = 5;
  void clear_elevation() ;
  double elevation() const;
  void set_elevation(double value);

  private:
  double _internal_elevation() const;
  void _internal_set_elevation(double value);

  public:
  // double linger = 6;
  void clear_linger() ;
  double linger() const;
  void set_linger(double value);

  private:
  double _internal_linger() const;
  void _internal_set_linger(double value);

  public:
  // double speed = 7;
  void clear_speed() ;
  double speed() const;
  void set_speed(double value);

  private:
  double _internal_speed() const;
  void _internal_set_speed(double value);

  public:
  // int32 HeatZoomTableValue = 3;
  void clear_heatzoomtablevalue() ;
  ::int32_t heatzoomtablevalue() const;
  void set_heatzoomtablevalue(::int32_t value);

  private:
  ::int32_t _internal_heatzoomtablevalue() const;
  void _internal_set_heatzoomtablevalue(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.ScanUpdateNode)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScanUpdateNode& from_msg);
    ::int32_t index_;
    ::int32_t dayzoomtablevalue_;
    double azimuth_;
    double elevation_;
    double linger_;
    double speed_;
    ::int32_t heatzoomtablevalue_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class ScanUnpause final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.ScanUnpause) */ {
 public:
  inline ScanUnpause() : ScanUnpause(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScanUnpause* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScanUnpause));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScanUnpause(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScanUnpause(const ScanUnpause& from) : ScanUnpause(nullptr, from) {}
  inline ScanUnpause(ScanUnpause&& from) noexcept
      : ScanUnpause(nullptr, std::move(from)) {}
  inline ScanUnpause& operator=(const ScanUnpause& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScanUnpause& operator=(ScanUnpause&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScanUnpause& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScanUnpause* internal_default_instance() {
    return reinterpret_cast<const ScanUnpause*>(
        &_ScanUnpause_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(ScanUnpause& a, ScanUnpause& b) { a.Swap(&b); }
  inline void Swap(ScanUnpause* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScanUnpause* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScanUnpause* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ScanUnpause>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ScanUnpause& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ScanUnpause& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.ScanUnpause"; }

 protected:
  explicit ScanUnpause(::google::protobuf::Arena* arena);
  ScanUnpause(::google::protobuf::Arena* arena, const ScanUnpause& from);
  ScanUnpause(::google::protobuf::Arena* arena, ScanUnpause&& from) noexcept
      : ScanUnpause(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.ScanUnpause)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScanUnpause& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class ScanStop final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.ScanStop) */ {
 public:
  inline ScanStop() : ScanStop(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScanStop* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScanStop));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScanStop(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScanStop(const ScanStop& from) : ScanStop(nullptr, from) {}
  inline ScanStop(ScanStop&& from) noexcept
      : ScanStop(nullptr, std::move(from)) {}
  inline ScanStop& operator=(const ScanStop& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScanStop& operator=(ScanStop&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScanStop& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScanStop* internal_default_instance() {
    return reinterpret_cast<const ScanStop*>(
        &_ScanStop_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(ScanStop& a, ScanStop& b) { a.Swap(&b); }
  inline void Swap(ScanStop* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScanStop* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScanStop* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ScanStop>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ScanStop& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ScanStop& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.ScanStop"; }

 protected:
  explicit ScanStop(::google::protobuf::Arena* arena);
  ScanStop(::google::protobuf::Arena* arena, const ScanStop& from);
  ScanStop(::google::protobuf::Arena* arena, ScanStop&& from) noexcept
      : ScanStop(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.ScanStop)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScanStop& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class ScanStart final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.ScanStart) */ {
 public:
  inline ScanStart() : ScanStart(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScanStart* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScanStart));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScanStart(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScanStart(const ScanStart& from) : ScanStart(nullptr, from) {}
  inline ScanStart(ScanStart&& from) noexcept
      : ScanStart(nullptr, std::move(from)) {}
  inline ScanStart& operator=(const ScanStart& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScanStart& operator=(ScanStart&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScanStart& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScanStart* internal_default_instance() {
    return reinterpret_cast<const ScanStart*>(
        &_ScanStart_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(ScanStart& a, ScanStart& b) { a.Swap(&b); }
  inline void Swap(ScanStart* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScanStart* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScanStart* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ScanStart>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ScanStart& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ScanStart& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.ScanStart"; }

 protected:
  explicit ScanStart(::google::protobuf::Arena* arena);
  ScanStart(::google::protobuf::Arena* arena, const ScanStart& from);
  ScanStart(::google::protobuf::Arena* arena, ScanStart&& from) noexcept
      : ScanStart(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.ScanStart)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScanStart& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class ScanSelectNode final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.ScanSelectNode) */ {
 public:
  inline ScanSelectNode() : ScanSelectNode(nullptr) {}
  ~ScanSelectNode() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScanSelectNode* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScanSelectNode));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScanSelectNode(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScanSelectNode(const ScanSelectNode& from) : ScanSelectNode(nullptr, from) {}
  inline ScanSelectNode(ScanSelectNode&& from) noexcept
      : ScanSelectNode(nullptr, std::move(from)) {}
  inline ScanSelectNode& operator=(const ScanSelectNode& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScanSelectNode& operator=(ScanSelectNode&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScanSelectNode& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScanSelectNode* internal_default_instance() {
    return reinterpret_cast<const ScanSelectNode*>(
        &_ScanSelectNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(ScanSelectNode& a, ScanSelectNode& b) { a.Swap(&b); }
  inline void Swap(ScanSelectNode* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScanSelectNode* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScanSelectNode* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ScanSelectNode>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScanSelectNode& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScanSelectNode& from) { ScanSelectNode::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ScanSelectNode* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.ScanSelectNode"; }

 protected:
  explicit ScanSelectNode(::google::protobuf::Arena* arena);
  ScanSelectNode(::google::protobuf::Arena* arena, const ScanSelectNode& from);
  ScanSelectNode(::google::protobuf::Arena* arena, ScanSelectNode&& from) noexcept
      : ScanSelectNode(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIndexFieldNumber = 1,
  };
  // int32 index = 1;
  void clear_index() ;
  ::int32_t index() const;
  void set_index(::int32_t value);

  private:
  ::int32_t _internal_index() const;
  void _internal_set_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.ScanSelectNode)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScanSelectNode& from_msg);
    ::int32_t index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class ScanRefreshNodeList final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.ScanRefreshNodeList) */ {
 public:
  inline ScanRefreshNodeList() : ScanRefreshNodeList(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScanRefreshNodeList* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScanRefreshNodeList));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScanRefreshNodeList(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScanRefreshNodeList(const ScanRefreshNodeList& from) : ScanRefreshNodeList(nullptr, from) {}
  inline ScanRefreshNodeList(ScanRefreshNodeList&& from) noexcept
      : ScanRefreshNodeList(nullptr, std::move(from)) {}
  inline ScanRefreshNodeList& operator=(const ScanRefreshNodeList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScanRefreshNodeList& operator=(ScanRefreshNodeList&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScanRefreshNodeList& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScanRefreshNodeList* internal_default_instance() {
    return reinterpret_cast<const ScanRefreshNodeList*>(
        &_ScanRefreshNodeList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(ScanRefreshNodeList& a, ScanRefreshNodeList& b) { a.Swap(&b); }
  inline void Swap(ScanRefreshNodeList* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScanRefreshNodeList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScanRefreshNodeList* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ScanRefreshNodeList>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ScanRefreshNodeList& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ScanRefreshNodeList& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.ScanRefreshNodeList"; }

 protected:
  explicit ScanRefreshNodeList(::google::protobuf::Arena* arena);
  ScanRefreshNodeList(::google::protobuf::Arena* arena, const ScanRefreshNodeList& from);
  ScanRefreshNodeList(::google::protobuf::Arena* arena, ScanRefreshNodeList&& from) noexcept
      : ScanRefreshNodeList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.ScanRefreshNodeList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScanRefreshNodeList& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class ScanPrev final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.ScanPrev) */ {
 public:
  inline ScanPrev() : ScanPrev(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScanPrev* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScanPrev));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScanPrev(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScanPrev(const ScanPrev& from) : ScanPrev(nullptr, from) {}
  inline ScanPrev(ScanPrev&& from) noexcept
      : ScanPrev(nullptr, std::move(from)) {}
  inline ScanPrev& operator=(const ScanPrev& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScanPrev& operator=(ScanPrev&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScanPrev& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScanPrev* internal_default_instance() {
    return reinterpret_cast<const ScanPrev*>(
        &_ScanPrev_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(ScanPrev& a, ScanPrev& b) { a.Swap(&b); }
  inline void Swap(ScanPrev* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScanPrev* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScanPrev* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ScanPrev>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ScanPrev& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ScanPrev& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.ScanPrev"; }

 protected:
  explicit ScanPrev(::google::protobuf::Arena* arena);
  ScanPrev(::google::protobuf::Arena* arena, const ScanPrev& from);
  ScanPrev(::google::protobuf::Arena* arena, ScanPrev&& from) noexcept
      : ScanPrev(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.ScanPrev)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScanPrev& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class ScanPause final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.ScanPause) */ {
 public:
  inline ScanPause() : ScanPause(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScanPause* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScanPause));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScanPause(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScanPause(const ScanPause& from) : ScanPause(nullptr, from) {}
  inline ScanPause(ScanPause&& from) noexcept
      : ScanPause(nullptr, std::move(from)) {}
  inline ScanPause& operator=(const ScanPause& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScanPause& operator=(ScanPause&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScanPause& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScanPause* internal_default_instance() {
    return reinterpret_cast<const ScanPause*>(
        &_ScanPause_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(ScanPause& a, ScanPause& b) { a.Swap(&b); }
  inline void Swap(ScanPause* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScanPause* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScanPause* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ScanPause>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ScanPause& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ScanPause& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.ScanPause"; }

 protected:
  explicit ScanPause(::google::protobuf::Arena* arena);
  ScanPause(::google::protobuf::Arena* arena, const ScanPause& from);
  ScanPause(::google::protobuf::Arena* arena, ScanPause&& from) noexcept
      : ScanPause(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.ScanPause)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScanPause& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class ScanNext final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.ScanNext) */ {
 public:
  inline ScanNext() : ScanNext(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScanNext* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScanNext));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScanNext(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScanNext(const ScanNext& from) : ScanNext(nullptr, from) {}
  inline ScanNext(ScanNext&& from) noexcept
      : ScanNext(nullptr, std::move(from)) {}
  inline ScanNext& operator=(const ScanNext& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScanNext& operator=(ScanNext&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScanNext& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScanNext* internal_default_instance() {
    return reinterpret_cast<const ScanNext*>(
        &_ScanNext_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(ScanNext& a, ScanNext& b) { a.Swap(&b); }
  inline void Swap(ScanNext* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScanNext* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScanNext* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ScanNext>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ScanNext& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ScanNext& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.ScanNext"; }

 protected:
  explicit ScanNext(::google::protobuf::Arena* arena);
  ScanNext(::google::protobuf::Arena* arena, const ScanNext& from);
  ScanNext(::google::protobuf::Arena* arena, ScanNext&& from) noexcept
      : ScanNext(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.ScanNext)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScanNext& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class ScanDeleteNode final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.ScanDeleteNode) */ {
 public:
  inline ScanDeleteNode() : ScanDeleteNode(nullptr) {}
  ~ScanDeleteNode() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScanDeleteNode* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScanDeleteNode));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScanDeleteNode(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScanDeleteNode(const ScanDeleteNode& from) : ScanDeleteNode(nullptr, from) {}
  inline ScanDeleteNode(ScanDeleteNode&& from) noexcept
      : ScanDeleteNode(nullptr, std::move(from)) {}
  inline ScanDeleteNode& operator=(const ScanDeleteNode& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScanDeleteNode& operator=(ScanDeleteNode&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScanDeleteNode& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScanDeleteNode* internal_default_instance() {
    return reinterpret_cast<const ScanDeleteNode*>(
        &_ScanDeleteNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(ScanDeleteNode& a, ScanDeleteNode& b) { a.Swap(&b); }
  inline void Swap(ScanDeleteNode* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScanDeleteNode* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScanDeleteNode* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ScanDeleteNode>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScanDeleteNode& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScanDeleteNode& from) { ScanDeleteNode::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ScanDeleteNode* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.ScanDeleteNode"; }

 protected:
  explicit ScanDeleteNode(::google::protobuf::Arena* arena);
  ScanDeleteNode(::google::protobuf::Arena* arena, const ScanDeleteNode& from);
  ScanDeleteNode(::google::protobuf::Arena* arena, ScanDeleteNode&& from) noexcept
      : ScanDeleteNode(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIndexFieldNumber = 1,
  };
  // int32 index = 1;
  void clear_index() ;
  ::int32_t index() const;
  void set_index(::int32_t value);

  private:
  ::int32_t _internal_index() const;
  void _internal_set_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.ScanDeleteNode)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScanDeleteNode& from_msg);
    ::int32_t index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class ScanAddNode final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.ScanAddNode) */ {
 public:
  inline ScanAddNode() : ScanAddNode(nullptr) {}
  ~ScanAddNode() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScanAddNode* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScanAddNode));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScanAddNode(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScanAddNode(const ScanAddNode& from) : ScanAddNode(nullptr, from) {}
  inline ScanAddNode(ScanAddNode&& from) noexcept
      : ScanAddNode(nullptr, std::move(from)) {}
  inline ScanAddNode& operator=(const ScanAddNode& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScanAddNode& operator=(ScanAddNode&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScanAddNode& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScanAddNode* internal_default_instance() {
    return reinterpret_cast<const ScanAddNode*>(
        &_ScanAddNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(ScanAddNode& a, ScanAddNode& b) { a.Swap(&b); }
  inline void Swap(ScanAddNode* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScanAddNode* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScanAddNode* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ScanAddNode>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScanAddNode& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScanAddNode& from) { ScanAddNode::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ScanAddNode* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.ScanAddNode"; }

 protected:
  explicit ScanAddNode(::google::protobuf::Arena* arena);
  ScanAddNode(::google::protobuf::Arena* arena, const ScanAddNode& from);
  ScanAddNode(::google::protobuf::Arena* arena, ScanAddNode&& from) noexcept
      : ScanAddNode(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIndexFieldNumber = 1,
    kDayZoomTableValueFieldNumber = 2,
    kAzimuthFieldNumber = 4,
    kElevationFieldNumber = 5,
    kLingerFieldNumber = 6,
    kSpeedFieldNumber = 7,
    kHeatZoomTableValueFieldNumber = 3,
  };
  // int32 index = 1;
  void clear_index() ;
  ::int32_t index() const;
  void set_index(::int32_t value);

  private:
  ::int32_t _internal_index() const;
  void _internal_set_index(::int32_t value);

  public:
  // int32 DayZoomTableValue = 2;
  void clear_dayzoomtablevalue() ;
  ::int32_t dayzoomtablevalue() const;
  void set_dayzoomtablevalue(::int32_t value);

  private:
  ::int32_t _internal_dayzoomtablevalue() const;
  void _internal_set_dayzoomtablevalue(::int32_t value);

  public:
  // double azimuth = 4;
  void clear_azimuth() ;
  double azimuth() const;
  void set_azimuth(double value);

  private:
  double _internal_azimuth() const;
  void _internal_set_azimuth(double value);

  public:
  // double elevation = 5;
  void clear_elevation() ;
  double elevation() const;
  void set_elevation(double value);

  private:
  double _internal_elevation() const;
  void _internal_set_elevation(double value);

  public:
  // double linger = 6;
  void clear_linger() ;
  double linger() const;
  void set_linger(double value);

  private:
  double _internal_linger() const;
  void _internal_set_linger(double value);

  public:
  // double speed = 7;
  void clear_speed() ;
  double speed() const;
  void set_speed(double value);

  private:
  double _internal_speed() const;
  void _internal_set_speed(double value);

  public:
  // int32 HeatZoomTableValue = 3;
  void clear_heatzoomtablevalue() ;
  ::int32_t heatzoomtablevalue() const;
  void set_heatzoomtablevalue(::int32_t value);

  private:
  ::int32_t _internal_heatzoomtablevalue() const;
  void _internal_set_heatzoomtablevalue(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.ScanAddNode)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScanAddNode& from_msg);
    ::int32_t index_;
    ::int32_t dayzoomtablevalue_;
    double azimuth_;
    double elevation_;
    double linger_;
    double speed_;
    ::int32_t heatzoomtablevalue_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class RotateToNDC final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.RotateToNDC) */ {
 public:
  inline RotateToNDC() : RotateToNDC(nullptr) {}
  ~RotateToNDC() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RotateToNDC* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RotateToNDC));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RotateToNDC(
      ::google::protobuf::internal::ConstantInitialized);

  inline RotateToNDC(const RotateToNDC& from) : RotateToNDC(nullptr, from) {}
  inline RotateToNDC(RotateToNDC&& from) noexcept
      : RotateToNDC(nullptr, std::move(from)) {}
  inline RotateToNDC& operator=(const RotateToNDC& from) {
    CopyFrom(from);
    return *this;
  }
  inline RotateToNDC& operator=(RotateToNDC&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RotateToNDC& default_instance() {
    return *internal_default_instance();
  }
  static inline const RotateToNDC* internal_default_instance() {
    return reinterpret_cast<const RotateToNDC*>(
        &_RotateToNDC_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(RotateToNDC& a, RotateToNDC& b) { a.Swap(&b); }
  inline void Swap(RotateToNDC* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RotateToNDC* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RotateToNDC* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RotateToNDC>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RotateToNDC& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RotateToNDC& from) { RotateToNDC::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RotateToNDC* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.RotateToNDC"; }

 protected:
  explicit RotateToNDC(::google::protobuf::Arena* arena);
  RotateToNDC(::google::protobuf::Arena* arena, const RotateToNDC& from);
  RotateToNDC(::google::protobuf::Arena* arena, RotateToNDC&& from) noexcept
      : RotateToNDC(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 2,
    kYFieldNumber = 3,
    kFrameTimeFieldNumber = 4,
    kStateTimeFieldNumber = 5,
    kChannelFieldNumber = 1,
  };
  // double x = 2;
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 3;
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // uint64 frame_time = 4;
  void clear_frame_time() ;
  ::uint64_t frame_time() const;
  void set_frame_time(::uint64_t value);

  private:
  ::uint64_t _internal_frame_time() const;
  void _internal_set_frame_time(::uint64_t value);

  public:
  // uint64 state_time = 5;
  void clear_state_time() ;
  ::uint64_t state_time() const;
  void set_state_time(::uint64_t value);

  private:
  ::uint64_t _internal_state_time() const;
  void _internal_set_state_time(::uint64_t value);

  public:
  // .ser.JonGuiDataVideoChannel channel = 1;
  void clear_channel() ;
  ::ser::JonGuiDataVideoChannel channel() const;
  void set_channel(::ser::JonGuiDataVideoChannel value);

  private:
  ::ser::JonGuiDataVideoChannel _internal_channel() const;
  void _internal_set_channel(::ser::JonGuiDataVideoChannel value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.RotateToNDC)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RotateToNDC& from_msg);
    double x_;
    double y_;
    ::uint64_t frame_time_;
    ::uint64_t state_time_;
    int channel_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class RotateToGPS final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.RotateToGPS) */ {
 public:
  inline RotateToGPS() : RotateToGPS(nullptr) {}
  ~RotateToGPS() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RotateToGPS* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RotateToGPS));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RotateToGPS(
      ::google::protobuf::internal::ConstantInitialized);

  inline RotateToGPS(const RotateToGPS& from) : RotateToGPS(nullptr, from) {}
  inline RotateToGPS(RotateToGPS&& from) noexcept
      : RotateToGPS(nullptr, std::move(from)) {}
  inline RotateToGPS& operator=(const RotateToGPS& from) {
    CopyFrom(from);
    return *this;
  }
  inline RotateToGPS& operator=(RotateToGPS&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RotateToGPS& default_instance() {
    return *internal_default_instance();
  }
  static inline const RotateToGPS* internal_default_instance() {
    return reinterpret_cast<const RotateToGPS*>(
        &_RotateToGPS_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(RotateToGPS& a, RotateToGPS& b) { a.Swap(&b); }
  inline void Swap(RotateToGPS* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RotateToGPS* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RotateToGPS* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RotateToGPS>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RotateToGPS& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RotateToGPS& from) { RotateToGPS::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RotateToGPS* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.RotateToGPS"; }

 protected:
  explicit RotateToGPS(::google::protobuf::Arena* arena);
  RotateToGPS(::google::protobuf::Arena* arena, const RotateToGPS& from);
  RotateToGPS(::google::protobuf::Arena* arena, RotateToGPS&& from) noexcept
      : RotateToGPS(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLatitudeFieldNumber = 1,
    kLongitudeFieldNumber = 2,
    kAltitudeFieldNumber = 3,
  };
  // double latitude = 1;
  void clear_latitude() ;
  double latitude() const;
  void set_latitude(double value);

  private:
  double _internal_latitude() const;
  void _internal_set_latitude(double value);

  public:
  // double longitude = 2;
  void clear_longitude() ;
  double longitude() const;
  void set_longitude(double value);

  private:
  double _internal_longitude() const;
  void _internal_set_longitude(double value);

  public:
  // double altitude = 3;
  void clear_altitude() ;
  double altitude() const;
  void set_altitude(double value);

  private:
  double _internal_altitude() const;
  void _internal_set_altitude(double value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.RotateToGPS)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RotateToGPS& from_msg);
    double latitude_;
    double longitude_;
    double altitude_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class RotateElevationTo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.RotateElevationTo) */ {
 public:
  inline RotateElevationTo() : RotateElevationTo(nullptr) {}
  ~RotateElevationTo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RotateElevationTo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RotateElevationTo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RotateElevationTo(
      ::google::protobuf::internal::ConstantInitialized);

  inline RotateElevationTo(const RotateElevationTo& from) : RotateElevationTo(nullptr, from) {}
  inline RotateElevationTo(RotateElevationTo&& from) noexcept
      : RotateElevationTo(nullptr, std::move(from)) {}
  inline RotateElevationTo& operator=(const RotateElevationTo& from) {
    CopyFrom(from);
    return *this;
  }
  inline RotateElevationTo& operator=(RotateElevationTo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RotateElevationTo& default_instance() {
    return *internal_default_instance();
  }
  static inline const RotateElevationTo* internal_default_instance() {
    return reinterpret_cast<const RotateElevationTo*>(
        &_RotateElevationTo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(RotateElevationTo& a, RotateElevationTo& b) { a.Swap(&b); }
  inline void Swap(RotateElevationTo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RotateElevationTo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RotateElevationTo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RotateElevationTo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RotateElevationTo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RotateElevationTo& from) { RotateElevationTo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RotateElevationTo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.RotateElevationTo"; }

 protected:
  explicit RotateElevationTo(::google::protobuf::Arena* arena);
  RotateElevationTo(::google::protobuf::Arena* arena, const RotateElevationTo& from);
  RotateElevationTo(::google::protobuf::Arena* arena, RotateElevationTo&& from) noexcept
      : RotateElevationTo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetValueFieldNumber = 1,
    kSpeedFieldNumber = 2,
  };
  // double target_value = 1;
  void clear_target_value() ;
  double target_value() const;
  void set_target_value(double value);

  private:
  double _internal_target_value() const;
  void _internal_set_target_value(double value);

  public:
  // double speed = 2;
  void clear_speed() ;
  double speed() const;
  void set_speed(double value);

  private:
  double _internal_speed() const;
  void _internal_set_speed(double value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.RotateElevationTo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RotateElevationTo& from_msg);
    double target_value_;
    double speed_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class RotateElevationRelativeSet final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.RotateElevationRelativeSet) */ {
 public:
  inline RotateElevationRelativeSet() : RotateElevationRelativeSet(nullptr) {}
  ~RotateElevationRelativeSet() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RotateElevationRelativeSet* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RotateElevationRelativeSet));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RotateElevationRelativeSet(
      ::google::protobuf::internal::ConstantInitialized);

  inline RotateElevationRelativeSet(const RotateElevationRelativeSet& from) : RotateElevationRelativeSet(nullptr, from) {}
  inline RotateElevationRelativeSet(RotateElevationRelativeSet&& from) noexcept
      : RotateElevationRelativeSet(nullptr, std::move(from)) {}
  inline RotateElevationRelativeSet& operator=(const RotateElevationRelativeSet& from) {
    CopyFrom(from);
    return *this;
  }
  inline RotateElevationRelativeSet& operator=(RotateElevationRelativeSet&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RotateElevationRelativeSet& default_instance() {
    return *internal_default_instance();
  }
  static inline const RotateElevationRelativeSet* internal_default_instance() {
    return reinterpret_cast<const RotateElevationRelativeSet*>(
        &_RotateElevationRelativeSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(RotateElevationRelativeSet& a, RotateElevationRelativeSet& b) { a.Swap(&b); }
  inline void Swap(RotateElevationRelativeSet* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RotateElevationRelativeSet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RotateElevationRelativeSet* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RotateElevationRelativeSet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RotateElevationRelativeSet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RotateElevationRelativeSet& from) { RotateElevationRelativeSet::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RotateElevationRelativeSet* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.RotateElevationRelativeSet"; }

 protected:
  explicit RotateElevationRelativeSet(::google::protobuf::Arena* arena);
  RotateElevationRelativeSet(::google::protobuf::Arena* arena, const RotateElevationRelativeSet& from);
  RotateElevationRelativeSet(::google::protobuf::Arena* arena, RotateElevationRelativeSet&& from) noexcept
      : RotateElevationRelativeSet(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
    kDirectionFieldNumber = 2,
  };
  // double value = 1;
  void clear_value() ;
  double value() const;
  void set_value(double value);

  private:
  double _internal_value() const;
  void _internal_set_value(double value);

  public:
  // .ser.JonGuiDataRotaryDirection direction = 2;
  void clear_direction() ;
  ::ser::JonGuiDataRotaryDirection direction() const;
  void set_direction(::ser::JonGuiDataRotaryDirection value);

  private:
  ::ser::JonGuiDataRotaryDirection _internal_direction() const;
  void _internal_set_direction(::ser::JonGuiDataRotaryDirection value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.RotateElevationRelativeSet)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RotateElevationRelativeSet& from_msg);
    double value_;
    int direction_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class RotateElevationRelative final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.RotateElevationRelative) */ {
 public:
  inline RotateElevationRelative() : RotateElevationRelative(nullptr) {}
  ~RotateElevationRelative() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RotateElevationRelative* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RotateElevationRelative));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RotateElevationRelative(
      ::google::protobuf::internal::ConstantInitialized);

  inline RotateElevationRelative(const RotateElevationRelative& from) : RotateElevationRelative(nullptr, from) {}
  inline RotateElevationRelative(RotateElevationRelative&& from) noexcept
      : RotateElevationRelative(nullptr, std::move(from)) {}
  inline RotateElevationRelative& operator=(const RotateElevationRelative& from) {
    CopyFrom(from);
    return *this;
  }
  inline RotateElevationRelative& operator=(RotateElevationRelative&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RotateElevationRelative& default_instance() {
    return *internal_default_instance();
  }
  static inline const RotateElevationRelative* internal_default_instance() {
    return reinterpret_cast<const RotateElevationRelative*>(
        &_RotateElevationRelative_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(RotateElevationRelative& a, RotateElevationRelative& b) { a.Swap(&b); }
  inline void Swap(RotateElevationRelative* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RotateElevationRelative* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RotateElevationRelative* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RotateElevationRelative>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RotateElevationRelative& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RotateElevationRelative& from) { RotateElevationRelative::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RotateElevationRelative* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.RotateElevationRelative"; }

 protected:
  explicit RotateElevationRelative(::google::protobuf::Arena* arena);
  RotateElevationRelative(::google::protobuf::Arena* arena, const RotateElevationRelative& from);
  RotateElevationRelative(::google::protobuf::Arena* arena, RotateElevationRelative&& from) noexcept
      : RotateElevationRelative(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
    kSpeedFieldNumber = 2,
    kDirectionFieldNumber = 3,
  };
  // double value = 1;
  void clear_value() ;
  double value() const;
  void set_value(double value);

  private:
  double _internal_value() const;
  void _internal_set_value(double value);

  public:
  // double speed = 2;
  void clear_speed() ;
  double speed() const;
  void set_speed(double value);

  private:
  double _internal_speed() const;
  void _internal_set_speed(double value);

  public:
  // .ser.JonGuiDataRotaryDirection direction = 3;
  void clear_direction() ;
  ::ser::JonGuiDataRotaryDirection direction() const;
  void set_direction(::ser::JonGuiDataRotaryDirection value);

  private:
  ::ser::JonGuiDataRotaryDirection _internal_direction() const;
  void _internal_set_direction(::ser::JonGuiDataRotaryDirection value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.RotateElevationRelative)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RotateElevationRelative& from_msg);
    double value_;
    double speed_;
    int direction_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class RotateElevation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.RotateElevation) */ {
 public:
  inline RotateElevation() : RotateElevation(nullptr) {}
  ~RotateElevation() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RotateElevation* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RotateElevation));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RotateElevation(
      ::google::protobuf::internal::ConstantInitialized);

  inline RotateElevation(const RotateElevation& from) : RotateElevation(nullptr, from) {}
  inline RotateElevation(RotateElevation&& from) noexcept
      : RotateElevation(nullptr, std::move(from)) {}
  inline RotateElevation& operator=(const RotateElevation& from) {
    CopyFrom(from);
    return *this;
  }
  inline RotateElevation& operator=(RotateElevation&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RotateElevation& default_instance() {
    return *internal_default_instance();
  }
  static inline const RotateElevation* internal_default_instance() {
    return reinterpret_cast<const RotateElevation*>(
        &_RotateElevation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(RotateElevation& a, RotateElevation& b) { a.Swap(&b); }
  inline void Swap(RotateElevation* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RotateElevation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RotateElevation* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RotateElevation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RotateElevation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RotateElevation& from) { RotateElevation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RotateElevation* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.RotateElevation"; }

 protected:
  explicit RotateElevation(::google::protobuf::Arena* arena);
  RotateElevation(::google::protobuf::Arena* arena, const RotateElevation& from);
  RotateElevation(::google::protobuf::Arena* arena, RotateElevation&& from) noexcept
      : RotateElevation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSpeedFieldNumber = 1,
    kDirectionFieldNumber = 2,
  };
  // double speed = 1;
  void clear_speed() ;
  double speed() const;
  void set_speed(double value);

  private:
  double _internal_speed() const;
  void _internal_set_speed(double value);

  public:
  // .ser.JonGuiDataRotaryDirection direction = 2;
  void clear_direction() ;
  ::ser::JonGuiDataRotaryDirection direction() const;
  void set_direction(::ser::JonGuiDataRotaryDirection value);

  private:
  ::ser::JonGuiDataRotaryDirection _internal_direction() const;
  void _internal_set_direction(::ser::JonGuiDataRotaryDirection value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.RotateElevation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RotateElevation& from_msg);
    double speed_;
    int direction_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class RotateAzimuthTo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.RotateAzimuthTo) */ {
 public:
  inline RotateAzimuthTo() : RotateAzimuthTo(nullptr) {}
  ~RotateAzimuthTo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RotateAzimuthTo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RotateAzimuthTo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RotateAzimuthTo(
      ::google::protobuf::internal::ConstantInitialized);

  inline RotateAzimuthTo(const RotateAzimuthTo& from) : RotateAzimuthTo(nullptr, from) {}
  inline RotateAzimuthTo(RotateAzimuthTo&& from) noexcept
      : RotateAzimuthTo(nullptr, std::move(from)) {}
  inline RotateAzimuthTo& operator=(const RotateAzimuthTo& from) {
    CopyFrom(from);
    return *this;
  }
  inline RotateAzimuthTo& operator=(RotateAzimuthTo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RotateAzimuthTo& default_instance() {
    return *internal_default_instance();
  }
  static inline const RotateAzimuthTo* internal_default_instance() {
    return reinterpret_cast<const RotateAzimuthTo*>(
        &_RotateAzimuthTo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(RotateAzimuthTo& a, RotateAzimuthTo& b) { a.Swap(&b); }
  inline void Swap(RotateAzimuthTo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RotateAzimuthTo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RotateAzimuthTo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RotateAzimuthTo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RotateAzimuthTo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RotateAzimuthTo& from) { RotateAzimuthTo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RotateAzimuthTo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.RotateAzimuthTo"; }

 protected:
  explicit RotateAzimuthTo(::google::protobuf::Arena* arena);
  RotateAzimuthTo(::google::protobuf::Arena* arena, const RotateAzimuthTo& from);
  RotateAzimuthTo(::google::protobuf::Arena* arena, RotateAzimuthTo&& from) noexcept
      : RotateAzimuthTo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetValueFieldNumber = 1,
    kSpeedFieldNumber = 2,
    kDirectionFieldNumber = 3,
  };
  // double target_value = 1;
  void clear_target_value() ;
  double target_value() const;
  void set_target_value(double value);

  private:
  double _internal_target_value() const;
  void _internal_set_target_value(double value);

  public:
  // double speed = 2;
  void clear_speed() ;
  double speed() const;
  void set_speed(double value);

  private:
  double _internal_speed() const;
  void _internal_set_speed(double value);

  public:
  // .ser.JonGuiDataRotaryDirection direction = 3;
  void clear_direction() ;
  ::ser::JonGuiDataRotaryDirection direction() const;
  void set_direction(::ser::JonGuiDataRotaryDirection value);

  private:
  ::ser::JonGuiDataRotaryDirection _internal_direction() const;
  void _internal_set_direction(::ser::JonGuiDataRotaryDirection value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.RotateAzimuthTo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RotateAzimuthTo& from_msg);
    double target_value_;
    double speed_;
    int direction_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class RotateAzimuthRelativeSet final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.RotateAzimuthRelativeSet) */ {
 public:
  inline RotateAzimuthRelativeSet() : RotateAzimuthRelativeSet(nullptr) {}
  ~RotateAzimuthRelativeSet() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RotateAzimuthRelativeSet* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RotateAzimuthRelativeSet));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RotateAzimuthRelativeSet(
      ::google::protobuf::internal::ConstantInitialized);

  inline RotateAzimuthRelativeSet(const RotateAzimuthRelativeSet& from) : RotateAzimuthRelativeSet(nullptr, from) {}
  inline RotateAzimuthRelativeSet(RotateAzimuthRelativeSet&& from) noexcept
      : RotateAzimuthRelativeSet(nullptr, std::move(from)) {}
  inline RotateAzimuthRelativeSet& operator=(const RotateAzimuthRelativeSet& from) {
    CopyFrom(from);
    return *this;
  }
  inline RotateAzimuthRelativeSet& operator=(RotateAzimuthRelativeSet&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RotateAzimuthRelativeSet& default_instance() {
    return *internal_default_instance();
  }
  static inline const RotateAzimuthRelativeSet* internal_default_instance() {
    return reinterpret_cast<const RotateAzimuthRelativeSet*>(
        &_RotateAzimuthRelativeSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(RotateAzimuthRelativeSet& a, RotateAzimuthRelativeSet& b) { a.Swap(&b); }
  inline void Swap(RotateAzimuthRelativeSet* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RotateAzimuthRelativeSet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RotateAzimuthRelativeSet* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RotateAzimuthRelativeSet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RotateAzimuthRelativeSet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RotateAzimuthRelativeSet& from) { RotateAzimuthRelativeSet::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RotateAzimuthRelativeSet* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.RotateAzimuthRelativeSet"; }

 protected:
  explicit RotateAzimuthRelativeSet(::google::protobuf::Arena* arena);
  RotateAzimuthRelativeSet(::google::protobuf::Arena* arena, const RotateAzimuthRelativeSet& from);
  RotateAzimuthRelativeSet(::google::protobuf::Arena* arena, RotateAzimuthRelativeSet&& from) noexcept
      : RotateAzimuthRelativeSet(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
    kDirectionFieldNumber = 2,
  };
  // double value = 1;
  void clear_value() ;
  double value() const;
  void set_value(double value);

  private:
  double _internal_value() const;
  void _internal_set_value(double value);

  public:
  // .ser.JonGuiDataRotaryDirection direction = 2;
  void clear_direction() ;
  ::ser::JonGuiDataRotaryDirection direction() const;
  void set_direction(::ser::JonGuiDataRotaryDirection value);

  private:
  ::ser::JonGuiDataRotaryDirection _internal_direction() const;
  void _internal_set_direction(::ser::JonGuiDataRotaryDirection value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.RotateAzimuthRelativeSet)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RotateAzimuthRelativeSet& from_msg);
    double value_;
    int direction_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class RotateAzimuthRelative final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.RotateAzimuthRelative) */ {
 public:
  inline RotateAzimuthRelative() : RotateAzimuthRelative(nullptr) {}
  ~RotateAzimuthRelative() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RotateAzimuthRelative* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RotateAzimuthRelative));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RotateAzimuthRelative(
      ::google::protobuf::internal::ConstantInitialized);

  inline RotateAzimuthRelative(const RotateAzimuthRelative& from) : RotateAzimuthRelative(nullptr, from) {}
  inline RotateAzimuthRelative(RotateAzimuthRelative&& from) noexcept
      : RotateAzimuthRelative(nullptr, std::move(from)) {}
  inline RotateAzimuthRelative& operator=(const RotateAzimuthRelative& from) {
    CopyFrom(from);
    return *this;
  }
  inline RotateAzimuthRelative& operator=(RotateAzimuthRelative&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RotateAzimuthRelative& default_instance() {
    return *internal_default_instance();
  }
  static inline const RotateAzimuthRelative* internal_default_instance() {
    return reinterpret_cast<const RotateAzimuthRelative*>(
        &_RotateAzimuthRelative_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(RotateAzimuthRelative& a, RotateAzimuthRelative& b) { a.Swap(&b); }
  inline void Swap(RotateAzimuthRelative* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RotateAzimuthRelative* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RotateAzimuthRelative* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RotateAzimuthRelative>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RotateAzimuthRelative& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RotateAzimuthRelative& from) { RotateAzimuthRelative::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RotateAzimuthRelative* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.RotateAzimuthRelative"; }

 protected:
  explicit RotateAzimuthRelative(::google::protobuf::Arena* arena);
  RotateAzimuthRelative(::google::protobuf::Arena* arena, const RotateAzimuthRelative& from);
  RotateAzimuthRelative(::google::protobuf::Arena* arena, RotateAzimuthRelative&& from) noexcept
      : RotateAzimuthRelative(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
    kSpeedFieldNumber = 2,
    kDirectionFieldNumber = 3,
  };
  // double value = 1;
  void clear_value() ;
  double value() const;
  void set_value(double value);

  private:
  double _internal_value() const;
  void _internal_set_value(double value);

  public:
  // double speed = 2;
  void clear_speed() ;
  double speed() const;
  void set_speed(double value);

  private:
  double _internal_speed() const;
  void _internal_set_speed(double value);

  public:
  // .ser.JonGuiDataRotaryDirection direction = 3;
  void clear_direction() ;
  ::ser::JonGuiDataRotaryDirection direction() const;
  void set_direction(::ser::JonGuiDataRotaryDirection value);

  private:
  ::ser::JonGuiDataRotaryDirection _internal_direction() const;
  void _internal_set_direction(::ser::JonGuiDataRotaryDirection value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.RotateAzimuthRelative)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RotateAzimuthRelative& from_msg);
    double value_;
    double speed_;
    int direction_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class RotateAzimuth final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.RotateAzimuth) */ {
 public:
  inline RotateAzimuth() : RotateAzimuth(nullptr) {}
  ~RotateAzimuth() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RotateAzimuth* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RotateAzimuth));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RotateAzimuth(
      ::google::protobuf::internal::ConstantInitialized);

  inline RotateAzimuth(const RotateAzimuth& from) : RotateAzimuth(nullptr, from) {}
  inline RotateAzimuth(RotateAzimuth&& from) noexcept
      : RotateAzimuth(nullptr, std::move(from)) {}
  inline RotateAzimuth& operator=(const RotateAzimuth& from) {
    CopyFrom(from);
    return *this;
  }
  inline RotateAzimuth& operator=(RotateAzimuth&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RotateAzimuth& default_instance() {
    return *internal_default_instance();
  }
  static inline const RotateAzimuth* internal_default_instance() {
    return reinterpret_cast<const RotateAzimuth*>(
        &_RotateAzimuth_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(RotateAzimuth& a, RotateAzimuth& b) { a.Swap(&b); }
  inline void Swap(RotateAzimuth* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RotateAzimuth* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RotateAzimuth* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RotateAzimuth>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RotateAzimuth& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RotateAzimuth& from) { RotateAzimuth::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RotateAzimuth* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.RotateAzimuth"; }

 protected:
  explicit RotateAzimuth(::google::protobuf::Arena* arena);
  RotateAzimuth(::google::protobuf::Arena* arena, const RotateAzimuth& from);
  RotateAzimuth(::google::protobuf::Arena* arena, RotateAzimuth&& from) noexcept
      : RotateAzimuth(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSpeedFieldNumber = 1,
    kDirectionFieldNumber = 2,
  };
  // double speed = 1;
  void clear_speed() ;
  double speed() const;
  void set_speed(double value);

  private:
  double _internal_speed() const;
  void _internal_set_speed(double value);

  public:
  // .ser.JonGuiDataRotaryDirection direction = 2;
  void clear_direction() ;
  ::ser::JonGuiDataRotaryDirection direction() const;
  void set_direction(::ser::JonGuiDataRotaryDirection value);

  private:
  ::ser::JonGuiDataRotaryDirection _internal_direction() const;
  void _internal_set_direction(::ser::JonGuiDataRotaryDirection value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.RotateAzimuth)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RotateAzimuth& from_msg);
    double speed_;
    int direction_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class HaltElevation final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.HaltElevation) */ {
 public:
  inline HaltElevation() : HaltElevation(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HaltElevation* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HaltElevation));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HaltElevation(
      ::google::protobuf::internal::ConstantInitialized);

  inline HaltElevation(const HaltElevation& from) : HaltElevation(nullptr, from) {}
  inline HaltElevation(HaltElevation&& from) noexcept
      : HaltElevation(nullptr, std::move(from)) {}
  inline HaltElevation& operator=(const HaltElevation& from) {
    CopyFrom(from);
    return *this;
  }
  inline HaltElevation& operator=(HaltElevation&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HaltElevation& default_instance() {
    return *internal_default_instance();
  }
  static inline const HaltElevation* internal_default_instance() {
    return reinterpret_cast<const HaltElevation*>(
        &_HaltElevation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(HaltElevation& a, HaltElevation& b) { a.Swap(&b); }
  inline void Swap(HaltElevation* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HaltElevation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HaltElevation* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<HaltElevation>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const HaltElevation& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const HaltElevation& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.HaltElevation"; }

 protected:
  explicit HaltElevation(::google::protobuf::Arena* arena);
  HaltElevation(::google::protobuf::Arena* arena, const HaltElevation& from);
  HaltElevation(::google::protobuf::Arena* arena, HaltElevation&& from) noexcept
      : HaltElevation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.HaltElevation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HaltElevation& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class HaltAzimuth final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.HaltAzimuth) */ {
 public:
  inline HaltAzimuth() : HaltAzimuth(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HaltAzimuth* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HaltAzimuth));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HaltAzimuth(
      ::google::protobuf::internal::ConstantInitialized);

  inline HaltAzimuth(const HaltAzimuth& from) : HaltAzimuth(nullptr, from) {}
  inline HaltAzimuth(HaltAzimuth&& from) noexcept
      : HaltAzimuth(nullptr, std::move(from)) {}
  inline HaltAzimuth& operator=(const HaltAzimuth& from) {
    CopyFrom(from);
    return *this;
  }
  inline HaltAzimuth& operator=(HaltAzimuth&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HaltAzimuth& default_instance() {
    return *internal_default_instance();
  }
  static inline const HaltAzimuth* internal_default_instance() {
    return reinterpret_cast<const HaltAzimuth*>(
        &_HaltAzimuth_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(HaltAzimuth& a, HaltAzimuth& b) { a.Swap(&b); }
  inline void Swap(HaltAzimuth* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HaltAzimuth* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HaltAzimuth* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<HaltAzimuth>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const HaltAzimuth& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const HaltAzimuth& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.HaltAzimuth"; }

 protected:
  explicit HaltAzimuth(::google::protobuf::Arena* arena);
  HaltAzimuth(::google::protobuf::Arena* arena, const HaltAzimuth& from);
  HaltAzimuth(::google::protobuf::Arena* arena, HaltAzimuth&& from) noexcept
      : HaltAzimuth(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.HaltAzimuth)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HaltAzimuth& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class Halt final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.Halt) */ {
 public:
  inline Halt() : Halt(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Halt* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Halt));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Halt(
      ::google::protobuf::internal::ConstantInitialized);

  inline Halt(const Halt& from) : Halt(nullptr, from) {}
  inline Halt(Halt&& from) noexcept
      : Halt(nullptr, std::move(from)) {}
  inline Halt& operator=(const Halt& from) {
    CopyFrom(from);
    return *this;
  }
  inline Halt& operator=(Halt&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Halt& default_instance() {
    return *internal_default_instance();
  }
  static inline const Halt* internal_default_instance() {
    return reinterpret_cast<const Halt*>(
        &_Halt_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(Halt& a, Halt& b) { a.Swap(&b); }
  inline void Swap(Halt* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Halt* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Halt* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<Halt>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Halt& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Halt& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.Halt"; }

 protected:
  explicit Halt(::google::protobuf::Arena* arena);
  Halt(::google::protobuf::Arena* arena, const Halt& from);
  Halt(::google::protobuf::Arena* arena, Halt&& from) noexcept
      : Halt(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.Halt)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Halt& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class GetMeteo final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.GetMeteo) */ {
 public:
  inline GetMeteo() : GetMeteo(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMeteo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMeteo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMeteo(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetMeteo(const GetMeteo& from) : GetMeteo(nullptr, from) {}
  inline GetMeteo(GetMeteo&& from) noexcept
      : GetMeteo(nullptr, std::move(from)) {}
  inline GetMeteo& operator=(const GetMeteo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMeteo& operator=(GetMeteo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMeteo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMeteo* internal_default_instance() {
    return reinterpret_cast<const GetMeteo*>(
        &_GetMeteo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(GetMeteo& a, GetMeteo& b) { a.Swap(&b); }
  inline void Swap(GetMeteo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMeteo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMeteo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetMeteo>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetMeteo& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetMeteo& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.GetMeteo"; }

 protected:
  explicit GetMeteo(::google::protobuf::Arena* arena);
  GetMeteo(::google::protobuf::Arena* arena, const GetMeteo& from);
  GetMeteo(::google::protobuf::Arena* arena, GetMeteo&& from) noexcept
      : GetMeteo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.GetMeteo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetMeteo& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class Elevation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.Elevation) */ {
 public:
  inline Elevation() : Elevation(nullptr) {}
  ~Elevation() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Elevation* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Elevation));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Elevation(
      ::google::protobuf::internal::ConstantInitialized);

  inline Elevation(const Elevation& from) : Elevation(nullptr, from) {}
  inline Elevation(Elevation&& from) noexcept
      : Elevation(nullptr, std::move(from)) {}
  inline Elevation& operator=(const Elevation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Elevation& operator=(Elevation&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Elevation& default_instance() {
    return *internal_default_instance();
  }
  enum CmdCase {
    kSetValue = 1,
    kRotateTo = 2,
    kRotate = 3,
    kRelative = 4,
    kRelativeSet = 5,
    kHalt = 6,
    CMD_NOT_SET = 0,
  };
  static inline const Elevation* internal_default_instance() {
    return reinterpret_cast<const Elevation*>(
        &_Elevation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(Elevation& a, Elevation& b) { a.Swap(&b); }
  inline void Swap(Elevation* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Elevation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Elevation* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Elevation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Elevation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Elevation& from) { Elevation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Elevation* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.Elevation"; }

 protected:
  explicit Elevation(::google::protobuf::Arena* arena);
  Elevation(::google::protobuf::Arena* arena, const Elevation& from);
  Elevation(::google::protobuf::Arena* arena, Elevation&& from) noexcept
      : Elevation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSetValueFieldNumber = 1,
    kRotateToFieldNumber = 2,
    kRotateFieldNumber = 3,
    kRelativeFieldNumber = 4,
    kRelativeSetFieldNumber = 5,
    kHaltFieldNumber = 6,
  };
  // .cmd.RotaryPlatform.SetElevationValue set_value = 1;
  bool has_set_value() const;
  private:
  bool _internal_has_set_value() const;

  public:
  void clear_set_value() ;
  const ::cmd::RotaryPlatform::SetElevationValue& set_value() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::SetElevationValue* release_set_value();
  ::cmd::RotaryPlatform::SetElevationValue* mutable_set_value();
  void set_allocated_set_value(::cmd::RotaryPlatform::SetElevationValue* value);
  void unsafe_arena_set_allocated_set_value(::cmd::RotaryPlatform::SetElevationValue* value);
  ::cmd::RotaryPlatform::SetElevationValue* unsafe_arena_release_set_value();

  private:
  const ::cmd::RotaryPlatform::SetElevationValue& _internal_set_value() const;
  ::cmd::RotaryPlatform::SetElevationValue* _internal_mutable_set_value();

  public:
  // .cmd.RotaryPlatform.RotateElevationTo rotate_to = 2;
  bool has_rotate_to() const;
  private:
  bool _internal_has_rotate_to() const;

  public:
  void clear_rotate_to() ;
  const ::cmd::RotaryPlatform::RotateElevationTo& rotate_to() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::RotateElevationTo* release_rotate_to();
  ::cmd::RotaryPlatform::RotateElevationTo* mutable_rotate_to();
  void set_allocated_rotate_to(::cmd::RotaryPlatform::RotateElevationTo* value);
  void unsafe_arena_set_allocated_rotate_to(::cmd::RotaryPlatform::RotateElevationTo* value);
  ::cmd::RotaryPlatform::RotateElevationTo* unsafe_arena_release_rotate_to();

  private:
  const ::cmd::RotaryPlatform::RotateElevationTo& _internal_rotate_to() const;
  ::cmd::RotaryPlatform::RotateElevationTo* _internal_mutable_rotate_to();

  public:
  // .cmd.RotaryPlatform.RotateElevation rotate = 3;
  bool has_rotate() const;
  private:
  bool _internal_has_rotate() const;

  public:
  void clear_rotate() ;
  const ::cmd::RotaryPlatform::RotateElevation& rotate() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::RotateElevation* release_rotate();
  ::cmd::RotaryPlatform::RotateElevation* mutable_rotate();
  void set_allocated_rotate(::cmd::RotaryPlatform::RotateElevation* value);
  void unsafe_arena_set_allocated_rotate(::cmd::RotaryPlatform::RotateElevation* value);
  ::cmd::RotaryPlatform::RotateElevation* unsafe_arena_release_rotate();

  private:
  const ::cmd::RotaryPlatform::RotateElevation& _internal_rotate() const;
  ::cmd::RotaryPlatform::RotateElevation* _internal_mutable_rotate();

  public:
  // .cmd.RotaryPlatform.RotateElevationRelative relative = 4;
  bool has_relative() const;
  private:
  bool _internal_has_relative() const;

  public:
  void clear_relative() ;
  const ::cmd::RotaryPlatform::RotateElevationRelative& relative() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::RotateElevationRelative* release_relative();
  ::cmd::RotaryPlatform::RotateElevationRelative* mutable_relative();
  void set_allocated_relative(::cmd::RotaryPlatform::RotateElevationRelative* value);
  void unsafe_arena_set_allocated_relative(::cmd::RotaryPlatform::RotateElevationRelative* value);
  ::cmd::RotaryPlatform::RotateElevationRelative* unsafe_arena_release_relative();

  private:
  const ::cmd::RotaryPlatform::RotateElevationRelative& _internal_relative() const;
  ::cmd::RotaryPlatform::RotateElevationRelative* _internal_mutable_relative();

  public:
  // .cmd.RotaryPlatform.RotateElevationRelativeSet relative_set = 5;
  bool has_relative_set() const;
  private:
  bool _internal_has_relative_set() const;

  public:
  void clear_relative_set() ;
  const ::cmd::RotaryPlatform::RotateElevationRelativeSet& relative_set() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::RotateElevationRelativeSet* release_relative_set();
  ::cmd::RotaryPlatform::RotateElevationRelativeSet* mutable_relative_set();
  void set_allocated_relative_set(::cmd::RotaryPlatform::RotateElevationRelativeSet* value);
  void unsafe_arena_set_allocated_relative_set(::cmd::RotaryPlatform::RotateElevationRelativeSet* value);
  ::cmd::RotaryPlatform::RotateElevationRelativeSet* unsafe_arena_release_relative_set();

  private:
  const ::cmd::RotaryPlatform::RotateElevationRelativeSet& _internal_relative_set() const;
  ::cmd::RotaryPlatform::RotateElevationRelativeSet* _internal_mutable_relative_set();

  public:
  // .cmd.RotaryPlatform.HaltElevation halt = 6;
  bool has_halt() const;
  private:
  bool _internal_has_halt() const;

  public:
  void clear_halt() ;
  const ::cmd::RotaryPlatform::HaltElevation& halt() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::HaltElevation* release_halt();
  ::cmd::RotaryPlatform::HaltElevation* mutable_halt();
  void set_allocated_halt(::cmd::RotaryPlatform::HaltElevation* value);
  void unsafe_arena_set_allocated_halt(::cmd::RotaryPlatform::HaltElevation* value);
  ::cmd::RotaryPlatform::HaltElevation* unsafe_arena_release_halt();

  private:
  const ::cmd::RotaryPlatform::HaltElevation& _internal_halt() const;
  ::cmd::RotaryPlatform::HaltElevation* _internal_mutable_halt();

  public:
  void clear_cmd();
  CmdCase cmd_case() const;
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.Elevation)
 private:
  class _Internal;
  void set_has_set_value();
  void set_has_rotate_to();
  void set_has_rotate();
  void set_has_relative();
  void set_has_relative_set();
  void set_has_halt();
  inline bool has_cmd() const;
  inline void clear_has_cmd();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 6, 6,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Elevation& from_msg);
    union CmdUnion {
      constexpr CmdUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::cmd::RotaryPlatform::SetElevationValue* set_value_;
      ::cmd::RotaryPlatform::RotateElevationTo* rotate_to_;
      ::cmd::RotaryPlatform::RotateElevation* rotate_;
      ::cmd::RotaryPlatform::RotateElevationRelative* relative_;
      ::cmd::RotaryPlatform::RotateElevationRelativeSet* relative_set_;
      ::cmd::RotaryPlatform::HaltElevation* halt_;
    } cmd_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class Azimuth final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.Azimuth) */ {
 public:
  inline Azimuth() : Azimuth(nullptr) {}
  ~Azimuth() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Azimuth* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Azimuth));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Azimuth(
      ::google::protobuf::internal::ConstantInitialized);

  inline Azimuth(const Azimuth& from) : Azimuth(nullptr, from) {}
  inline Azimuth(Azimuth&& from) noexcept
      : Azimuth(nullptr, std::move(from)) {}
  inline Azimuth& operator=(const Azimuth& from) {
    CopyFrom(from);
    return *this;
  }
  inline Azimuth& operator=(Azimuth&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Azimuth& default_instance() {
    return *internal_default_instance();
  }
  enum CmdCase {
    kSetValue = 1,
    kRotateTo = 2,
    kRotate = 3,
    kRelative = 4,
    kRelativeSet = 5,
    kHalt = 6,
    CMD_NOT_SET = 0,
  };
  static inline const Azimuth* internal_default_instance() {
    return reinterpret_cast<const Azimuth*>(
        &_Azimuth_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(Azimuth& a, Azimuth& b) { a.Swap(&b); }
  inline void Swap(Azimuth* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Azimuth* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Azimuth* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Azimuth>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Azimuth& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Azimuth& from) { Azimuth::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Azimuth* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.Azimuth"; }

 protected:
  explicit Azimuth(::google::protobuf::Arena* arena);
  Azimuth(::google::protobuf::Arena* arena, const Azimuth& from);
  Azimuth(::google::protobuf::Arena* arena, Azimuth&& from) noexcept
      : Azimuth(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSetValueFieldNumber = 1,
    kRotateToFieldNumber = 2,
    kRotateFieldNumber = 3,
    kRelativeFieldNumber = 4,
    kRelativeSetFieldNumber = 5,
    kHaltFieldNumber = 6,
  };
  // .cmd.RotaryPlatform.SetAzimuthValue set_value = 1;
  bool has_set_value() const;
  private:
  bool _internal_has_set_value() const;

  public:
  void clear_set_value() ;
  const ::cmd::RotaryPlatform::SetAzimuthValue& set_value() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::SetAzimuthValue* release_set_value();
  ::cmd::RotaryPlatform::SetAzimuthValue* mutable_set_value();
  void set_allocated_set_value(::cmd::RotaryPlatform::SetAzimuthValue* value);
  void unsafe_arena_set_allocated_set_value(::cmd::RotaryPlatform::SetAzimuthValue* value);
  ::cmd::RotaryPlatform::SetAzimuthValue* unsafe_arena_release_set_value();

  private:
  const ::cmd::RotaryPlatform::SetAzimuthValue& _internal_set_value() const;
  ::cmd::RotaryPlatform::SetAzimuthValue* _internal_mutable_set_value();

  public:
  // .cmd.RotaryPlatform.RotateAzimuthTo rotate_to = 2;
  bool has_rotate_to() const;
  private:
  bool _internal_has_rotate_to() const;

  public:
  void clear_rotate_to() ;
  const ::cmd::RotaryPlatform::RotateAzimuthTo& rotate_to() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::RotateAzimuthTo* release_rotate_to();
  ::cmd::RotaryPlatform::RotateAzimuthTo* mutable_rotate_to();
  void set_allocated_rotate_to(::cmd::RotaryPlatform::RotateAzimuthTo* value);
  void unsafe_arena_set_allocated_rotate_to(::cmd::RotaryPlatform::RotateAzimuthTo* value);
  ::cmd::RotaryPlatform::RotateAzimuthTo* unsafe_arena_release_rotate_to();

  private:
  const ::cmd::RotaryPlatform::RotateAzimuthTo& _internal_rotate_to() const;
  ::cmd::RotaryPlatform::RotateAzimuthTo* _internal_mutable_rotate_to();

  public:
  // .cmd.RotaryPlatform.RotateAzimuth rotate = 3;
  bool has_rotate() const;
  private:
  bool _internal_has_rotate() const;

  public:
  void clear_rotate() ;
  const ::cmd::RotaryPlatform::RotateAzimuth& rotate() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::RotateAzimuth* release_rotate();
  ::cmd::RotaryPlatform::RotateAzimuth* mutable_rotate();
  void set_allocated_rotate(::cmd::RotaryPlatform::RotateAzimuth* value);
  void unsafe_arena_set_allocated_rotate(::cmd::RotaryPlatform::RotateAzimuth* value);
  ::cmd::RotaryPlatform::RotateAzimuth* unsafe_arena_release_rotate();

  private:
  const ::cmd::RotaryPlatform::RotateAzimuth& _internal_rotate() const;
  ::cmd::RotaryPlatform::RotateAzimuth* _internal_mutable_rotate();

  public:
  // .cmd.RotaryPlatform.RotateAzimuthRelative relative = 4;
  bool has_relative() const;
  private:
  bool _internal_has_relative() const;

  public:
  void clear_relative() ;
  const ::cmd::RotaryPlatform::RotateAzimuthRelative& relative() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::RotateAzimuthRelative* release_relative();
  ::cmd::RotaryPlatform::RotateAzimuthRelative* mutable_relative();
  void set_allocated_relative(::cmd::RotaryPlatform::RotateAzimuthRelative* value);
  void unsafe_arena_set_allocated_relative(::cmd::RotaryPlatform::RotateAzimuthRelative* value);
  ::cmd::RotaryPlatform::RotateAzimuthRelative* unsafe_arena_release_relative();

  private:
  const ::cmd::RotaryPlatform::RotateAzimuthRelative& _internal_relative() const;
  ::cmd::RotaryPlatform::RotateAzimuthRelative* _internal_mutable_relative();

  public:
  // .cmd.RotaryPlatform.RotateAzimuthRelativeSet relative_set = 5;
  bool has_relative_set() const;
  private:
  bool _internal_has_relative_set() const;

  public:
  void clear_relative_set() ;
  const ::cmd::RotaryPlatform::RotateAzimuthRelativeSet& relative_set() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::RotateAzimuthRelativeSet* release_relative_set();
  ::cmd::RotaryPlatform::RotateAzimuthRelativeSet* mutable_relative_set();
  void set_allocated_relative_set(::cmd::RotaryPlatform::RotateAzimuthRelativeSet* value);
  void unsafe_arena_set_allocated_relative_set(::cmd::RotaryPlatform::RotateAzimuthRelativeSet* value);
  ::cmd::RotaryPlatform::RotateAzimuthRelativeSet* unsafe_arena_release_relative_set();

  private:
  const ::cmd::RotaryPlatform::RotateAzimuthRelativeSet& _internal_relative_set() const;
  ::cmd::RotaryPlatform::RotateAzimuthRelativeSet* _internal_mutable_relative_set();

  public:
  // .cmd.RotaryPlatform.HaltAzimuth halt = 6;
  bool has_halt() const;
  private:
  bool _internal_has_halt() const;

  public:
  void clear_halt() ;
  const ::cmd::RotaryPlatform::HaltAzimuth& halt() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::HaltAzimuth* release_halt();
  ::cmd::RotaryPlatform::HaltAzimuth* mutable_halt();
  void set_allocated_halt(::cmd::RotaryPlatform::HaltAzimuth* value);
  void unsafe_arena_set_allocated_halt(::cmd::RotaryPlatform::HaltAzimuth* value);
  ::cmd::RotaryPlatform::HaltAzimuth* unsafe_arena_release_halt();

  private:
  const ::cmd::RotaryPlatform::HaltAzimuth& _internal_halt() const;
  ::cmd::RotaryPlatform::HaltAzimuth* _internal_mutable_halt();

  public:
  void clear_cmd();
  CmdCase cmd_case() const;
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.Azimuth)
 private:
  class _Internal;
  void set_has_set_value();
  void set_has_rotate_to();
  void set_has_rotate();
  void set_has_relative();
  void set_has_relative_set();
  void set_has_halt();
  inline bool has_cmd() const;
  inline void clear_has_cmd();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 6, 6,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Azimuth& from_msg);
    union CmdUnion {
      constexpr CmdUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::cmd::RotaryPlatform::SetAzimuthValue* set_value_;
      ::cmd::RotaryPlatform::RotateAzimuthTo* rotate_to_;
      ::cmd::RotaryPlatform::RotateAzimuth* rotate_;
      ::cmd::RotaryPlatform::RotateAzimuthRelative* relative_;
      ::cmd::RotaryPlatform::RotateAzimuthRelativeSet* relative_set_;
      ::cmd::RotaryPlatform::HaltAzimuth* halt_;
    } cmd_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class Axis final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.Axis) */ {
 public:
  inline Axis() : Axis(nullptr) {}
  ~Axis() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Axis* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Axis));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Axis(
      ::google::protobuf::internal::ConstantInitialized);

  inline Axis(const Axis& from) : Axis(nullptr, from) {}
  inline Axis(Axis&& from) noexcept
      : Axis(nullptr, std::move(from)) {}
  inline Axis& operator=(const Axis& from) {
    CopyFrom(from);
    return *this;
  }
  inline Axis& operator=(Axis&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Axis& default_instance() {
    return *internal_default_instance();
  }
  static inline const Axis* internal_default_instance() {
    return reinterpret_cast<const Axis*>(
        &_Axis_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Axis& a, Axis& b) { a.Swap(&b); }
  inline void Swap(Axis* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Axis* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Axis* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Axis>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Axis& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Axis& from) { Axis::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Axis* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.Axis"; }

 protected:
  explicit Axis(::google::protobuf::Arena* arena);
  Axis(::google::protobuf::Arena* arena, const Axis& from);
  Axis(::google::protobuf::Arena* arena, Axis&& from) noexcept
      : Axis(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAzimuthFieldNumber = 1,
    kElevationFieldNumber = 2,
  };
  // .cmd.RotaryPlatform.Azimuth azimuth = 1;
  bool has_azimuth() const;
  void clear_azimuth() ;
  const ::cmd::RotaryPlatform::Azimuth& azimuth() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::Azimuth* release_azimuth();
  ::cmd::RotaryPlatform::Azimuth* mutable_azimuth();
  void set_allocated_azimuth(::cmd::RotaryPlatform::Azimuth* value);
  void unsafe_arena_set_allocated_azimuth(::cmd::RotaryPlatform::Azimuth* value);
  ::cmd::RotaryPlatform::Azimuth* unsafe_arena_release_azimuth();

  private:
  const ::cmd::RotaryPlatform::Azimuth& _internal_azimuth() const;
  ::cmd::RotaryPlatform::Azimuth* _internal_mutable_azimuth();

  public:
  // .cmd.RotaryPlatform.Elevation elevation = 2;
  bool has_elevation() const;
  void clear_elevation() ;
  const ::cmd::RotaryPlatform::Elevation& elevation() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::Elevation* release_elevation();
  ::cmd::RotaryPlatform::Elevation* mutable_elevation();
  void set_allocated_elevation(::cmd::RotaryPlatform::Elevation* value);
  void unsafe_arena_set_allocated_elevation(::cmd::RotaryPlatform::Elevation* value);
  ::cmd::RotaryPlatform::Elevation* unsafe_arena_release_elevation();

  private:
  const ::cmd::RotaryPlatform::Elevation& _internal_elevation() const;
  ::cmd::RotaryPlatform::Elevation* _internal_mutable_elevation();

  public:
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.Axis)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Axis& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cmd::RotaryPlatform::Azimuth* azimuth_;
    ::cmd::RotaryPlatform::Elevation* elevation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};
// -------------------------------------------------------------------

class Root final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.RotaryPlatform.Root) */ {
 public:
  inline Root() : Root(nullptr) {}
  ~Root() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Root* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Root));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Root(
      ::google::protobuf::internal::ConstantInitialized);

  inline Root(const Root& from) : Root(nullptr, from) {}
  inline Root(Root&& from) noexcept
      : Root(nullptr, std::move(from)) {}
  inline Root& operator=(const Root& from) {
    CopyFrom(from);
    return *this;
  }
  inline Root& operator=(Root&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Root& default_instance() {
    return *internal_default_instance();
  }
  enum CmdCase {
    kStart = 1,
    kStop = 2,
    kAxis = 3,
    kSetPlatformAzimuth = 4,
    kSetPlatformElevation = 5,
    kSetPlatformBank = 6,
    kHalt = 7,
    kSetUseRotaryAsCompass = 8,
    kRotateToGps = 9,
    kSetOriginGps = 10,
    kSetMode = 11,
    kRotateToNdc = 12,
    kScanStart = 13,
    kScanStop = 14,
    kScanPause = 15,
    kScanUnpause = 16,
    kGetMeteo = 17,
    kScanPrev = 18,
    kScanNext = 19,
    kScanRefreshNodeList = 20,
    kScanSelectNode = 21,
    kScanDeleteNode = 22,
    kScanUpdateNode = 23,
    kScanAddNode = 24,
    CMD_NOT_SET = 0,
  };
  static inline const Root* internal_default_instance() {
    return reinterpret_cast<const Root*>(
        &_Root_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Root& a, Root& b) { a.Swap(&b); }
  inline void Swap(Root* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Root* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Root* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Root>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Root& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Root& from) { Root::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Root* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.RotaryPlatform.Root"; }

 protected:
  explicit Root(::google::protobuf::Arena* arena);
  Root(::google::protobuf::Arena* arena, const Root& from);
  Root(::google::protobuf::Arena* arena, Root&& from) noexcept
      : Root(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStartFieldNumber = 1,
    kStopFieldNumber = 2,
    kAxisFieldNumber = 3,
    kSetPlatformAzimuthFieldNumber = 4,
    kSetPlatformElevationFieldNumber = 5,
    kSetPlatformBankFieldNumber = 6,
    kHaltFieldNumber = 7,
    kSetUseRotaryAsCompassFieldNumber = 8,
    kRotateToGpsFieldNumber = 9,
    kSetOriginGpsFieldNumber = 10,
    kSetModeFieldNumber = 11,
    kRotateToNdcFieldNumber = 12,
    kScanStartFieldNumber = 13,
    kScanStopFieldNumber = 14,
    kScanPauseFieldNumber = 15,
    kScanUnpauseFieldNumber = 16,
    kGetMeteoFieldNumber = 17,
    kScanPrevFieldNumber = 18,
    kScanNextFieldNumber = 19,
    kScanRefreshNodeListFieldNumber = 20,
    kScanSelectNodeFieldNumber = 21,
    kScanDeleteNodeFieldNumber = 22,
    kScanUpdateNodeFieldNumber = 23,
    kScanAddNodeFieldNumber = 24,
  };
  // .cmd.RotaryPlatform.Start start = 1;
  bool has_start() const;
  private:
  bool _internal_has_start() const;

  public:
  void clear_start() ;
  const ::cmd::RotaryPlatform::Start& start() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::Start* release_start();
  ::cmd::RotaryPlatform::Start* mutable_start();
  void set_allocated_start(::cmd::RotaryPlatform::Start* value);
  void unsafe_arena_set_allocated_start(::cmd::RotaryPlatform::Start* value);
  ::cmd::RotaryPlatform::Start* unsafe_arena_release_start();

  private:
  const ::cmd::RotaryPlatform::Start& _internal_start() const;
  ::cmd::RotaryPlatform::Start* _internal_mutable_start();

  public:
  // .cmd.RotaryPlatform.Stop stop = 2;
  bool has_stop() const;
  private:
  bool _internal_has_stop() const;

  public:
  void clear_stop() ;
  const ::cmd::RotaryPlatform::Stop& stop() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::Stop* release_stop();
  ::cmd::RotaryPlatform::Stop* mutable_stop();
  void set_allocated_stop(::cmd::RotaryPlatform::Stop* value);
  void unsafe_arena_set_allocated_stop(::cmd::RotaryPlatform::Stop* value);
  ::cmd::RotaryPlatform::Stop* unsafe_arena_release_stop();

  private:
  const ::cmd::RotaryPlatform::Stop& _internal_stop() const;
  ::cmd::RotaryPlatform::Stop* _internal_mutable_stop();

  public:
  // .cmd.RotaryPlatform.Axis axis = 3;
  bool has_axis() const;
  private:
  bool _internal_has_axis() const;

  public:
  void clear_axis() ;
  const ::cmd::RotaryPlatform::Axis& axis() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::Axis* release_axis();
  ::cmd::RotaryPlatform::Axis* mutable_axis();
  void set_allocated_axis(::cmd::RotaryPlatform::Axis* value);
  void unsafe_arena_set_allocated_axis(::cmd::RotaryPlatform::Axis* value);
  ::cmd::RotaryPlatform::Axis* unsafe_arena_release_axis();

  private:
  const ::cmd::RotaryPlatform::Axis& _internal_axis() const;
  ::cmd::RotaryPlatform::Axis* _internal_mutable_axis();

  public:
  // .cmd.RotaryPlatform.SetPlatformAzimuth set_platform_azimuth = 4;
  bool has_set_platform_azimuth() const;
  private:
  bool _internal_has_set_platform_azimuth() const;

  public:
  void clear_set_platform_azimuth() ;
  const ::cmd::RotaryPlatform::SetPlatformAzimuth& set_platform_azimuth() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::SetPlatformAzimuth* release_set_platform_azimuth();
  ::cmd::RotaryPlatform::SetPlatformAzimuth* mutable_set_platform_azimuth();
  void set_allocated_set_platform_azimuth(::cmd::RotaryPlatform::SetPlatformAzimuth* value);
  void unsafe_arena_set_allocated_set_platform_azimuth(::cmd::RotaryPlatform::SetPlatformAzimuth* value);
  ::cmd::RotaryPlatform::SetPlatformAzimuth* unsafe_arena_release_set_platform_azimuth();

  private:
  const ::cmd::RotaryPlatform::SetPlatformAzimuth& _internal_set_platform_azimuth() const;
  ::cmd::RotaryPlatform::SetPlatformAzimuth* _internal_mutable_set_platform_azimuth();

  public:
  // .cmd.RotaryPlatform.SetPlatformElevation set_platform_elevation = 5;
  bool has_set_platform_elevation() const;
  private:
  bool _internal_has_set_platform_elevation() const;

  public:
  void clear_set_platform_elevation() ;
  const ::cmd::RotaryPlatform::SetPlatformElevation& set_platform_elevation() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::SetPlatformElevation* release_set_platform_elevation();
  ::cmd::RotaryPlatform::SetPlatformElevation* mutable_set_platform_elevation();
  void set_allocated_set_platform_elevation(::cmd::RotaryPlatform::SetPlatformElevation* value);
  void unsafe_arena_set_allocated_set_platform_elevation(::cmd::RotaryPlatform::SetPlatformElevation* value);
  ::cmd::RotaryPlatform::SetPlatformElevation* unsafe_arena_release_set_platform_elevation();

  private:
  const ::cmd::RotaryPlatform::SetPlatformElevation& _internal_set_platform_elevation() const;
  ::cmd::RotaryPlatform::SetPlatformElevation* _internal_mutable_set_platform_elevation();

  public:
  // .cmd.RotaryPlatform.SetPlatformBank set_platform_bank = 6;
  bool has_set_platform_bank() const;
  private:
  bool _internal_has_set_platform_bank() const;

  public:
  void clear_set_platform_bank() ;
  const ::cmd::RotaryPlatform::SetPlatformBank& set_platform_bank() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::SetPlatformBank* release_set_platform_bank();
  ::cmd::RotaryPlatform::SetPlatformBank* mutable_set_platform_bank();
  void set_allocated_set_platform_bank(::cmd::RotaryPlatform::SetPlatformBank* value);
  void unsafe_arena_set_allocated_set_platform_bank(::cmd::RotaryPlatform::SetPlatformBank* value);
  ::cmd::RotaryPlatform::SetPlatformBank* unsafe_arena_release_set_platform_bank();

  private:
  const ::cmd::RotaryPlatform::SetPlatformBank& _internal_set_platform_bank() const;
  ::cmd::RotaryPlatform::SetPlatformBank* _internal_mutable_set_platform_bank();

  public:
  // .cmd.RotaryPlatform.Halt halt = 7;
  bool has_halt() const;
  private:
  bool _internal_has_halt() const;

  public:
  void clear_halt() ;
  const ::cmd::RotaryPlatform::Halt& halt() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::Halt* release_halt();
  ::cmd::RotaryPlatform::Halt* mutable_halt();
  void set_allocated_halt(::cmd::RotaryPlatform::Halt* value);
  void unsafe_arena_set_allocated_halt(::cmd::RotaryPlatform::Halt* value);
  ::cmd::RotaryPlatform::Halt* unsafe_arena_release_halt();

  private:
  const ::cmd::RotaryPlatform::Halt& _internal_halt() const;
  ::cmd::RotaryPlatform::Halt* _internal_mutable_halt();

  public:
  // .cmd.RotaryPlatform.setUseRotaryAsCompass set_use_rotary_as_compass = 8;
  bool has_set_use_rotary_as_compass() const;
  private:
  bool _internal_has_set_use_rotary_as_compass() const;

  public:
  void clear_set_use_rotary_as_compass() ;
  const ::cmd::RotaryPlatform::setUseRotaryAsCompass& set_use_rotary_as_compass() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::setUseRotaryAsCompass* release_set_use_rotary_as_compass();
  ::cmd::RotaryPlatform::setUseRotaryAsCompass* mutable_set_use_rotary_as_compass();
  void set_allocated_set_use_rotary_as_compass(::cmd::RotaryPlatform::setUseRotaryAsCompass* value);
  void unsafe_arena_set_allocated_set_use_rotary_as_compass(::cmd::RotaryPlatform::setUseRotaryAsCompass* value);
  ::cmd::RotaryPlatform::setUseRotaryAsCompass* unsafe_arena_release_set_use_rotary_as_compass();

  private:
  const ::cmd::RotaryPlatform::setUseRotaryAsCompass& _internal_set_use_rotary_as_compass() const;
  ::cmd::RotaryPlatform::setUseRotaryAsCompass* _internal_mutable_set_use_rotary_as_compass();

  public:
  // .cmd.RotaryPlatform.RotateToGPS rotate_to_gps = 9;
  bool has_rotate_to_gps() const;
  private:
  bool _internal_has_rotate_to_gps() const;

  public:
  void clear_rotate_to_gps() ;
  const ::cmd::RotaryPlatform::RotateToGPS& rotate_to_gps() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::RotateToGPS* release_rotate_to_gps();
  ::cmd::RotaryPlatform::RotateToGPS* mutable_rotate_to_gps();
  void set_allocated_rotate_to_gps(::cmd::RotaryPlatform::RotateToGPS* value);
  void unsafe_arena_set_allocated_rotate_to_gps(::cmd::RotaryPlatform::RotateToGPS* value);
  ::cmd::RotaryPlatform::RotateToGPS* unsafe_arena_release_rotate_to_gps();

  private:
  const ::cmd::RotaryPlatform::RotateToGPS& _internal_rotate_to_gps() const;
  ::cmd::RotaryPlatform::RotateToGPS* _internal_mutable_rotate_to_gps();

  public:
  // .cmd.RotaryPlatform.SetOriginGPS set_origin_gps = 10;
  bool has_set_origin_gps() const;
  private:
  bool _internal_has_set_origin_gps() const;

  public:
  void clear_set_origin_gps() ;
  const ::cmd::RotaryPlatform::SetOriginGPS& set_origin_gps() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::SetOriginGPS* release_set_origin_gps();
  ::cmd::RotaryPlatform::SetOriginGPS* mutable_set_origin_gps();
  void set_allocated_set_origin_gps(::cmd::RotaryPlatform::SetOriginGPS* value);
  void unsafe_arena_set_allocated_set_origin_gps(::cmd::RotaryPlatform::SetOriginGPS* value);
  ::cmd::RotaryPlatform::SetOriginGPS* unsafe_arena_release_set_origin_gps();

  private:
  const ::cmd::RotaryPlatform::SetOriginGPS& _internal_set_origin_gps() const;
  ::cmd::RotaryPlatform::SetOriginGPS* _internal_mutable_set_origin_gps();

  public:
  // .cmd.RotaryPlatform.SetMode set_mode = 11;
  bool has_set_mode() const;
  private:
  bool _internal_has_set_mode() const;

  public:
  void clear_set_mode() ;
  const ::cmd::RotaryPlatform::SetMode& set_mode() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::SetMode* release_set_mode();
  ::cmd::RotaryPlatform::SetMode* mutable_set_mode();
  void set_allocated_set_mode(::cmd::RotaryPlatform::SetMode* value);
  void unsafe_arena_set_allocated_set_mode(::cmd::RotaryPlatform::SetMode* value);
  ::cmd::RotaryPlatform::SetMode* unsafe_arena_release_set_mode();

  private:
  const ::cmd::RotaryPlatform::SetMode& _internal_set_mode() const;
  ::cmd::RotaryPlatform::SetMode* _internal_mutable_set_mode();

  public:
  // .cmd.RotaryPlatform.RotateToNDC rotate_to_ndc = 12;
  bool has_rotate_to_ndc() const;
  private:
  bool _internal_has_rotate_to_ndc() const;

  public:
  void clear_rotate_to_ndc() ;
  const ::cmd::RotaryPlatform::RotateToNDC& rotate_to_ndc() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::RotateToNDC* release_rotate_to_ndc();
  ::cmd::RotaryPlatform::RotateToNDC* mutable_rotate_to_ndc();
  void set_allocated_rotate_to_ndc(::cmd::RotaryPlatform::RotateToNDC* value);
  void unsafe_arena_set_allocated_rotate_to_ndc(::cmd::RotaryPlatform::RotateToNDC* value);
  ::cmd::RotaryPlatform::RotateToNDC* unsafe_arena_release_rotate_to_ndc();

  private:
  const ::cmd::RotaryPlatform::RotateToNDC& _internal_rotate_to_ndc() const;
  ::cmd::RotaryPlatform::RotateToNDC* _internal_mutable_rotate_to_ndc();

  public:
  // .cmd.RotaryPlatform.ScanStart scan_start = 13;
  bool has_scan_start() const;
  private:
  bool _internal_has_scan_start() const;

  public:
  void clear_scan_start() ;
  const ::cmd::RotaryPlatform::ScanStart& scan_start() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::ScanStart* release_scan_start();
  ::cmd::RotaryPlatform::ScanStart* mutable_scan_start();
  void set_allocated_scan_start(::cmd::RotaryPlatform::ScanStart* value);
  void unsafe_arena_set_allocated_scan_start(::cmd::RotaryPlatform::ScanStart* value);
  ::cmd::RotaryPlatform::ScanStart* unsafe_arena_release_scan_start();

  private:
  const ::cmd::RotaryPlatform::ScanStart& _internal_scan_start() const;
  ::cmd::RotaryPlatform::ScanStart* _internal_mutable_scan_start();

  public:
  // .cmd.RotaryPlatform.ScanStop scan_stop = 14;
  bool has_scan_stop() const;
  private:
  bool _internal_has_scan_stop() const;

  public:
  void clear_scan_stop() ;
  const ::cmd::RotaryPlatform::ScanStop& scan_stop() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::ScanStop* release_scan_stop();
  ::cmd::RotaryPlatform::ScanStop* mutable_scan_stop();
  void set_allocated_scan_stop(::cmd::RotaryPlatform::ScanStop* value);
  void unsafe_arena_set_allocated_scan_stop(::cmd::RotaryPlatform::ScanStop* value);
  ::cmd::RotaryPlatform::ScanStop* unsafe_arena_release_scan_stop();

  private:
  const ::cmd::RotaryPlatform::ScanStop& _internal_scan_stop() const;
  ::cmd::RotaryPlatform::ScanStop* _internal_mutable_scan_stop();

  public:
  // .cmd.RotaryPlatform.ScanPause scan_pause = 15;
  bool has_scan_pause() const;
  private:
  bool _internal_has_scan_pause() const;

  public:
  void clear_scan_pause() ;
  const ::cmd::RotaryPlatform::ScanPause& scan_pause() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::ScanPause* release_scan_pause();
  ::cmd::RotaryPlatform::ScanPause* mutable_scan_pause();
  void set_allocated_scan_pause(::cmd::RotaryPlatform::ScanPause* value);
  void unsafe_arena_set_allocated_scan_pause(::cmd::RotaryPlatform::ScanPause* value);
  ::cmd::RotaryPlatform::ScanPause* unsafe_arena_release_scan_pause();

  private:
  const ::cmd::RotaryPlatform::ScanPause& _internal_scan_pause() const;
  ::cmd::RotaryPlatform::ScanPause* _internal_mutable_scan_pause();

  public:
  // .cmd.RotaryPlatform.ScanUnpause scan_unpause = 16;
  bool has_scan_unpause() const;
  private:
  bool _internal_has_scan_unpause() const;

  public:
  void clear_scan_unpause() ;
  const ::cmd::RotaryPlatform::ScanUnpause& scan_unpause() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::ScanUnpause* release_scan_unpause();
  ::cmd::RotaryPlatform::ScanUnpause* mutable_scan_unpause();
  void set_allocated_scan_unpause(::cmd::RotaryPlatform::ScanUnpause* value);
  void unsafe_arena_set_allocated_scan_unpause(::cmd::RotaryPlatform::ScanUnpause* value);
  ::cmd::RotaryPlatform::ScanUnpause* unsafe_arena_release_scan_unpause();

  private:
  const ::cmd::RotaryPlatform::ScanUnpause& _internal_scan_unpause() const;
  ::cmd::RotaryPlatform::ScanUnpause* _internal_mutable_scan_unpause();

  public:
  // .cmd.RotaryPlatform.GetMeteo get_meteo = 17;
  bool has_get_meteo() const;
  private:
  bool _internal_has_get_meteo() const;

  public:
  void clear_get_meteo() ;
  const ::cmd::RotaryPlatform::GetMeteo& get_meteo() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::GetMeteo* release_get_meteo();
  ::cmd::RotaryPlatform::GetMeteo* mutable_get_meteo();
  void set_allocated_get_meteo(::cmd::RotaryPlatform::GetMeteo* value);
  void unsafe_arena_set_allocated_get_meteo(::cmd::RotaryPlatform::GetMeteo* value);
  ::cmd::RotaryPlatform::GetMeteo* unsafe_arena_release_get_meteo();

  private:
  const ::cmd::RotaryPlatform::GetMeteo& _internal_get_meteo() const;
  ::cmd::RotaryPlatform::GetMeteo* _internal_mutable_get_meteo();

  public:
  // .cmd.RotaryPlatform.ScanPrev scan_prev = 18;
  bool has_scan_prev() const;
  private:
  bool _internal_has_scan_prev() const;

  public:
  void clear_scan_prev() ;
  const ::cmd::RotaryPlatform::ScanPrev& scan_prev() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::ScanPrev* release_scan_prev();
  ::cmd::RotaryPlatform::ScanPrev* mutable_scan_prev();
  void set_allocated_scan_prev(::cmd::RotaryPlatform::ScanPrev* value);
  void unsafe_arena_set_allocated_scan_prev(::cmd::RotaryPlatform::ScanPrev* value);
  ::cmd::RotaryPlatform::ScanPrev* unsafe_arena_release_scan_prev();

  private:
  const ::cmd::RotaryPlatform::ScanPrev& _internal_scan_prev() const;
  ::cmd::RotaryPlatform::ScanPrev* _internal_mutable_scan_prev();

  public:
  // .cmd.RotaryPlatform.ScanNext scan_next = 19;
  bool has_scan_next() const;
  private:
  bool _internal_has_scan_next() const;

  public:
  void clear_scan_next() ;
  const ::cmd::RotaryPlatform::ScanNext& scan_next() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::ScanNext* release_scan_next();
  ::cmd::RotaryPlatform::ScanNext* mutable_scan_next();
  void set_allocated_scan_next(::cmd::RotaryPlatform::ScanNext* value);
  void unsafe_arena_set_allocated_scan_next(::cmd::RotaryPlatform::ScanNext* value);
  ::cmd::RotaryPlatform::ScanNext* unsafe_arena_release_scan_next();

  private:
  const ::cmd::RotaryPlatform::ScanNext& _internal_scan_next() const;
  ::cmd::RotaryPlatform::ScanNext* _internal_mutable_scan_next();

  public:
  // .cmd.RotaryPlatform.ScanRefreshNodeList scan_refresh_node_list = 20;
  bool has_scan_refresh_node_list() const;
  private:
  bool _internal_has_scan_refresh_node_list() const;

  public:
  void clear_scan_refresh_node_list() ;
  const ::cmd::RotaryPlatform::ScanRefreshNodeList& scan_refresh_node_list() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::ScanRefreshNodeList* release_scan_refresh_node_list();
  ::cmd::RotaryPlatform::ScanRefreshNodeList* mutable_scan_refresh_node_list();
  void set_allocated_scan_refresh_node_list(::cmd::RotaryPlatform::ScanRefreshNodeList* value);
  void unsafe_arena_set_allocated_scan_refresh_node_list(::cmd::RotaryPlatform::ScanRefreshNodeList* value);
  ::cmd::RotaryPlatform::ScanRefreshNodeList* unsafe_arena_release_scan_refresh_node_list();

  private:
  const ::cmd::RotaryPlatform::ScanRefreshNodeList& _internal_scan_refresh_node_list() const;
  ::cmd::RotaryPlatform::ScanRefreshNodeList* _internal_mutable_scan_refresh_node_list();

  public:
  // .cmd.RotaryPlatform.ScanSelectNode scan_select_node = 21;
  bool has_scan_select_node() const;
  private:
  bool _internal_has_scan_select_node() const;

  public:
  void clear_scan_select_node() ;
  const ::cmd::RotaryPlatform::ScanSelectNode& scan_select_node() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::ScanSelectNode* release_scan_select_node();
  ::cmd::RotaryPlatform::ScanSelectNode* mutable_scan_select_node();
  void set_allocated_scan_select_node(::cmd::RotaryPlatform::ScanSelectNode* value);
  void unsafe_arena_set_allocated_scan_select_node(::cmd::RotaryPlatform::ScanSelectNode* value);
  ::cmd::RotaryPlatform::ScanSelectNode* unsafe_arena_release_scan_select_node();

  private:
  const ::cmd::RotaryPlatform::ScanSelectNode& _internal_scan_select_node() const;
  ::cmd::RotaryPlatform::ScanSelectNode* _internal_mutable_scan_select_node();

  public:
  // .cmd.RotaryPlatform.ScanDeleteNode scan_delete_node = 22;
  bool has_scan_delete_node() const;
  private:
  bool _internal_has_scan_delete_node() const;

  public:
  void clear_scan_delete_node() ;
  const ::cmd::RotaryPlatform::ScanDeleteNode& scan_delete_node() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::ScanDeleteNode* release_scan_delete_node();
  ::cmd::RotaryPlatform::ScanDeleteNode* mutable_scan_delete_node();
  void set_allocated_scan_delete_node(::cmd::RotaryPlatform::ScanDeleteNode* value);
  void unsafe_arena_set_allocated_scan_delete_node(::cmd::RotaryPlatform::ScanDeleteNode* value);
  ::cmd::RotaryPlatform::ScanDeleteNode* unsafe_arena_release_scan_delete_node();

  private:
  const ::cmd::RotaryPlatform::ScanDeleteNode& _internal_scan_delete_node() const;
  ::cmd::RotaryPlatform::ScanDeleteNode* _internal_mutable_scan_delete_node();

  public:
  // .cmd.RotaryPlatform.ScanUpdateNode scan_update_node = 23;
  bool has_scan_update_node() const;
  private:
  bool _internal_has_scan_update_node() const;

  public:
  void clear_scan_update_node() ;
  const ::cmd::RotaryPlatform::ScanUpdateNode& scan_update_node() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::ScanUpdateNode* release_scan_update_node();
  ::cmd::RotaryPlatform::ScanUpdateNode* mutable_scan_update_node();
  void set_allocated_scan_update_node(::cmd::RotaryPlatform::ScanUpdateNode* value);
  void unsafe_arena_set_allocated_scan_update_node(::cmd::RotaryPlatform::ScanUpdateNode* value);
  ::cmd::RotaryPlatform::ScanUpdateNode* unsafe_arena_release_scan_update_node();

  private:
  const ::cmd::RotaryPlatform::ScanUpdateNode& _internal_scan_update_node() const;
  ::cmd::RotaryPlatform::ScanUpdateNode* _internal_mutable_scan_update_node();

  public:
  // .cmd.RotaryPlatform.ScanAddNode scan_add_node = 24;
  bool has_scan_add_node() const;
  private:
  bool _internal_has_scan_add_node() const;

  public:
  void clear_scan_add_node() ;
  const ::cmd::RotaryPlatform::ScanAddNode& scan_add_node() const;
  PROTOBUF_NODISCARD ::cmd::RotaryPlatform::ScanAddNode* release_scan_add_node();
  ::cmd::RotaryPlatform::ScanAddNode* mutable_scan_add_node();
  void set_allocated_scan_add_node(::cmd::RotaryPlatform::ScanAddNode* value);
  void unsafe_arena_set_allocated_scan_add_node(::cmd::RotaryPlatform::ScanAddNode* value);
  ::cmd::RotaryPlatform::ScanAddNode* unsafe_arena_release_scan_add_node();

  private:
  const ::cmd::RotaryPlatform::ScanAddNode& _internal_scan_add_node() const;
  ::cmd::RotaryPlatform::ScanAddNode* _internal_mutable_scan_add_node();

  public:
  void clear_cmd();
  CmdCase cmd_case() const;
  // @@protoc_insertion_point(class_scope:cmd.RotaryPlatform.Root)
 private:
  class _Internal;
  void set_has_start();
  void set_has_stop();
  void set_has_axis();
  void set_has_set_platform_azimuth();
  void set_has_set_platform_elevation();
  void set_has_set_platform_bank();
  void set_has_halt();
  void set_has_set_use_rotary_as_compass();
  void set_has_rotate_to_gps();
  void set_has_set_origin_gps();
  void set_has_set_mode();
  void set_has_rotate_to_ndc();
  void set_has_scan_start();
  void set_has_scan_stop();
  void set_has_scan_pause();
  void set_has_scan_unpause();
  void set_has_get_meteo();
  void set_has_scan_prev();
  void set_has_scan_next();
  void set_has_scan_refresh_node_list();
  void set_has_scan_select_node();
  void set_has_scan_delete_node();
  void set_has_scan_update_node();
  void set_has_scan_add_node();
  inline bool has_cmd() const;
  inline void clear_has_cmd();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 24, 24,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Root& from_msg);
    union CmdUnion {
      constexpr CmdUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::cmd::RotaryPlatform::Start* start_;
      ::cmd::RotaryPlatform::Stop* stop_;
      ::cmd::RotaryPlatform::Axis* axis_;
      ::cmd::RotaryPlatform::SetPlatformAzimuth* set_platform_azimuth_;
      ::cmd::RotaryPlatform::SetPlatformElevation* set_platform_elevation_;
      ::cmd::RotaryPlatform::SetPlatformBank* set_platform_bank_;
      ::cmd::RotaryPlatform::Halt* halt_;
      ::cmd::RotaryPlatform::setUseRotaryAsCompass* set_use_rotary_as_compass_;
      ::cmd::RotaryPlatform::RotateToGPS* rotate_to_gps_;
      ::cmd::RotaryPlatform::SetOriginGPS* set_origin_gps_;
      ::cmd::RotaryPlatform::SetMode* set_mode_;
      ::cmd::RotaryPlatform::RotateToNDC* rotate_to_ndc_;
      ::cmd::RotaryPlatform::ScanStart* scan_start_;
      ::cmd::RotaryPlatform::ScanStop* scan_stop_;
      ::cmd::RotaryPlatform::ScanPause* scan_pause_;
      ::cmd::RotaryPlatform::ScanUnpause* scan_unpause_;
      ::cmd::RotaryPlatform::GetMeteo* get_meteo_;
      ::cmd::RotaryPlatform::ScanPrev* scan_prev_;
      ::cmd::RotaryPlatform::ScanNext* scan_next_;
      ::cmd::RotaryPlatform::ScanRefreshNodeList* scan_refresh_node_list_;
      ::cmd::RotaryPlatform::ScanSelectNode* scan_select_node_;
      ::cmd::RotaryPlatform::ScanDeleteNode* scan_delete_node_;
      ::cmd::RotaryPlatform::ScanUpdateNode* scan_update_node_;
      ::cmd::RotaryPlatform::ScanAddNode* scan_add_node_;
    } cmd_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5frotary_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Root

// .cmd.RotaryPlatform.Start start = 1;
inline bool Root::has_start() const {
  return cmd_case() == kStart;
}
inline bool Root::_internal_has_start() const {
  return cmd_case() == kStart;
}
inline void Root::set_has_start() {
  _impl_._oneof_case_[0] = kStart;
}
inline void Root::clear_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStart) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.start_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.start_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::Start* Root::release_start() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.start)
  if (cmd_case() == kStart) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.start_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.start_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::Start& Root::_internal_start() const {
  return cmd_case() == kStart ? *_impl_.cmd_.start_ : reinterpret_cast<::cmd::RotaryPlatform::Start&>(::cmd::RotaryPlatform::_Start_default_instance_);
}
inline const ::cmd::RotaryPlatform::Start& Root::start() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.start)
  return _internal_start();
}
inline ::cmd::RotaryPlatform::Start* Root::unsafe_arena_release_start() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.start)
  if (cmd_case() == kStart) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.start_;
    _impl_.cmd_.start_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_start(::cmd::RotaryPlatform::Start* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_start();
    _impl_.cmd_.start_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.start)
}
inline ::cmd::RotaryPlatform::Start* Root::_internal_mutable_start() {
  if (cmd_case() != kStart) {
    clear_cmd();
    set_has_start();
    _impl_.cmd_.start_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::Start>(GetArena());
  }
  return _impl_.cmd_.start_;
}
inline ::cmd::RotaryPlatform::Start* Root::mutable_start() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::Start* _msg = _internal_mutable_start();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.start)
  return _msg;
}

// .cmd.RotaryPlatform.Stop stop = 2;
inline bool Root::has_stop() const {
  return cmd_case() == kStop;
}
inline bool Root::_internal_has_stop() const {
  return cmd_case() == kStop;
}
inline void Root::set_has_stop() {
  _impl_._oneof_case_[0] = kStop;
}
inline void Root::clear_stop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStop) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.stop_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.stop_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::Stop* Root::release_stop() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.stop)
  if (cmd_case() == kStop) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.stop_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.stop_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::Stop& Root::_internal_stop() const {
  return cmd_case() == kStop ? *_impl_.cmd_.stop_ : reinterpret_cast<::cmd::RotaryPlatform::Stop&>(::cmd::RotaryPlatform::_Stop_default_instance_);
}
inline const ::cmd::RotaryPlatform::Stop& Root::stop() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.stop)
  return _internal_stop();
}
inline ::cmd::RotaryPlatform::Stop* Root::unsafe_arena_release_stop() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.stop)
  if (cmd_case() == kStop) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.stop_;
    _impl_.cmd_.stop_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_stop(::cmd::RotaryPlatform::Stop* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_stop();
    _impl_.cmd_.stop_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.stop)
}
inline ::cmd::RotaryPlatform::Stop* Root::_internal_mutable_stop() {
  if (cmd_case() != kStop) {
    clear_cmd();
    set_has_stop();
    _impl_.cmd_.stop_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::Stop>(GetArena());
  }
  return _impl_.cmd_.stop_;
}
inline ::cmd::RotaryPlatform::Stop* Root::mutable_stop() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::Stop* _msg = _internal_mutable_stop();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.stop)
  return _msg;
}

// .cmd.RotaryPlatform.Axis axis = 3;
inline bool Root::has_axis() const {
  return cmd_case() == kAxis;
}
inline bool Root::_internal_has_axis() const {
  return cmd_case() == kAxis;
}
inline void Root::set_has_axis() {
  _impl_._oneof_case_[0] = kAxis;
}
inline void Root::clear_axis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kAxis) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.axis_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.axis_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::Axis* Root::release_axis() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.axis)
  if (cmd_case() == kAxis) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.axis_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.axis_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::Axis& Root::_internal_axis() const {
  return cmd_case() == kAxis ? *_impl_.cmd_.axis_ : reinterpret_cast<::cmd::RotaryPlatform::Axis&>(::cmd::RotaryPlatform::_Axis_default_instance_);
}
inline const ::cmd::RotaryPlatform::Axis& Root::axis() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.axis)
  return _internal_axis();
}
inline ::cmd::RotaryPlatform::Axis* Root::unsafe_arena_release_axis() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.axis)
  if (cmd_case() == kAxis) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.axis_;
    _impl_.cmd_.axis_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_axis(::cmd::RotaryPlatform::Axis* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_axis();
    _impl_.cmd_.axis_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.axis)
}
inline ::cmd::RotaryPlatform::Axis* Root::_internal_mutable_axis() {
  if (cmd_case() != kAxis) {
    clear_cmd();
    set_has_axis();
    _impl_.cmd_.axis_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::Axis>(GetArena());
  }
  return _impl_.cmd_.axis_;
}
inline ::cmd::RotaryPlatform::Axis* Root::mutable_axis() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::Axis* _msg = _internal_mutable_axis();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.axis)
  return _msg;
}

// .cmd.RotaryPlatform.SetPlatformAzimuth set_platform_azimuth = 4;
inline bool Root::has_set_platform_azimuth() const {
  return cmd_case() == kSetPlatformAzimuth;
}
inline bool Root::_internal_has_set_platform_azimuth() const {
  return cmd_case() == kSetPlatformAzimuth;
}
inline void Root::set_has_set_platform_azimuth() {
  _impl_._oneof_case_[0] = kSetPlatformAzimuth;
}
inline void Root::clear_set_platform_azimuth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kSetPlatformAzimuth) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.set_platform_azimuth_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.set_platform_azimuth_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::SetPlatformAzimuth* Root::release_set_platform_azimuth() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.set_platform_azimuth)
  if (cmd_case() == kSetPlatformAzimuth) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_platform_azimuth_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.set_platform_azimuth_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::SetPlatformAzimuth& Root::_internal_set_platform_azimuth() const {
  return cmd_case() == kSetPlatformAzimuth ? *_impl_.cmd_.set_platform_azimuth_ : reinterpret_cast<::cmd::RotaryPlatform::SetPlatformAzimuth&>(::cmd::RotaryPlatform::_SetPlatformAzimuth_default_instance_);
}
inline const ::cmd::RotaryPlatform::SetPlatformAzimuth& Root::set_platform_azimuth() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.set_platform_azimuth)
  return _internal_set_platform_azimuth();
}
inline ::cmd::RotaryPlatform::SetPlatformAzimuth* Root::unsafe_arena_release_set_platform_azimuth() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.set_platform_azimuth)
  if (cmd_case() == kSetPlatformAzimuth) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_platform_azimuth_;
    _impl_.cmd_.set_platform_azimuth_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_set_platform_azimuth(::cmd::RotaryPlatform::SetPlatformAzimuth* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_set_platform_azimuth();
    _impl_.cmd_.set_platform_azimuth_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.set_platform_azimuth)
}
inline ::cmd::RotaryPlatform::SetPlatformAzimuth* Root::_internal_mutable_set_platform_azimuth() {
  if (cmd_case() != kSetPlatformAzimuth) {
    clear_cmd();
    set_has_set_platform_azimuth();
    _impl_.cmd_.set_platform_azimuth_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::SetPlatformAzimuth>(GetArena());
  }
  return _impl_.cmd_.set_platform_azimuth_;
}
inline ::cmd::RotaryPlatform::SetPlatformAzimuth* Root::mutable_set_platform_azimuth() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::SetPlatformAzimuth* _msg = _internal_mutable_set_platform_azimuth();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.set_platform_azimuth)
  return _msg;
}

// .cmd.RotaryPlatform.SetPlatformElevation set_platform_elevation = 5;
inline bool Root::has_set_platform_elevation() const {
  return cmd_case() == kSetPlatformElevation;
}
inline bool Root::_internal_has_set_platform_elevation() const {
  return cmd_case() == kSetPlatformElevation;
}
inline void Root::set_has_set_platform_elevation() {
  _impl_._oneof_case_[0] = kSetPlatformElevation;
}
inline void Root::clear_set_platform_elevation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kSetPlatformElevation) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.set_platform_elevation_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.set_platform_elevation_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::SetPlatformElevation* Root::release_set_platform_elevation() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.set_platform_elevation)
  if (cmd_case() == kSetPlatformElevation) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_platform_elevation_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.set_platform_elevation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::SetPlatformElevation& Root::_internal_set_platform_elevation() const {
  return cmd_case() == kSetPlatformElevation ? *_impl_.cmd_.set_platform_elevation_ : reinterpret_cast<::cmd::RotaryPlatform::SetPlatformElevation&>(::cmd::RotaryPlatform::_SetPlatformElevation_default_instance_);
}
inline const ::cmd::RotaryPlatform::SetPlatformElevation& Root::set_platform_elevation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.set_platform_elevation)
  return _internal_set_platform_elevation();
}
inline ::cmd::RotaryPlatform::SetPlatformElevation* Root::unsafe_arena_release_set_platform_elevation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.set_platform_elevation)
  if (cmd_case() == kSetPlatformElevation) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_platform_elevation_;
    _impl_.cmd_.set_platform_elevation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_set_platform_elevation(::cmd::RotaryPlatform::SetPlatformElevation* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_set_platform_elevation();
    _impl_.cmd_.set_platform_elevation_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.set_platform_elevation)
}
inline ::cmd::RotaryPlatform::SetPlatformElevation* Root::_internal_mutable_set_platform_elevation() {
  if (cmd_case() != kSetPlatformElevation) {
    clear_cmd();
    set_has_set_platform_elevation();
    _impl_.cmd_.set_platform_elevation_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::SetPlatformElevation>(GetArena());
  }
  return _impl_.cmd_.set_platform_elevation_;
}
inline ::cmd::RotaryPlatform::SetPlatformElevation* Root::mutable_set_platform_elevation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::SetPlatformElevation* _msg = _internal_mutable_set_platform_elevation();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.set_platform_elevation)
  return _msg;
}

// .cmd.RotaryPlatform.SetPlatformBank set_platform_bank = 6;
inline bool Root::has_set_platform_bank() const {
  return cmd_case() == kSetPlatformBank;
}
inline bool Root::_internal_has_set_platform_bank() const {
  return cmd_case() == kSetPlatformBank;
}
inline void Root::set_has_set_platform_bank() {
  _impl_._oneof_case_[0] = kSetPlatformBank;
}
inline void Root::clear_set_platform_bank() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kSetPlatformBank) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.set_platform_bank_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.set_platform_bank_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::SetPlatformBank* Root::release_set_platform_bank() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.set_platform_bank)
  if (cmd_case() == kSetPlatformBank) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_platform_bank_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.set_platform_bank_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::SetPlatformBank& Root::_internal_set_platform_bank() const {
  return cmd_case() == kSetPlatformBank ? *_impl_.cmd_.set_platform_bank_ : reinterpret_cast<::cmd::RotaryPlatform::SetPlatformBank&>(::cmd::RotaryPlatform::_SetPlatformBank_default_instance_);
}
inline const ::cmd::RotaryPlatform::SetPlatformBank& Root::set_platform_bank() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.set_platform_bank)
  return _internal_set_platform_bank();
}
inline ::cmd::RotaryPlatform::SetPlatformBank* Root::unsafe_arena_release_set_platform_bank() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.set_platform_bank)
  if (cmd_case() == kSetPlatformBank) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_platform_bank_;
    _impl_.cmd_.set_platform_bank_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_set_platform_bank(::cmd::RotaryPlatform::SetPlatformBank* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_set_platform_bank();
    _impl_.cmd_.set_platform_bank_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.set_platform_bank)
}
inline ::cmd::RotaryPlatform::SetPlatformBank* Root::_internal_mutable_set_platform_bank() {
  if (cmd_case() != kSetPlatformBank) {
    clear_cmd();
    set_has_set_platform_bank();
    _impl_.cmd_.set_platform_bank_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::SetPlatformBank>(GetArena());
  }
  return _impl_.cmd_.set_platform_bank_;
}
inline ::cmd::RotaryPlatform::SetPlatformBank* Root::mutable_set_platform_bank() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::SetPlatformBank* _msg = _internal_mutable_set_platform_bank();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.set_platform_bank)
  return _msg;
}

// .cmd.RotaryPlatform.Halt halt = 7;
inline bool Root::has_halt() const {
  return cmd_case() == kHalt;
}
inline bool Root::_internal_has_halt() const {
  return cmd_case() == kHalt;
}
inline void Root::set_has_halt() {
  _impl_._oneof_case_[0] = kHalt;
}
inline void Root::clear_halt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kHalt) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.halt_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.halt_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::Halt* Root::release_halt() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.halt)
  if (cmd_case() == kHalt) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.halt_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.halt_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::Halt& Root::_internal_halt() const {
  return cmd_case() == kHalt ? *_impl_.cmd_.halt_ : reinterpret_cast<::cmd::RotaryPlatform::Halt&>(::cmd::RotaryPlatform::_Halt_default_instance_);
}
inline const ::cmd::RotaryPlatform::Halt& Root::halt() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.halt)
  return _internal_halt();
}
inline ::cmd::RotaryPlatform::Halt* Root::unsafe_arena_release_halt() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.halt)
  if (cmd_case() == kHalt) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.halt_;
    _impl_.cmd_.halt_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_halt(::cmd::RotaryPlatform::Halt* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_halt();
    _impl_.cmd_.halt_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.halt)
}
inline ::cmd::RotaryPlatform::Halt* Root::_internal_mutable_halt() {
  if (cmd_case() != kHalt) {
    clear_cmd();
    set_has_halt();
    _impl_.cmd_.halt_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::Halt>(GetArena());
  }
  return _impl_.cmd_.halt_;
}
inline ::cmd::RotaryPlatform::Halt* Root::mutable_halt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::Halt* _msg = _internal_mutable_halt();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.halt)
  return _msg;
}

// .cmd.RotaryPlatform.setUseRotaryAsCompass set_use_rotary_as_compass = 8;
inline bool Root::has_set_use_rotary_as_compass() const {
  return cmd_case() == kSetUseRotaryAsCompass;
}
inline bool Root::_internal_has_set_use_rotary_as_compass() const {
  return cmd_case() == kSetUseRotaryAsCompass;
}
inline void Root::set_has_set_use_rotary_as_compass() {
  _impl_._oneof_case_[0] = kSetUseRotaryAsCompass;
}
inline void Root::clear_set_use_rotary_as_compass() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kSetUseRotaryAsCompass) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.set_use_rotary_as_compass_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.set_use_rotary_as_compass_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::setUseRotaryAsCompass* Root::release_set_use_rotary_as_compass() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.set_use_rotary_as_compass)
  if (cmd_case() == kSetUseRotaryAsCompass) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_use_rotary_as_compass_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.set_use_rotary_as_compass_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::setUseRotaryAsCompass& Root::_internal_set_use_rotary_as_compass() const {
  return cmd_case() == kSetUseRotaryAsCompass ? *_impl_.cmd_.set_use_rotary_as_compass_ : reinterpret_cast<::cmd::RotaryPlatform::setUseRotaryAsCompass&>(::cmd::RotaryPlatform::_setUseRotaryAsCompass_default_instance_);
}
inline const ::cmd::RotaryPlatform::setUseRotaryAsCompass& Root::set_use_rotary_as_compass() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.set_use_rotary_as_compass)
  return _internal_set_use_rotary_as_compass();
}
inline ::cmd::RotaryPlatform::setUseRotaryAsCompass* Root::unsafe_arena_release_set_use_rotary_as_compass() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.set_use_rotary_as_compass)
  if (cmd_case() == kSetUseRotaryAsCompass) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_use_rotary_as_compass_;
    _impl_.cmd_.set_use_rotary_as_compass_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_set_use_rotary_as_compass(::cmd::RotaryPlatform::setUseRotaryAsCompass* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_set_use_rotary_as_compass();
    _impl_.cmd_.set_use_rotary_as_compass_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.set_use_rotary_as_compass)
}
inline ::cmd::RotaryPlatform::setUseRotaryAsCompass* Root::_internal_mutable_set_use_rotary_as_compass() {
  if (cmd_case() != kSetUseRotaryAsCompass) {
    clear_cmd();
    set_has_set_use_rotary_as_compass();
    _impl_.cmd_.set_use_rotary_as_compass_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::setUseRotaryAsCompass>(GetArena());
  }
  return _impl_.cmd_.set_use_rotary_as_compass_;
}
inline ::cmd::RotaryPlatform::setUseRotaryAsCompass* Root::mutable_set_use_rotary_as_compass() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::setUseRotaryAsCompass* _msg = _internal_mutable_set_use_rotary_as_compass();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.set_use_rotary_as_compass)
  return _msg;
}

// .cmd.RotaryPlatform.RotateToGPS rotate_to_gps = 9;
inline bool Root::has_rotate_to_gps() const {
  return cmd_case() == kRotateToGps;
}
inline bool Root::_internal_has_rotate_to_gps() const {
  return cmd_case() == kRotateToGps;
}
inline void Root::set_has_rotate_to_gps() {
  _impl_._oneof_case_[0] = kRotateToGps;
}
inline void Root::clear_rotate_to_gps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kRotateToGps) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.rotate_to_gps_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.rotate_to_gps_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::RotateToGPS* Root::release_rotate_to_gps() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.rotate_to_gps)
  if (cmd_case() == kRotateToGps) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.rotate_to_gps_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.rotate_to_gps_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::RotateToGPS& Root::_internal_rotate_to_gps() const {
  return cmd_case() == kRotateToGps ? *_impl_.cmd_.rotate_to_gps_ : reinterpret_cast<::cmd::RotaryPlatform::RotateToGPS&>(::cmd::RotaryPlatform::_RotateToGPS_default_instance_);
}
inline const ::cmd::RotaryPlatform::RotateToGPS& Root::rotate_to_gps() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.rotate_to_gps)
  return _internal_rotate_to_gps();
}
inline ::cmd::RotaryPlatform::RotateToGPS* Root::unsafe_arena_release_rotate_to_gps() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.rotate_to_gps)
  if (cmd_case() == kRotateToGps) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.rotate_to_gps_;
    _impl_.cmd_.rotate_to_gps_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_rotate_to_gps(::cmd::RotaryPlatform::RotateToGPS* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_rotate_to_gps();
    _impl_.cmd_.rotate_to_gps_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.rotate_to_gps)
}
inline ::cmd::RotaryPlatform::RotateToGPS* Root::_internal_mutable_rotate_to_gps() {
  if (cmd_case() != kRotateToGps) {
    clear_cmd();
    set_has_rotate_to_gps();
    _impl_.cmd_.rotate_to_gps_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::RotateToGPS>(GetArena());
  }
  return _impl_.cmd_.rotate_to_gps_;
}
inline ::cmd::RotaryPlatform::RotateToGPS* Root::mutable_rotate_to_gps() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::RotateToGPS* _msg = _internal_mutable_rotate_to_gps();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.rotate_to_gps)
  return _msg;
}

// .cmd.RotaryPlatform.SetOriginGPS set_origin_gps = 10;
inline bool Root::has_set_origin_gps() const {
  return cmd_case() == kSetOriginGps;
}
inline bool Root::_internal_has_set_origin_gps() const {
  return cmd_case() == kSetOriginGps;
}
inline void Root::set_has_set_origin_gps() {
  _impl_._oneof_case_[0] = kSetOriginGps;
}
inline void Root::clear_set_origin_gps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kSetOriginGps) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.set_origin_gps_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.set_origin_gps_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::SetOriginGPS* Root::release_set_origin_gps() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.set_origin_gps)
  if (cmd_case() == kSetOriginGps) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_origin_gps_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.set_origin_gps_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::SetOriginGPS& Root::_internal_set_origin_gps() const {
  return cmd_case() == kSetOriginGps ? *_impl_.cmd_.set_origin_gps_ : reinterpret_cast<::cmd::RotaryPlatform::SetOriginGPS&>(::cmd::RotaryPlatform::_SetOriginGPS_default_instance_);
}
inline const ::cmd::RotaryPlatform::SetOriginGPS& Root::set_origin_gps() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.set_origin_gps)
  return _internal_set_origin_gps();
}
inline ::cmd::RotaryPlatform::SetOriginGPS* Root::unsafe_arena_release_set_origin_gps() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.set_origin_gps)
  if (cmd_case() == kSetOriginGps) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_origin_gps_;
    _impl_.cmd_.set_origin_gps_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_set_origin_gps(::cmd::RotaryPlatform::SetOriginGPS* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_set_origin_gps();
    _impl_.cmd_.set_origin_gps_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.set_origin_gps)
}
inline ::cmd::RotaryPlatform::SetOriginGPS* Root::_internal_mutable_set_origin_gps() {
  if (cmd_case() != kSetOriginGps) {
    clear_cmd();
    set_has_set_origin_gps();
    _impl_.cmd_.set_origin_gps_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::SetOriginGPS>(GetArena());
  }
  return _impl_.cmd_.set_origin_gps_;
}
inline ::cmd::RotaryPlatform::SetOriginGPS* Root::mutable_set_origin_gps() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::SetOriginGPS* _msg = _internal_mutable_set_origin_gps();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.set_origin_gps)
  return _msg;
}

// .cmd.RotaryPlatform.SetMode set_mode = 11;
inline bool Root::has_set_mode() const {
  return cmd_case() == kSetMode;
}
inline bool Root::_internal_has_set_mode() const {
  return cmd_case() == kSetMode;
}
inline void Root::set_has_set_mode() {
  _impl_._oneof_case_[0] = kSetMode;
}
inline void Root::clear_set_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kSetMode) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.set_mode_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.set_mode_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::SetMode* Root::release_set_mode() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.set_mode)
  if (cmd_case() == kSetMode) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_mode_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.set_mode_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::SetMode& Root::_internal_set_mode() const {
  return cmd_case() == kSetMode ? *_impl_.cmd_.set_mode_ : reinterpret_cast<::cmd::RotaryPlatform::SetMode&>(::cmd::RotaryPlatform::_SetMode_default_instance_);
}
inline const ::cmd::RotaryPlatform::SetMode& Root::set_mode() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.set_mode)
  return _internal_set_mode();
}
inline ::cmd::RotaryPlatform::SetMode* Root::unsafe_arena_release_set_mode() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.set_mode)
  if (cmd_case() == kSetMode) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_mode_;
    _impl_.cmd_.set_mode_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_set_mode(::cmd::RotaryPlatform::SetMode* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_set_mode();
    _impl_.cmd_.set_mode_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.set_mode)
}
inline ::cmd::RotaryPlatform::SetMode* Root::_internal_mutable_set_mode() {
  if (cmd_case() != kSetMode) {
    clear_cmd();
    set_has_set_mode();
    _impl_.cmd_.set_mode_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::SetMode>(GetArena());
  }
  return _impl_.cmd_.set_mode_;
}
inline ::cmd::RotaryPlatform::SetMode* Root::mutable_set_mode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::SetMode* _msg = _internal_mutable_set_mode();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.set_mode)
  return _msg;
}

// .cmd.RotaryPlatform.RotateToNDC rotate_to_ndc = 12;
inline bool Root::has_rotate_to_ndc() const {
  return cmd_case() == kRotateToNdc;
}
inline bool Root::_internal_has_rotate_to_ndc() const {
  return cmd_case() == kRotateToNdc;
}
inline void Root::set_has_rotate_to_ndc() {
  _impl_._oneof_case_[0] = kRotateToNdc;
}
inline void Root::clear_rotate_to_ndc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kRotateToNdc) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.rotate_to_ndc_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.rotate_to_ndc_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::RotateToNDC* Root::release_rotate_to_ndc() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.rotate_to_ndc)
  if (cmd_case() == kRotateToNdc) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.rotate_to_ndc_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.rotate_to_ndc_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::RotateToNDC& Root::_internal_rotate_to_ndc() const {
  return cmd_case() == kRotateToNdc ? *_impl_.cmd_.rotate_to_ndc_ : reinterpret_cast<::cmd::RotaryPlatform::RotateToNDC&>(::cmd::RotaryPlatform::_RotateToNDC_default_instance_);
}
inline const ::cmd::RotaryPlatform::RotateToNDC& Root::rotate_to_ndc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.rotate_to_ndc)
  return _internal_rotate_to_ndc();
}
inline ::cmd::RotaryPlatform::RotateToNDC* Root::unsafe_arena_release_rotate_to_ndc() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.rotate_to_ndc)
  if (cmd_case() == kRotateToNdc) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.rotate_to_ndc_;
    _impl_.cmd_.rotate_to_ndc_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_rotate_to_ndc(::cmd::RotaryPlatform::RotateToNDC* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_rotate_to_ndc();
    _impl_.cmd_.rotate_to_ndc_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.rotate_to_ndc)
}
inline ::cmd::RotaryPlatform::RotateToNDC* Root::_internal_mutable_rotate_to_ndc() {
  if (cmd_case() != kRotateToNdc) {
    clear_cmd();
    set_has_rotate_to_ndc();
    _impl_.cmd_.rotate_to_ndc_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::RotateToNDC>(GetArena());
  }
  return _impl_.cmd_.rotate_to_ndc_;
}
inline ::cmd::RotaryPlatform::RotateToNDC* Root::mutable_rotate_to_ndc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::RotateToNDC* _msg = _internal_mutable_rotate_to_ndc();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.rotate_to_ndc)
  return _msg;
}

// .cmd.RotaryPlatform.ScanStart scan_start = 13;
inline bool Root::has_scan_start() const {
  return cmd_case() == kScanStart;
}
inline bool Root::_internal_has_scan_start() const {
  return cmd_case() == kScanStart;
}
inline void Root::set_has_scan_start() {
  _impl_._oneof_case_[0] = kScanStart;
}
inline void Root::clear_scan_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kScanStart) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.scan_start_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.scan_start_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::ScanStart* Root::release_scan_start() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.scan_start)
  if (cmd_case() == kScanStart) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_start_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.scan_start_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::ScanStart& Root::_internal_scan_start() const {
  return cmd_case() == kScanStart ? *_impl_.cmd_.scan_start_ : reinterpret_cast<::cmd::RotaryPlatform::ScanStart&>(::cmd::RotaryPlatform::_ScanStart_default_instance_);
}
inline const ::cmd::RotaryPlatform::ScanStart& Root::scan_start() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.scan_start)
  return _internal_scan_start();
}
inline ::cmd::RotaryPlatform::ScanStart* Root::unsafe_arena_release_scan_start() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.scan_start)
  if (cmd_case() == kScanStart) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_start_;
    _impl_.cmd_.scan_start_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_scan_start(::cmd::RotaryPlatform::ScanStart* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_scan_start();
    _impl_.cmd_.scan_start_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.scan_start)
}
inline ::cmd::RotaryPlatform::ScanStart* Root::_internal_mutable_scan_start() {
  if (cmd_case() != kScanStart) {
    clear_cmd();
    set_has_scan_start();
    _impl_.cmd_.scan_start_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::ScanStart>(GetArena());
  }
  return _impl_.cmd_.scan_start_;
}
inline ::cmd::RotaryPlatform::ScanStart* Root::mutable_scan_start() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::ScanStart* _msg = _internal_mutable_scan_start();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.scan_start)
  return _msg;
}

// .cmd.RotaryPlatform.ScanStop scan_stop = 14;
inline bool Root::has_scan_stop() const {
  return cmd_case() == kScanStop;
}
inline bool Root::_internal_has_scan_stop() const {
  return cmd_case() == kScanStop;
}
inline void Root::set_has_scan_stop() {
  _impl_._oneof_case_[0] = kScanStop;
}
inline void Root::clear_scan_stop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kScanStop) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.scan_stop_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.scan_stop_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::ScanStop* Root::release_scan_stop() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.scan_stop)
  if (cmd_case() == kScanStop) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_stop_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.scan_stop_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::ScanStop& Root::_internal_scan_stop() const {
  return cmd_case() == kScanStop ? *_impl_.cmd_.scan_stop_ : reinterpret_cast<::cmd::RotaryPlatform::ScanStop&>(::cmd::RotaryPlatform::_ScanStop_default_instance_);
}
inline const ::cmd::RotaryPlatform::ScanStop& Root::scan_stop() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.scan_stop)
  return _internal_scan_stop();
}
inline ::cmd::RotaryPlatform::ScanStop* Root::unsafe_arena_release_scan_stop() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.scan_stop)
  if (cmd_case() == kScanStop) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_stop_;
    _impl_.cmd_.scan_stop_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_scan_stop(::cmd::RotaryPlatform::ScanStop* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_scan_stop();
    _impl_.cmd_.scan_stop_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.scan_stop)
}
inline ::cmd::RotaryPlatform::ScanStop* Root::_internal_mutable_scan_stop() {
  if (cmd_case() != kScanStop) {
    clear_cmd();
    set_has_scan_stop();
    _impl_.cmd_.scan_stop_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::ScanStop>(GetArena());
  }
  return _impl_.cmd_.scan_stop_;
}
inline ::cmd::RotaryPlatform::ScanStop* Root::mutable_scan_stop() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::ScanStop* _msg = _internal_mutable_scan_stop();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.scan_stop)
  return _msg;
}

// .cmd.RotaryPlatform.ScanPause scan_pause = 15;
inline bool Root::has_scan_pause() const {
  return cmd_case() == kScanPause;
}
inline bool Root::_internal_has_scan_pause() const {
  return cmd_case() == kScanPause;
}
inline void Root::set_has_scan_pause() {
  _impl_._oneof_case_[0] = kScanPause;
}
inline void Root::clear_scan_pause() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kScanPause) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.scan_pause_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.scan_pause_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::ScanPause* Root::release_scan_pause() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.scan_pause)
  if (cmd_case() == kScanPause) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_pause_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.scan_pause_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::ScanPause& Root::_internal_scan_pause() const {
  return cmd_case() == kScanPause ? *_impl_.cmd_.scan_pause_ : reinterpret_cast<::cmd::RotaryPlatform::ScanPause&>(::cmd::RotaryPlatform::_ScanPause_default_instance_);
}
inline const ::cmd::RotaryPlatform::ScanPause& Root::scan_pause() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.scan_pause)
  return _internal_scan_pause();
}
inline ::cmd::RotaryPlatform::ScanPause* Root::unsafe_arena_release_scan_pause() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.scan_pause)
  if (cmd_case() == kScanPause) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_pause_;
    _impl_.cmd_.scan_pause_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_scan_pause(::cmd::RotaryPlatform::ScanPause* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_scan_pause();
    _impl_.cmd_.scan_pause_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.scan_pause)
}
inline ::cmd::RotaryPlatform::ScanPause* Root::_internal_mutable_scan_pause() {
  if (cmd_case() != kScanPause) {
    clear_cmd();
    set_has_scan_pause();
    _impl_.cmd_.scan_pause_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::ScanPause>(GetArena());
  }
  return _impl_.cmd_.scan_pause_;
}
inline ::cmd::RotaryPlatform::ScanPause* Root::mutable_scan_pause() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::ScanPause* _msg = _internal_mutable_scan_pause();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.scan_pause)
  return _msg;
}

// .cmd.RotaryPlatform.ScanUnpause scan_unpause = 16;
inline bool Root::has_scan_unpause() const {
  return cmd_case() == kScanUnpause;
}
inline bool Root::_internal_has_scan_unpause() const {
  return cmd_case() == kScanUnpause;
}
inline void Root::set_has_scan_unpause() {
  _impl_._oneof_case_[0] = kScanUnpause;
}
inline void Root::clear_scan_unpause() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kScanUnpause) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.scan_unpause_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.scan_unpause_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::ScanUnpause* Root::release_scan_unpause() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.scan_unpause)
  if (cmd_case() == kScanUnpause) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_unpause_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.scan_unpause_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::ScanUnpause& Root::_internal_scan_unpause() const {
  return cmd_case() == kScanUnpause ? *_impl_.cmd_.scan_unpause_ : reinterpret_cast<::cmd::RotaryPlatform::ScanUnpause&>(::cmd::RotaryPlatform::_ScanUnpause_default_instance_);
}
inline const ::cmd::RotaryPlatform::ScanUnpause& Root::scan_unpause() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.scan_unpause)
  return _internal_scan_unpause();
}
inline ::cmd::RotaryPlatform::ScanUnpause* Root::unsafe_arena_release_scan_unpause() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.scan_unpause)
  if (cmd_case() == kScanUnpause) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_unpause_;
    _impl_.cmd_.scan_unpause_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_scan_unpause(::cmd::RotaryPlatform::ScanUnpause* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_scan_unpause();
    _impl_.cmd_.scan_unpause_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.scan_unpause)
}
inline ::cmd::RotaryPlatform::ScanUnpause* Root::_internal_mutable_scan_unpause() {
  if (cmd_case() != kScanUnpause) {
    clear_cmd();
    set_has_scan_unpause();
    _impl_.cmd_.scan_unpause_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::ScanUnpause>(GetArena());
  }
  return _impl_.cmd_.scan_unpause_;
}
inline ::cmd::RotaryPlatform::ScanUnpause* Root::mutable_scan_unpause() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::ScanUnpause* _msg = _internal_mutable_scan_unpause();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.scan_unpause)
  return _msg;
}

// .cmd.RotaryPlatform.GetMeteo get_meteo = 17;
inline bool Root::has_get_meteo() const {
  return cmd_case() == kGetMeteo;
}
inline bool Root::_internal_has_get_meteo() const {
  return cmd_case() == kGetMeteo;
}
inline void Root::set_has_get_meteo() {
  _impl_._oneof_case_[0] = kGetMeteo;
}
inline void Root::clear_get_meteo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kGetMeteo) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.get_meteo_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.get_meteo_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::GetMeteo* Root::release_get_meteo() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.get_meteo)
  if (cmd_case() == kGetMeteo) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.get_meteo_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.get_meteo_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::GetMeteo& Root::_internal_get_meteo() const {
  return cmd_case() == kGetMeteo ? *_impl_.cmd_.get_meteo_ : reinterpret_cast<::cmd::RotaryPlatform::GetMeteo&>(::cmd::RotaryPlatform::_GetMeteo_default_instance_);
}
inline const ::cmd::RotaryPlatform::GetMeteo& Root::get_meteo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.get_meteo)
  return _internal_get_meteo();
}
inline ::cmd::RotaryPlatform::GetMeteo* Root::unsafe_arena_release_get_meteo() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.get_meteo)
  if (cmd_case() == kGetMeteo) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.get_meteo_;
    _impl_.cmd_.get_meteo_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_get_meteo(::cmd::RotaryPlatform::GetMeteo* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_get_meteo();
    _impl_.cmd_.get_meteo_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.get_meteo)
}
inline ::cmd::RotaryPlatform::GetMeteo* Root::_internal_mutable_get_meteo() {
  if (cmd_case() != kGetMeteo) {
    clear_cmd();
    set_has_get_meteo();
    _impl_.cmd_.get_meteo_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::GetMeteo>(GetArena());
  }
  return _impl_.cmd_.get_meteo_;
}
inline ::cmd::RotaryPlatform::GetMeteo* Root::mutable_get_meteo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::GetMeteo* _msg = _internal_mutable_get_meteo();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.get_meteo)
  return _msg;
}

// .cmd.RotaryPlatform.ScanPrev scan_prev = 18;
inline bool Root::has_scan_prev() const {
  return cmd_case() == kScanPrev;
}
inline bool Root::_internal_has_scan_prev() const {
  return cmd_case() == kScanPrev;
}
inline void Root::set_has_scan_prev() {
  _impl_._oneof_case_[0] = kScanPrev;
}
inline void Root::clear_scan_prev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kScanPrev) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.scan_prev_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.scan_prev_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::ScanPrev* Root::release_scan_prev() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.scan_prev)
  if (cmd_case() == kScanPrev) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_prev_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.scan_prev_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::ScanPrev& Root::_internal_scan_prev() const {
  return cmd_case() == kScanPrev ? *_impl_.cmd_.scan_prev_ : reinterpret_cast<::cmd::RotaryPlatform::ScanPrev&>(::cmd::RotaryPlatform::_ScanPrev_default_instance_);
}
inline const ::cmd::RotaryPlatform::ScanPrev& Root::scan_prev() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.scan_prev)
  return _internal_scan_prev();
}
inline ::cmd::RotaryPlatform::ScanPrev* Root::unsafe_arena_release_scan_prev() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.scan_prev)
  if (cmd_case() == kScanPrev) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_prev_;
    _impl_.cmd_.scan_prev_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_scan_prev(::cmd::RotaryPlatform::ScanPrev* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_scan_prev();
    _impl_.cmd_.scan_prev_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.scan_prev)
}
inline ::cmd::RotaryPlatform::ScanPrev* Root::_internal_mutable_scan_prev() {
  if (cmd_case() != kScanPrev) {
    clear_cmd();
    set_has_scan_prev();
    _impl_.cmd_.scan_prev_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::ScanPrev>(GetArena());
  }
  return _impl_.cmd_.scan_prev_;
}
inline ::cmd::RotaryPlatform::ScanPrev* Root::mutable_scan_prev() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::ScanPrev* _msg = _internal_mutable_scan_prev();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.scan_prev)
  return _msg;
}

// .cmd.RotaryPlatform.ScanNext scan_next = 19;
inline bool Root::has_scan_next() const {
  return cmd_case() == kScanNext;
}
inline bool Root::_internal_has_scan_next() const {
  return cmd_case() == kScanNext;
}
inline void Root::set_has_scan_next() {
  _impl_._oneof_case_[0] = kScanNext;
}
inline void Root::clear_scan_next() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kScanNext) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.scan_next_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.scan_next_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::ScanNext* Root::release_scan_next() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.scan_next)
  if (cmd_case() == kScanNext) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_next_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.scan_next_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::ScanNext& Root::_internal_scan_next() const {
  return cmd_case() == kScanNext ? *_impl_.cmd_.scan_next_ : reinterpret_cast<::cmd::RotaryPlatform::ScanNext&>(::cmd::RotaryPlatform::_ScanNext_default_instance_);
}
inline const ::cmd::RotaryPlatform::ScanNext& Root::scan_next() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.scan_next)
  return _internal_scan_next();
}
inline ::cmd::RotaryPlatform::ScanNext* Root::unsafe_arena_release_scan_next() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.scan_next)
  if (cmd_case() == kScanNext) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_next_;
    _impl_.cmd_.scan_next_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_scan_next(::cmd::RotaryPlatform::ScanNext* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_scan_next();
    _impl_.cmd_.scan_next_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.scan_next)
}
inline ::cmd::RotaryPlatform::ScanNext* Root::_internal_mutable_scan_next() {
  if (cmd_case() != kScanNext) {
    clear_cmd();
    set_has_scan_next();
    _impl_.cmd_.scan_next_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::ScanNext>(GetArena());
  }
  return _impl_.cmd_.scan_next_;
}
inline ::cmd::RotaryPlatform::ScanNext* Root::mutable_scan_next() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::ScanNext* _msg = _internal_mutable_scan_next();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.scan_next)
  return _msg;
}

// .cmd.RotaryPlatform.ScanRefreshNodeList scan_refresh_node_list = 20;
inline bool Root::has_scan_refresh_node_list() const {
  return cmd_case() == kScanRefreshNodeList;
}
inline bool Root::_internal_has_scan_refresh_node_list() const {
  return cmd_case() == kScanRefreshNodeList;
}
inline void Root::set_has_scan_refresh_node_list() {
  _impl_._oneof_case_[0] = kScanRefreshNodeList;
}
inline void Root::clear_scan_refresh_node_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kScanRefreshNodeList) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.scan_refresh_node_list_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.scan_refresh_node_list_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::ScanRefreshNodeList* Root::release_scan_refresh_node_list() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.scan_refresh_node_list)
  if (cmd_case() == kScanRefreshNodeList) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_refresh_node_list_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.scan_refresh_node_list_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::ScanRefreshNodeList& Root::_internal_scan_refresh_node_list() const {
  return cmd_case() == kScanRefreshNodeList ? *_impl_.cmd_.scan_refresh_node_list_ : reinterpret_cast<::cmd::RotaryPlatform::ScanRefreshNodeList&>(::cmd::RotaryPlatform::_ScanRefreshNodeList_default_instance_);
}
inline const ::cmd::RotaryPlatform::ScanRefreshNodeList& Root::scan_refresh_node_list() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.scan_refresh_node_list)
  return _internal_scan_refresh_node_list();
}
inline ::cmd::RotaryPlatform::ScanRefreshNodeList* Root::unsafe_arena_release_scan_refresh_node_list() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.scan_refresh_node_list)
  if (cmd_case() == kScanRefreshNodeList) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_refresh_node_list_;
    _impl_.cmd_.scan_refresh_node_list_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_scan_refresh_node_list(::cmd::RotaryPlatform::ScanRefreshNodeList* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_scan_refresh_node_list();
    _impl_.cmd_.scan_refresh_node_list_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.scan_refresh_node_list)
}
inline ::cmd::RotaryPlatform::ScanRefreshNodeList* Root::_internal_mutable_scan_refresh_node_list() {
  if (cmd_case() != kScanRefreshNodeList) {
    clear_cmd();
    set_has_scan_refresh_node_list();
    _impl_.cmd_.scan_refresh_node_list_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::ScanRefreshNodeList>(GetArena());
  }
  return _impl_.cmd_.scan_refresh_node_list_;
}
inline ::cmd::RotaryPlatform::ScanRefreshNodeList* Root::mutable_scan_refresh_node_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::ScanRefreshNodeList* _msg = _internal_mutable_scan_refresh_node_list();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.scan_refresh_node_list)
  return _msg;
}

// .cmd.RotaryPlatform.ScanSelectNode scan_select_node = 21;
inline bool Root::has_scan_select_node() const {
  return cmd_case() == kScanSelectNode;
}
inline bool Root::_internal_has_scan_select_node() const {
  return cmd_case() == kScanSelectNode;
}
inline void Root::set_has_scan_select_node() {
  _impl_._oneof_case_[0] = kScanSelectNode;
}
inline void Root::clear_scan_select_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kScanSelectNode) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.scan_select_node_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.scan_select_node_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::ScanSelectNode* Root::release_scan_select_node() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.scan_select_node)
  if (cmd_case() == kScanSelectNode) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_select_node_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.scan_select_node_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::ScanSelectNode& Root::_internal_scan_select_node() const {
  return cmd_case() == kScanSelectNode ? *_impl_.cmd_.scan_select_node_ : reinterpret_cast<::cmd::RotaryPlatform::ScanSelectNode&>(::cmd::RotaryPlatform::_ScanSelectNode_default_instance_);
}
inline const ::cmd::RotaryPlatform::ScanSelectNode& Root::scan_select_node() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.scan_select_node)
  return _internal_scan_select_node();
}
inline ::cmd::RotaryPlatform::ScanSelectNode* Root::unsafe_arena_release_scan_select_node() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.scan_select_node)
  if (cmd_case() == kScanSelectNode) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_select_node_;
    _impl_.cmd_.scan_select_node_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_scan_select_node(::cmd::RotaryPlatform::ScanSelectNode* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_scan_select_node();
    _impl_.cmd_.scan_select_node_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.scan_select_node)
}
inline ::cmd::RotaryPlatform::ScanSelectNode* Root::_internal_mutable_scan_select_node() {
  if (cmd_case() != kScanSelectNode) {
    clear_cmd();
    set_has_scan_select_node();
    _impl_.cmd_.scan_select_node_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::ScanSelectNode>(GetArena());
  }
  return _impl_.cmd_.scan_select_node_;
}
inline ::cmd::RotaryPlatform::ScanSelectNode* Root::mutable_scan_select_node() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::ScanSelectNode* _msg = _internal_mutable_scan_select_node();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.scan_select_node)
  return _msg;
}

// .cmd.RotaryPlatform.ScanDeleteNode scan_delete_node = 22;
inline bool Root::has_scan_delete_node() const {
  return cmd_case() == kScanDeleteNode;
}
inline bool Root::_internal_has_scan_delete_node() const {
  return cmd_case() == kScanDeleteNode;
}
inline void Root::set_has_scan_delete_node() {
  _impl_._oneof_case_[0] = kScanDeleteNode;
}
inline void Root::clear_scan_delete_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kScanDeleteNode) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.scan_delete_node_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.scan_delete_node_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::ScanDeleteNode* Root::release_scan_delete_node() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.scan_delete_node)
  if (cmd_case() == kScanDeleteNode) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_delete_node_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.scan_delete_node_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::ScanDeleteNode& Root::_internal_scan_delete_node() const {
  return cmd_case() == kScanDeleteNode ? *_impl_.cmd_.scan_delete_node_ : reinterpret_cast<::cmd::RotaryPlatform::ScanDeleteNode&>(::cmd::RotaryPlatform::_ScanDeleteNode_default_instance_);
}
inline const ::cmd::RotaryPlatform::ScanDeleteNode& Root::scan_delete_node() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.scan_delete_node)
  return _internal_scan_delete_node();
}
inline ::cmd::RotaryPlatform::ScanDeleteNode* Root::unsafe_arena_release_scan_delete_node() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.scan_delete_node)
  if (cmd_case() == kScanDeleteNode) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_delete_node_;
    _impl_.cmd_.scan_delete_node_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_scan_delete_node(::cmd::RotaryPlatform::ScanDeleteNode* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_scan_delete_node();
    _impl_.cmd_.scan_delete_node_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.scan_delete_node)
}
inline ::cmd::RotaryPlatform::ScanDeleteNode* Root::_internal_mutable_scan_delete_node() {
  if (cmd_case() != kScanDeleteNode) {
    clear_cmd();
    set_has_scan_delete_node();
    _impl_.cmd_.scan_delete_node_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::ScanDeleteNode>(GetArena());
  }
  return _impl_.cmd_.scan_delete_node_;
}
inline ::cmd::RotaryPlatform::ScanDeleteNode* Root::mutable_scan_delete_node() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::ScanDeleteNode* _msg = _internal_mutable_scan_delete_node();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.scan_delete_node)
  return _msg;
}

// .cmd.RotaryPlatform.ScanUpdateNode scan_update_node = 23;
inline bool Root::has_scan_update_node() const {
  return cmd_case() == kScanUpdateNode;
}
inline bool Root::_internal_has_scan_update_node() const {
  return cmd_case() == kScanUpdateNode;
}
inline void Root::set_has_scan_update_node() {
  _impl_._oneof_case_[0] = kScanUpdateNode;
}
inline void Root::clear_scan_update_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kScanUpdateNode) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.scan_update_node_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.scan_update_node_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::ScanUpdateNode* Root::release_scan_update_node() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.scan_update_node)
  if (cmd_case() == kScanUpdateNode) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_update_node_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.scan_update_node_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::ScanUpdateNode& Root::_internal_scan_update_node() const {
  return cmd_case() == kScanUpdateNode ? *_impl_.cmd_.scan_update_node_ : reinterpret_cast<::cmd::RotaryPlatform::ScanUpdateNode&>(::cmd::RotaryPlatform::_ScanUpdateNode_default_instance_);
}
inline const ::cmd::RotaryPlatform::ScanUpdateNode& Root::scan_update_node() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.scan_update_node)
  return _internal_scan_update_node();
}
inline ::cmd::RotaryPlatform::ScanUpdateNode* Root::unsafe_arena_release_scan_update_node() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.scan_update_node)
  if (cmd_case() == kScanUpdateNode) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_update_node_;
    _impl_.cmd_.scan_update_node_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_scan_update_node(::cmd::RotaryPlatform::ScanUpdateNode* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_scan_update_node();
    _impl_.cmd_.scan_update_node_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.scan_update_node)
}
inline ::cmd::RotaryPlatform::ScanUpdateNode* Root::_internal_mutable_scan_update_node() {
  if (cmd_case() != kScanUpdateNode) {
    clear_cmd();
    set_has_scan_update_node();
    _impl_.cmd_.scan_update_node_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::ScanUpdateNode>(GetArena());
  }
  return _impl_.cmd_.scan_update_node_;
}
inline ::cmd::RotaryPlatform::ScanUpdateNode* Root::mutable_scan_update_node() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::ScanUpdateNode* _msg = _internal_mutable_scan_update_node();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.scan_update_node)
  return _msg;
}

// .cmd.RotaryPlatform.ScanAddNode scan_add_node = 24;
inline bool Root::has_scan_add_node() const {
  return cmd_case() == kScanAddNode;
}
inline bool Root::_internal_has_scan_add_node() const {
  return cmd_case() == kScanAddNode;
}
inline void Root::set_has_scan_add_node() {
  _impl_._oneof_case_[0] = kScanAddNode;
}
inline void Root::clear_scan_add_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kScanAddNode) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.scan_add_node_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.scan_add_node_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::ScanAddNode* Root::release_scan_add_node() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Root.scan_add_node)
  if (cmd_case() == kScanAddNode) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_add_node_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.scan_add_node_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::ScanAddNode& Root::_internal_scan_add_node() const {
  return cmd_case() == kScanAddNode ? *_impl_.cmd_.scan_add_node_ : reinterpret_cast<::cmd::RotaryPlatform::ScanAddNode&>(::cmd::RotaryPlatform::_ScanAddNode_default_instance_);
}
inline const ::cmd::RotaryPlatform::ScanAddNode& Root::scan_add_node() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Root.scan_add_node)
  return _internal_scan_add_node();
}
inline ::cmd::RotaryPlatform::ScanAddNode* Root::unsafe_arena_release_scan_add_node() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Root.scan_add_node)
  if (cmd_case() == kScanAddNode) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.scan_add_node_;
    _impl_.cmd_.scan_add_node_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_scan_add_node(::cmd::RotaryPlatform::ScanAddNode* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_scan_add_node();
    _impl_.cmd_.scan_add_node_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Root.scan_add_node)
}
inline ::cmd::RotaryPlatform::ScanAddNode* Root::_internal_mutable_scan_add_node() {
  if (cmd_case() != kScanAddNode) {
    clear_cmd();
    set_has_scan_add_node();
    _impl_.cmd_.scan_add_node_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::ScanAddNode>(GetArena());
  }
  return _impl_.cmd_.scan_add_node_;
}
inline ::cmd::RotaryPlatform::ScanAddNode* Root::mutable_scan_add_node() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::ScanAddNode* _msg = _internal_mutable_scan_add_node();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Root.scan_add_node)
  return _msg;
}

inline bool Root::has_cmd() const {
  return cmd_case() != CMD_NOT_SET;
}
inline void Root::clear_has_cmd() {
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}
inline Root::CmdCase Root::cmd_case() const {
  return Root::CmdCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Axis

// .cmd.RotaryPlatform.Azimuth azimuth = 1;
inline bool Axis::has_azimuth() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.azimuth_ != nullptr);
  return value;
}
inline void Axis::clear_azimuth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.azimuth_ != nullptr) _impl_.azimuth_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::cmd::RotaryPlatform::Azimuth& Axis::_internal_azimuth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cmd::RotaryPlatform::Azimuth* p = _impl_.azimuth_;
  return p != nullptr ? *p : reinterpret_cast<const ::cmd::RotaryPlatform::Azimuth&>(::cmd::RotaryPlatform::_Azimuth_default_instance_);
}
inline const ::cmd::RotaryPlatform::Azimuth& Axis::azimuth() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Axis.azimuth)
  return _internal_azimuth();
}
inline void Axis::unsafe_arena_set_allocated_azimuth(::cmd::RotaryPlatform::Azimuth* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.azimuth_);
  }
  _impl_.azimuth_ = reinterpret_cast<::cmd::RotaryPlatform::Azimuth*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Axis.azimuth)
}
inline ::cmd::RotaryPlatform::Azimuth* Axis::release_azimuth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cmd::RotaryPlatform::Azimuth* released = _impl_.azimuth_;
  _impl_.azimuth_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cmd::RotaryPlatform::Azimuth* Axis::unsafe_arena_release_azimuth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Axis.azimuth)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cmd::RotaryPlatform::Azimuth* temp = _impl_.azimuth_;
  _impl_.azimuth_ = nullptr;
  return temp;
}
inline ::cmd::RotaryPlatform::Azimuth* Axis::_internal_mutable_azimuth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.azimuth_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::Azimuth>(GetArena());
    _impl_.azimuth_ = reinterpret_cast<::cmd::RotaryPlatform::Azimuth*>(p);
  }
  return _impl_.azimuth_;
}
inline ::cmd::RotaryPlatform::Azimuth* Axis::mutable_azimuth() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cmd::RotaryPlatform::Azimuth* _msg = _internal_mutable_azimuth();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Axis.azimuth)
  return _msg;
}
inline void Axis::set_allocated_azimuth(::cmd::RotaryPlatform::Azimuth* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.azimuth_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.azimuth_ = reinterpret_cast<::cmd::RotaryPlatform::Azimuth*>(value);
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Axis.azimuth)
}

// .cmd.RotaryPlatform.Elevation elevation = 2;
inline bool Axis::has_elevation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.elevation_ != nullptr);
  return value;
}
inline void Axis::clear_elevation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.elevation_ != nullptr) _impl_.elevation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::cmd::RotaryPlatform::Elevation& Axis::_internal_elevation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cmd::RotaryPlatform::Elevation* p = _impl_.elevation_;
  return p != nullptr ? *p : reinterpret_cast<const ::cmd::RotaryPlatform::Elevation&>(::cmd::RotaryPlatform::_Elevation_default_instance_);
}
inline const ::cmd::RotaryPlatform::Elevation& Axis::elevation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Axis.elevation)
  return _internal_elevation();
}
inline void Axis::unsafe_arena_set_allocated_elevation(::cmd::RotaryPlatform::Elevation* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.elevation_);
  }
  _impl_.elevation_ = reinterpret_cast<::cmd::RotaryPlatform::Elevation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Axis.elevation)
}
inline ::cmd::RotaryPlatform::Elevation* Axis::release_elevation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cmd::RotaryPlatform::Elevation* released = _impl_.elevation_;
  _impl_.elevation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cmd::RotaryPlatform::Elevation* Axis::unsafe_arena_release_elevation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Axis.elevation)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cmd::RotaryPlatform::Elevation* temp = _impl_.elevation_;
  _impl_.elevation_ = nullptr;
  return temp;
}
inline ::cmd::RotaryPlatform::Elevation* Axis::_internal_mutable_elevation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.elevation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::Elevation>(GetArena());
    _impl_.elevation_ = reinterpret_cast<::cmd::RotaryPlatform::Elevation*>(p);
  }
  return _impl_.elevation_;
}
inline ::cmd::RotaryPlatform::Elevation* Axis::mutable_elevation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::cmd::RotaryPlatform::Elevation* _msg = _internal_mutable_elevation();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Axis.elevation)
  return _msg;
}
inline void Axis::set_allocated_elevation(::cmd::RotaryPlatform::Elevation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.elevation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.elevation_ = reinterpret_cast<::cmd::RotaryPlatform::Elevation*>(value);
  // @@protoc_insertion_point(field_set_allocated:cmd.RotaryPlatform.Axis.elevation)
}

// -------------------------------------------------------------------

// SetMode

// .ser.JonGuiDataRotaryMode mode = 1;
inline void SetMode::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
}
inline ::ser::JonGuiDataRotaryMode SetMode::mode() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.SetMode.mode)
  return _internal_mode();
}
inline void SetMode::set_mode(::ser::JonGuiDataRotaryMode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.SetMode.mode)
}
inline ::ser::JonGuiDataRotaryMode SetMode::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ser::JonGuiDataRotaryMode>(_impl_.mode_);
}
inline void SetMode::_internal_set_mode(::ser::JonGuiDataRotaryMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// -------------------------------------------------------------------

// SetAzimuthValue

// double value = 1;
inline void SetAzimuthValue::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline double SetAzimuthValue::value() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.SetAzimuthValue.value)
  return _internal_value();
}
inline void SetAzimuthValue::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.SetAzimuthValue.value)
}
inline double SetAzimuthValue::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void SetAzimuthValue::_internal_set_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// .ser.JonGuiDataRotaryDirection direction = 2;
inline void SetAzimuthValue::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::ser::JonGuiDataRotaryDirection SetAzimuthValue::direction() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.SetAzimuthValue.direction)
  return _internal_direction();
}
inline void SetAzimuthValue::set_direction(::ser::JonGuiDataRotaryDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.SetAzimuthValue.direction)
}
inline ::ser::JonGuiDataRotaryDirection SetAzimuthValue::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ser::JonGuiDataRotaryDirection>(_impl_.direction_);
}
inline void SetAzimuthValue::_internal_set_direction(::ser::JonGuiDataRotaryDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// -------------------------------------------------------------------

// RotateAzimuthTo

// double target_value = 1;
inline void RotateAzimuthTo::clear_target_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_value_ = 0;
}
inline double RotateAzimuthTo::target_value() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateAzimuthTo.target_value)
  return _internal_target_value();
}
inline void RotateAzimuthTo::set_target_value(double value) {
  _internal_set_target_value(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateAzimuthTo.target_value)
}
inline double RotateAzimuthTo::_internal_target_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_value_;
}
inline void RotateAzimuthTo::_internal_set_target_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_value_ = value;
}

// double speed = 2;
inline void RotateAzimuthTo::clear_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = 0;
}
inline double RotateAzimuthTo::speed() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateAzimuthTo.speed)
  return _internal_speed();
}
inline void RotateAzimuthTo::set_speed(double value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateAzimuthTo.speed)
}
inline double RotateAzimuthTo::_internal_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_;
}
inline void RotateAzimuthTo::_internal_set_speed(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = value;
}

// .ser.JonGuiDataRotaryDirection direction = 3;
inline void RotateAzimuthTo::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::ser::JonGuiDataRotaryDirection RotateAzimuthTo::direction() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateAzimuthTo.direction)
  return _internal_direction();
}
inline void RotateAzimuthTo::set_direction(::ser::JonGuiDataRotaryDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateAzimuthTo.direction)
}
inline ::ser::JonGuiDataRotaryDirection RotateAzimuthTo::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ser::JonGuiDataRotaryDirection>(_impl_.direction_);
}
inline void RotateAzimuthTo::_internal_set_direction(::ser::JonGuiDataRotaryDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// -------------------------------------------------------------------

// RotateAzimuth

// double speed = 1;
inline void RotateAzimuth::clear_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = 0;
}
inline double RotateAzimuth::speed() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateAzimuth.speed)
  return _internal_speed();
}
inline void RotateAzimuth::set_speed(double value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateAzimuth.speed)
}
inline double RotateAzimuth::_internal_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_;
}
inline void RotateAzimuth::_internal_set_speed(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = value;
}

// .ser.JonGuiDataRotaryDirection direction = 2;
inline void RotateAzimuth::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::ser::JonGuiDataRotaryDirection RotateAzimuth::direction() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateAzimuth.direction)
  return _internal_direction();
}
inline void RotateAzimuth::set_direction(::ser::JonGuiDataRotaryDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateAzimuth.direction)
}
inline ::ser::JonGuiDataRotaryDirection RotateAzimuth::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ser::JonGuiDataRotaryDirection>(_impl_.direction_);
}
inline void RotateAzimuth::_internal_set_direction(::ser::JonGuiDataRotaryDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// -------------------------------------------------------------------

// RotateElevation

// double speed = 1;
inline void RotateElevation::clear_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = 0;
}
inline double RotateElevation::speed() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateElevation.speed)
  return _internal_speed();
}
inline void RotateElevation::set_speed(double value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateElevation.speed)
}
inline double RotateElevation::_internal_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_;
}
inline void RotateElevation::_internal_set_speed(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = value;
}

// .ser.JonGuiDataRotaryDirection direction = 2;
inline void RotateElevation::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::ser::JonGuiDataRotaryDirection RotateElevation::direction() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateElevation.direction)
  return _internal_direction();
}
inline void RotateElevation::set_direction(::ser::JonGuiDataRotaryDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateElevation.direction)
}
inline ::ser::JonGuiDataRotaryDirection RotateElevation::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ser::JonGuiDataRotaryDirection>(_impl_.direction_);
}
inline void RotateElevation::_internal_set_direction(::ser::JonGuiDataRotaryDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// -------------------------------------------------------------------

// SetElevationValue

// double value = 1;
inline void SetElevationValue::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline double SetElevationValue::value() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.SetElevationValue.value)
  return _internal_value();
}
inline void SetElevationValue::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.SetElevationValue.value)
}
inline double SetElevationValue::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void SetElevationValue::_internal_set_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// RotateElevationTo

// double target_value = 1;
inline void RotateElevationTo::clear_target_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_value_ = 0;
}
inline double RotateElevationTo::target_value() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateElevationTo.target_value)
  return _internal_target_value();
}
inline void RotateElevationTo::set_target_value(double value) {
  _internal_set_target_value(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateElevationTo.target_value)
}
inline double RotateElevationTo::_internal_target_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_value_;
}
inline void RotateElevationTo::_internal_set_target_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_value_ = value;
}

// double speed = 2;
inline void RotateElevationTo::clear_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = 0;
}
inline double RotateElevationTo::speed() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateElevationTo.speed)
  return _internal_speed();
}
inline void RotateElevationTo::set_speed(double value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateElevationTo.speed)
}
inline double RotateElevationTo::_internal_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_;
}
inline void RotateElevationTo::_internal_set_speed(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = value;
}

// -------------------------------------------------------------------

// RotateElevationRelative

// double value = 1;
inline void RotateElevationRelative::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline double RotateElevationRelative::value() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateElevationRelative.value)
  return _internal_value();
}
inline void RotateElevationRelative::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateElevationRelative.value)
}
inline double RotateElevationRelative::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void RotateElevationRelative::_internal_set_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// double speed = 2;
inline void RotateElevationRelative::clear_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = 0;
}
inline double RotateElevationRelative::speed() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateElevationRelative.speed)
  return _internal_speed();
}
inline void RotateElevationRelative::set_speed(double value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateElevationRelative.speed)
}
inline double RotateElevationRelative::_internal_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_;
}
inline void RotateElevationRelative::_internal_set_speed(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = value;
}

// .ser.JonGuiDataRotaryDirection direction = 3;
inline void RotateElevationRelative::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::ser::JonGuiDataRotaryDirection RotateElevationRelative::direction() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateElevationRelative.direction)
  return _internal_direction();
}
inline void RotateElevationRelative::set_direction(::ser::JonGuiDataRotaryDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateElevationRelative.direction)
}
inline ::ser::JonGuiDataRotaryDirection RotateElevationRelative::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ser::JonGuiDataRotaryDirection>(_impl_.direction_);
}
inline void RotateElevationRelative::_internal_set_direction(::ser::JonGuiDataRotaryDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// -------------------------------------------------------------------

// RotateElevationRelativeSet

// double value = 1;
inline void RotateElevationRelativeSet::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline double RotateElevationRelativeSet::value() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateElevationRelativeSet.value)
  return _internal_value();
}
inline void RotateElevationRelativeSet::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateElevationRelativeSet.value)
}
inline double RotateElevationRelativeSet::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void RotateElevationRelativeSet::_internal_set_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// .ser.JonGuiDataRotaryDirection direction = 2;
inline void RotateElevationRelativeSet::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::ser::JonGuiDataRotaryDirection RotateElevationRelativeSet::direction() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateElevationRelativeSet.direction)
  return _internal_direction();
}
inline void RotateElevationRelativeSet::set_direction(::ser::JonGuiDataRotaryDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateElevationRelativeSet.direction)
}
inline ::ser::JonGuiDataRotaryDirection RotateElevationRelativeSet::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ser::JonGuiDataRotaryDirection>(_impl_.direction_);
}
inline void RotateElevationRelativeSet::_internal_set_direction(::ser::JonGuiDataRotaryDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// -------------------------------------------------------------------

// RotateAzimuthRelative

// double value = 1;
inline void RotateAzimuthRelative::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline double RotateAzimuthRelative::value() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateAzimuthRelative.value)
  return _internal_value();
}
inline void RotateAzimuthRelative::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateAzimuthRelative.value)
}
inline double RotateAzimuthRelative::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void RotateAzimuthRelative::_internal_set_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// double speed = 2;
inline void RotateAzimuthRelative::clear_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = 0;
}
inline double RotateAzimuthRelative::speed() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateAzimuthRelative.speed)
  return _internal_speed();
}
inline void RotateAzimuthRelative::set_speed(double value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateAzimuthRelative.speed)
}
inline double RotateAzimuthRelative::_internal_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_;
}
inline void RotateAzimuthRelative::_internal_set_speed(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = value;
}

// .ser.JonGuiDataRotaryDirection direction = 3;
inline void RotateAzimuthRelative::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::ser::JonGuiDataRotaryDirection RotateAzimuthRelative::direction() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateAzimuthRelative.direction)
  return _internal_direction();
}
inline void RotateAzimuthRelative::set_direction(::ser::JonGuiDataRotaryDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateAzimuthRelative.direction)
}
inline ::ser::JonGuiDataRotaryDirection RotateAzimuthRelative::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ser::JonGuiDataRotaryDirection>(_impl_.direction_);
}
inline void RotateAzimuthRelative::_internal_set_direction(::ser::JonGuiDataRotaryDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// -------------------------------------------------------------------

// RotateAzimuthRelativeSet

// double value = 1;
inline void RotateAzimuthRelativeSet::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline double RotateAzimuthRelativeSet::value() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateAzimuthRelativeSet.value)
  return _internal_value();
}
inline void RotateAzimuthRelativeSet::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateAzimuthRelativeSet.value)
}
inline double RotateAzimuthRelativeSet::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void RotateAzimuthRelativeSet::_internal_set_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// .ser.JonGuiDataRotaryDirection direction = 2;
inline void RotateAzimuthRelativeSet::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::ser::JonGuiDataRotaryDirection RotateAzimuthRelativeSet::direction() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateAzimuthRelativeSet.direction)
  return _internal_direction();
}
inline void RotateAzimuthRelativeSet::set_direction(::ser::JonGuiDataRotaryDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateAzimuthRelativeSet.direction)
}
inline ::ser::JonGuiDataRotaryDirection RotateAzimuthRelativeSet::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ser::JonGuiDataRotaryDirection>(_impl_.direction_);
}
inline void RotateAzimuthRelativeSet::_internal_set_direction(::ser::JonGuiDataRotaryDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// -------------------------------------------------------------------

// SetPlatformAzimuth

// double value = 1;
inline void SetPlatformAzimuth::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline double SetPlatformAzimuth::value() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.SetPlatformAzimuth.value)
  return _internal_value();
}
inline void SetPlatformAzimuth::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.SetPlatformAzimuth.value)
}
inline double SetPlatformAzimuth::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void SetPlatformAzimuth::_internal_set_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// SetPlatformElevation

// double value = 1;
inline void SetPlatformElevation::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline double SetPlatformElevation::value() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.SetPlatformElevation.value)
  return _internal_value();
}
inline void SetPlatformElevation::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.SetPlatformElevation.value)
}
inline double SetPlatformElevation::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void SetPlatformElevation::_internal_set_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// SetPlatformBank

// double value = 1;
inline void SetPlatformBank::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline double SetPlatformBank::value() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.SetPlatformBank.value)
  return _internal_value();
}
inline void SetPlatformBank::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.SetPlatformBank.value)
}
inline double SetPlatformBank::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void SetPlatformBank::_internal_set_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// GetMeteo

// -------------------------------------------------------------------

// Azimuth

// .cmd.RotaryPlatform.SetAzimuthValue set_value = 1;
inline bool Azimuth::has_set_value() const {
  return cmd_case() == kSetValue;
}
inline bool Azimuth::_internal_has_set_value() const {
  return cmd_case() == kSetValue;
}
inline void Azimuth::set_has_set_value() {
  _impl_._oneof_case_[0] = kSetValue;
}
inline void Azimuth::clear_set_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kSetValue) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.set_value_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.set_value_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::SetAzimuthValue* Azimuth::release_set_value() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Azimuth.set_value)
  if (cmd_case() == kSetValue) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_value_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.set_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::SetAzimuthValue& Azimuth::_internal_set_value() const {
  return cmd_case() == kSetValue ? *_impl_.cmd_.set_value_ : reinterpret_cast<::cmd::RotaryPlatform::SetAzimuthValue&>(::cmd::RotaryPlatform::_SetAzimuthValue_default_instance_);
}
inline const ::cmd::RotaryPlatform::SetAzimuthValue& Azimuth::set_value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Azimuth.set_value)
  return _internal_set_value();
}
inline ::cmd::RotaryPlatform::SetAzimuthValue* Azimuth::unsafe_arena_release_set_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Azimuth.set_value)
  if (cmd_case() == kSetValue) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_value_;
    _impl_.cmd_.set_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Azimuth::unsafe_arena_set_allocated_set_value(::cmd::RotaryPlatform::SetAzimuthValue* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_set_value();
    _impl_.cmd_.set_value_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Azimuth.set_value)
}
inline ::cmd::RotaryPlatform::SetAzimuthValue* Azimuth::_internal_mutable_set_value() {
  if (cmd_case() != kSetValue) {
    clear_cmd();
    set_has_set_value();
    _impl_.cmd_.set_value_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::SetAzimuthValue>(GetArena());
  }
  return _impl_.cmd_.set_value_;
}
inline ::cmd::RotaryPlatform::SetAzimuthValue* Azimuth::mutable_set_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::SetAzimuthValue* _msg = _internal_mutable_set_value();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Azimuth.set_value)
  return _msg;
}

// .cmd.RotaryPlatform.RotateAzimuthTo rotate_to = 2;
inline bool Azimuth::has_rotate_to() const {
  return cmd_case() == kRotateTo;
}
inline bool Azimuth::_internal_has_rotate_to() const {
  return cmd_case() == kRotateTo;
}
inline void Azimuth::set_has_rotate_to() {
  _impl_._oneof_case_[0] = kRotateTo;
}
inline void Azimuth::clear_rotate_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kRotateTo) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.rotate_to_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.rotate_to_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::RotateAzimuthTo* Azimuth::release_rotate_to() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Azimuth.rotate_to)
  if (cmd_case() == kRotateTo) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.rotate_to_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.rotate_to_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::RotateAzimuthTo& Azimuth::_internal_rotate_to() const {
  return cmd_case() == kRotateTo ? *_impl_.cmd_.rotate_to_ : reinterpret_cast<::cmd::RotaryPlatform::RotateAzimuthTo&>(::cmd::RotaryPlatform::_RotateAzimuthTo_default_instance_);
}
inline const ::cmd::RotaryPlatform::RotateAzimuthTo& Azimuth::rotate_to() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Azimuth.rotate_to)
  return _internal_rotate_to();
}
inline ::cmd::RotaryPlatform::RotateAzimuthTo* Azimuth::unsafe_arena_release_rotate_to() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Azimuth.rotate_to)
  if (cmd_case() == kRotateTo) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.rotate_to_;
    _impl_.cmd_.rotate_to_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Azimuth::unsafe_arena_set_allocated_rotate_to(::cmd::RotaryPlatform::RotateAzimuthTo* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_rotate_to();
    _impl_.cmd_.rotate_to_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Azimuth.rotate_to)
}
inline ::cmd::RotaryPlatform::RotateAzimuthTo* Azimuth::_internal_mutable_rotate_to() {
  if (cmd_case() != kRotateTo) {
    clear_cmd();
    set_has_rotate_to();
    _impl_.cmd_.rotate_to_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::RotateAzimuthTo>(GetArena());
  }
  return _impl_.cmd_.rotate_to_;
}
inline ::cmd::RotaryPlatform::RotateAzimuthTo* Azimuth::mutable_rotate_to() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::RotateAzimuthTo* _msg = _internal_mutable_rotate_to();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Azimuth.rotate_to)
  return _msg;
}

// .cmd.RotaryPlatform.RotateAzimuth rotate = 3;
inline bool Azimuth::has_rotate() const {
  return cmd_case() == kRotate;
}
inline bool Azimuth::_internal_has_rotate() const {
  return cmd_case() == kRotate;
}
inline void Azimuth::set_has_rotate() {
  _impl_._oneof_case_[0] = kRotate;
}
inline void Azimuth::clear_rotate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kRotate) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.rotate_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.rotate_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::RotateAzimuth* Azimuth::release_rotate() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Azimuth.rotate)
  if (cmd_case() == kRotate) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.rotate_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.rotate_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::RotateAzimuth& Azimuth::_internal_rotate() const {
  return cmd_case() == kRotate ? *_impl_.cmd_.rotate_ : reinterpret_cast<::cmd::RotaryPlatform::RotateAzimuth&>(::cmd::RotaryPlatform::_RotateAzimuth_default_instance_);
}
inline const ::cmd::RotaryPlatform::RotateAzimuth& Azimuth::rotate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Azimuth.rotate)
  return _internal_rotate();
}
inline ::cmd::RotaryPlatform::RotateAzimuth* Azimuth::unsafe_arena_release_rotate() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Azimuth.rotate)
  if (cmd_case() == kRotate) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.rotate_;
    _impl_.cmd_.rotate_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Azimuth::unsafe_arena_set_allocated_rotate(::cmd::RotaryPlatform::RotateAzimuth* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_rotate();
    _impl_.cmd_.rotate_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Azimuth.rotate)
}
inline ::cmd::RotaryPlatform::RotateAzimuth* Azimuth::_internal_mutable_rotate() {
  if (cmd_case() != kRotate) {
    clear_cmd();
    set_has_rotate();
    _impl_.cmd_.rotate_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::RotateAzimuth>(GetArena());
  }
  return _impl_.cmd_.rotate_;
}
inline ::cmd::RotaryPlatform::RotateAzimuth* Azimuth::mutable_rotate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::RotateAzimuth* _msg = _internal_mutable_rotate();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Azimuth.rotate)
  return _msg;
}

// .cmd.RotaryPlatform.RotateAzimuthRelative relative = 4;
inline bool Azimuth::has_relative() const {
  return cmd_case() == kRelative;
}
inline bool Azimuth::_internal_has_relative() const {
  return cmd_case() == kRelative;
}
inline void Azimuth::set_has_relative() {
  _impl_._oneof_case_[0] = kRelative;
}
inline void Azimuth::clear_relative() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kRelative) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.relative_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.relative_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::RotateAzimuthRelative* Azimuth::release_relative() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Azimuth.relative)
  if (cmd_case() == kRelative) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.relative_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.relative_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::RotateAzimuthRelative& Azimuth::_internal_relative() const {
  return cmd_case() == kRelative ? *_impl_.cmd_.relative_ : reinterpret_cast<::cmd::RotaryPlatform::RotateAzimuthRelative&>(::cmd::RotaryPlatform::_RotateAzimuthRelative_default_instance_);
}
inline const ::cmd::RotaryPlatform::RotateAzimuthRelative& Azimuth::relative() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Azimuth.relative)
  return _internal_relative();
}
inline ::cmd::RotaryPlatform::RotateAzimuthRelative* Azimuth::unsafe_arena_release_relative() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Azimuth.relative)
  if (cmd_case() == kRelative) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.relative_;
    _impl_.cmd_.relative_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Azimuth::unsafe_arena_set_allocated_relative(::cmd::RotaryPlatform::RotateAzimuthRelative* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_relative();
    _impl_.cmd_.relative_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Azimuth.relative)
}
inline ::cmd::RotaryPlatform::RotateAzimuthRelative* Azimuth::_internal_mutable_relative() {
  if (cmd_case() != kRelative) {
    clear_cmd();
    set_has_relative();
    _impl_.cmd_.relative_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::RotateAzimuthRelative>(GetArena());
  }
  return _impl_.cmd_.relative_;
}
inline ::cmd::RotaryPlatform::RotateAzimuthRelative* Azimuth::mutable_relative() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::RotateAzimuthRelative* _msg = _internal_mutable_relative();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Azimuth.relative)
  return _msg;
}

// .cmd.RotaryPlatform.RotateAzimuthRelativeSet relative_set = 5;
inline bool Azimuth::has_relative_set() const {
  return cmd_case() == kRelativeSet;
}
inline bool Azimuth::_internal_has_relative_set() const {
  return cmd_case() == kRelativeSet;
}
inline void Azimuth::set_has_relative_set() {
  _impl_._oneof_case_[0] = kRelativeSet;
}
inline void Azimuth::clear_relative_set() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kRelativeSet) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.relative_set_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.relative_set_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::RotateAzimuthRelativeSet* Azimuth::release_relative_set() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Azimuth.relative_set)
  if (cmd_case() == kRelativeSet) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.relative_set_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.relative_set_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::RotateAzimuthRelativeSet& Azimuth::_internal_relative_set() const {
  return cmd_case() == kRelativeSet ? *_impl_.cmd_.relative_set_ : reinterpret_cast<::cmd::RotaryPlatform::RotateAzimuthRelativeSet&>(::cmd::RotaryPlatform::_RotateAzimuthRelativeSet_default_instance_);
}
inline const ::cmd::RotaryPlatform::RotateAzimuthRelativeSet& Azimuth::relative_set() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Azimuth.relative_set)
  return _internal_relative_set();
}
inline ::cmd::RotaryPlatform::RotateAzimuthRelativeSet* Azimuth::unsafe_arena_release_relative_set() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Azimuth.relative_set)
  if (cmd_case() == kRelativeSet) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.relative_set_;
    _impl_.cmd_.relative_set_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Azimuth::unsafe_arena_set_allocated_relative_set(::cmd::RotaryPlatform::RotateAzimuthRelativeSet* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_relative_set();
    _impl_.cmd_.relative_set_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Azimuth.relative_set)
}
inline ::cmd::RotaryPlatform::RotateAzimuthRelativeSet* Azimuth::_internal_mutable_relative_set() {
  if (cmd_case() != kRelativeSet) {
    clear_cmd();
    set_has_relative_set();
    _impl_.cmd_.relative_set_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::RotateAzimuthRelativeSet>(GetArena());
  }
  return _impl_.cmd_.relative_set_;
}
inline ::cmd::RotaryPlatform::RotateAzimuthRelativeSet* Azimuth::mutable_relative_set() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::RotateAzimuthRelativeSet* _msg = _internal_mutable_relative_set();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Azimuth.relative_set)
  return _msg;
}

// .cmd.RotaryPlatform.HaltAzimuth halt = 6;
inline bool Azimuth::has_halt() const {
  return cmd_case() == kHalt;
}
inline bool Azimuth::_internal_has_halt() const {
  return cmd_case() == kHalt;
}
inline void Azimuth::set_has_halt() {
  _impl_._oneof_case_[0] = kHalt;
}
inline void Azimuth::clear_halt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kHalt) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.halt_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.halt_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::HaltAzimuth* Azimuth::release_halt() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Azimuth.halt)
  if (cmd_case() == kHalt) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.halt_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.halt_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::HaltAzimuth& Azimuth::_internal_halt() const {
  return cmd_case() == kHalt ? *_impl_.cmd_.halt_ : reinterpret_cast<::cmd::RotaryPlatform::HaltAzimuth&>(::cmd::RotaryPlatform::_HaltAzimuth_default_instance_);
}
inline const ::cmd::RotaryPlatform::HaltAzimuth& Azimuth::halt() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Azimuth.halt)
  return _internal_halt();
}
inline ::cmd::RotaryPlatform::HaltAzimuth* Azimuth::unsafe_arena_release_halt() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Azimuth.halt)
  if (cmd_case() == kHalt) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.halt_;
    _impl_.cmd_.halt_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Azimuth::unsafe_arena_set_allocated_halt(::cmd::RotaryPlatform::HaltAzimuth* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_halt();
    _impl_.cmd_.halt_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Azimuth.halt)
}
inline ::cmd::RotaryPlatform::HaltAzimuth* Azimuth::_internal_mutable_halt() {
  if (cmd_case() != kHalt) {
    clear_cmd();
    set_has_halt();
    _impl_.cmd_.halt_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::HaltAzimuth>(GetArena());
  }
  return _impl_.cmd_.halt_;
}
inline ::cmd::RotaryPlatform::HaltAzimuth* Azimuth::mutable_halt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::HaltAzimuth* _msg = _internal_mutable_halt();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Azimuth.halt)
  return _msg;
}

inline bool Azimuth::has_cmd() const {
  return cmd_case() != CMD_NOT_SET;
}
inline void Azimuth::clear_has_cmd() {
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}
inline Azimuth::CmdCase Azimuth::cmd_case() const {
  return Azimuth::CmdCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Start

// -------------------------------------------------------------------

// Stop

// -------------------------------------------------------------------

// Halt

// -------------------------------------------------------------------

// ScanStart

// -------------------------------------------------------------------

// ScanStop

// -------------------------------------------------------------------

// ScanPause

// -------------------------------------------------------------------

// ScanUnpause

// -------------------------------------------------------------------

// HaltAzimuth

// -------------------------------------------------------------------

// HaltElevation

// -------------------------------------------------------------------

// ScanPrev

// -------------------------------------------------------------------

// ScanNext

// -------------------------------------------------------------------

// ScanRefreshNodeList

// -------------------------------------------------------------------

// ScanSelectNode

// int32 index = 1;
inline void ScanSelectNode::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = 0;
}
inline ::int32_t ScanSelectNode::index() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.ScanSelectNode.index)
  return _internal_index();
}
inline void ScanSelectNode::set_index(::int32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.ScanSelectNode.index)
}
inline ::int32_t ScanSelectNode::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void ScanSelectNode::_internal_set_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// -------------------------------------------------------------------

// ScanDeleteNode

// int32 index = 1;
inline void ScanDeleteNode::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = 0;
}
inline ::int32_t ScanDeleteNode::index() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.ScanDeleteNode.index)
  return _internal_index();
}
inline void ScanDeleteNode::set_index(::int32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.ScanDeleteNode.index)
}
inline ::int32_t ScanDeleteNode::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void ScanDeleteNode::_internal_set_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// -------------------------------------------------------------------

// ScanUpdateNode

// int32 index = 1;
inline void ScanUpdateNode::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = 0;
}
inline ::int32_t ScanUpdateNode::index() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.ScanUpdateNode.index)
  return _internal_index();
}
inline void ScanUpdateNode::set_index(::int32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.ScanUpdateNode.index)
}
inline ::int32_t ScanUpdateNode::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void ScanUpdateNode::_internal_set_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// int32 DayZoomTableValue = 2;
inline void ScanUpdateNode::clear_dayzoomtablevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dayzoomtablevalue_ = 0;
}
inline ::int32_t ScanUpdateNode::dayzoomtablevalue() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.ScanUpdateNode.DayZoomTableValue)
  return _internal_dayzoomtablevalue();
}
inline void ScanUpdateNode::set_dayzoomtablevalue(::int32_t value) {
  _internal_set_dayzoomtablevalue(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.ScanUpdateNode.DayZoomTableValue)
}
inline ::int32_t ScanUpdateNode::_internal_dayzoomtablevalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dayzoomtablevalue_;
}
inline void ScanUpdateNode::_internal_set_dayzoomtablevalue(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dayzoomtablevalue_ = value;
}

// int32 HeatZoomTableValue = 3;
inline void ScanUpdateNode::clear_heatzoomtablevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heatzoomtablevalue_ = 0;
}
inline ::int32_t ScanUpdateNode::heatzoomtablevalue() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.ScanUpdateNode.HeatZoomTableValue)
  return _internal_heatzoomtablevalue();
}
inline void ScanUpdateNode::set_heatzoomtablevalue(::int32_t value) {
  _internal_set_heatzoomtablevalue(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.ScanUpdateNode.HeatZoomTableValue)
}
inline ::int32_t ScanUpdateNode::_internal_heatzoomtablevalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.heatzoomtablevalue_;
}
inline void ScanUpdateNode::_internal_set_heatzoomtablevalue(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heatzoomtablevalue_ = value;
}

// double azimuth = 4;
inline void ScanUpdateNode::clear_azimuth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.azimuth_ = 0;
}
inline double ScanUpdateNode::azimuth() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.ScanUpdateNode.azimuth)
  return _internal_azimuth();
}
inline void ScanUpdateNode::set_azimuth(double value) {
  _internal_set_azimuth(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.ScanUpdateNode.azimuth)
}
inline double ScanUpdateNode::_internal_azimuth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.azimuth_;
}
inline void ScanUpdateNode::_internal_set_azimuth(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.azimuth_ = value;
}

// double elevation = 5;
inline void ScanUpdateNode::clear_elevation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.elevation_ = 0;
}
inline double ScanUpdateNode::elevation() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.ScanUpdateNode.elevation)
  return _internal_elevation();
}
inline void ScanUpdateNode::set_elevation(double value) {
  _internal_set_elevation(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.ScanUpdateNode.elevation)
}
inline double ScanUpdateNode::_internal_elevation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.elevation_;
}
inline void ScanUpdateNode::_internal_set_elevation(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.elevation_ = value;
}

// double linger = 6;
inline void ScanUpdateNode::clear_linger() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linger_ = 0;
}
inline double ScanUpdateNode::linger() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.ScanUpdateNode.linger)
  return _internal_linger();
}
inline void ScanUpdateNode::set_linger(double value) {
  _internal_set_linger(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.ScanUpdateNode.linger)
}
inline double ScanUpdateNode::_internal_linger() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.linger_;
}
inline void ScanUpdateNode::_internal_set_linger(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linger_ = value;
}

// double speed = 7;
inline void ScanUpdateNode::clear_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = 0;
}
inline double ScanUpdateNode::speed() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.ScanUpdateNode.speed)
  return _internal_speed();
}
inline void ScanUpdateNode::set_speed(double value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.ScanUpdateNode.speed)
}
inline double ScanUpdateNode::_internal_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_;
}
inline void ScanUpdateNode::_internal_set_speed(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = value;
}

// -------------------------------------------------------------------

// ScanAddNode

// int32 index = 1;
inline void ScanAddNode::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = 0;
}
inline ::int32_t ScanAddNode::index() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.ScanAddNode.index)
  return _internal_index();
}
inline void ScanAddNode::set_index(::int32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.ScanAddNode.index)
}
inline ::int32_t ScanAddNode::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void ScanAddNode::_internal_set_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// int32 DayZoomTableValue = 2;
inline void ScanAddNode::clear_dayzoomtablevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dayzoomtablevalue_ = 0;
}
inline ::int32_t ScanAddNode::dayzoomtablevalue() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.ScanAddNode.DayZoomTableValue)
  return _internal_dayzoomtablevalue();
}
inline void ScanAddNode::set_dayzoomtablevalue(::int32_t value) {
  _internal_set_dayzoomtablevalue(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.ScanAddNode.DayZoomTableValue)
}
inline ::int32_t ScanAddNode::_internal_dayzoomtablevalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dayzoomtablevalue_;
}
inline void ScanAddNode::_internal_set_dayzoomtablevalue(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dayzoomtablevalue_ = value;
}

// int32 HeatZoomTableValue = 3;
inline void ScanAddNode::clear_heatzoomtablevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heatzoomtablevalue_ = 0;
}
inline ::int32_t ScanAddNode::heatzoomtablevalue() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.ScanAddNode.HeatZoomTableValue)
  return _internal_heatzoomtablevalue();
}
inline void ScanAddNode::set_heatzoomtablevalue(::int32_t value) {
  _internal_set_heatzoomtablevalue(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.ScanAddNode.HeatZoomTableValue)
}
inline ::int32_t ScanAddNode::_internal_heatzoomtablevalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.heatzoomtablevalue_;
}
inline void ScanAddNode::_internal_set_heatzoomtablevalue(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heatzoomtablevalue_ = value;
}

// double azimuth = 4;
inline void ScanAddNode::clear_azimuth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.azimuth_ = 0;
}
inline double ScanAddNode::azimuth() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.ScanAddNode.azimuth)
  return _internal_azimuth();
}
inline void ScanAddNode::set_azimuth(double value) {
  _internal_set_azimuth(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.ScanAddNode.azimuth)
}
inline double ScanAddNode::_internal_azimuth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.azimuth_;
}
inline void ScanAddNode::_internal_set_azimuth(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.azimuth_ = value;
}

// double elevation = 5;
inline void ScanAddNode::clear_elevation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.elevation_ = 0;
}
inline double ScanAddNode::elevation() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.ScanAddNode.elevation)
  return _internal_elevation();
}
inline void ScanAddNode::set_elevation(double value) {
  _internal_set_elevation(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.ScanAddNode.elevation)
}
inline double ScanAddNode::_internal_elevation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.elevation_;
}
inline void ScanAddNode::_internal_set_elevation(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.elevation_ = value;
}

// double linger = 6;
inline void ScanAddNode::clear_linger() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linger_ = 0;
}
inline double ScanAddNode::linger() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.ScanAddNode.linger)
  return _internal_linger();
}
inline void ScanAddNode::set_linger(double value) {
  _internal_set_linger(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.ScanAddNode.linger)
}
inline double ScanAddNode::_internal_linger() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.linger_;
}
inline void ScanAddNode::_internal_set_linger(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.linger_ = value;
}

// double speed = 7;
inline void ScanAddNode::clear_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = 0;
}
inline double ScanAddNode::speed() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.ScanAddNode.speed)
  return _internal_speed();
}
inline void ScanAddNode::set_speed(double value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.ScanAddNode.speed)
}
inline double ScanAddNode::_internal_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_;
}
inline void ScanAddNode::_internal_set_speed(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = value;
}

// -------------------------------------------------------------------

// Elevation

// .cmd.RotaryPlatform.SetElevationValue set_value = 1;
inline bool Elevation::has_set_value() const {
  return cmd_case() == kSetValue;
}
inline bool Elevation::_internal_has_set_value() const {
  return cmd_case() == kSetValue;
}
inline void Elevation::set_has_set_value() {
  _impl_._oneof_case_[0] = kSetValue;
}
inline void Elevation::clear_set_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kSetValue) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.set_value_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.set_value_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::SetElevationValue* Elevation::release_set_value() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Elevation.set_value)
  if (cmd_case() == kSetValue) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_value_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.set_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::SetElevationValue& Elevation::_internal_set_value() const {
  return cmd_case() == kSetValue ? *_impl_.cmd_.set_value_ : reinterpret_cast<::cmd::RotaryPlatform::SetElevationValue&>(::cmd::RotaryPlatform::_SetElevationValue_default_instance_);
}
inline const ::cmd::RotaryPlatform::SetElevationValue& Elevation::set_value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Elevation.set_value)
  return _internal_set_value();
}
inline ::cmd::RotaryPlatform::SetElevationValue* Elevation::unsafe_arena_release_set_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Elevation.set_value)
  if (cmd_case() == kSetValue) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_value_;
    _impl_.cmd_.set_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Elevation::unsafe_arena_set_allocated_set_value(::cmd::RotaryPlatform::SetElevationValue* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_set_value();
    _impl_.cmd_.set_value_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Elevation.set_value)
}
inline ::cmd::RotaryPlatform::SetElevationValue* Elevation::_internal_mutable_set_value() {
  if (cmd_case() != kSetValue) {
    clear_cmd();
    set_has_set_value();
    _impl_.cmd_.set_value_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::SetElevationValue>(GetArena());
  }
  return _impl_.cmd_.set_value_;
}
inline ::cmd::RotaryPlatform::SetElevationValue* Elevation::mutable_set_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::SetElevationValue* _msg = _internal_mutable_set_value();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Elevation.set_value)
  return _msg;
}

// .cmd.RotaryPlatform.RotateElevationTo rotate_to = 2;
inline bool Elevation::has_rotate_to() const {
  return cmd_case() == kRotateTo;
}
inline bool Elevation::_internal_has_rotate_to() const {
  return cmd_case() == kRotateTo;
}
inline void Elevation::set_has_rotate_to() {
  _impl_._oneof_case_[0] = kRotateTo;
}
inline void Elevation::clear_rotate_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kRotateTo) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.rotate_to_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.rotate_to_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::RotateElevationTo* Elevation::release_rotate_to() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Elevation.rotate_to)
  if (cmd_case() == kRotateTo) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.rotate_to_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.rotate_to_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::RotateElevationTo& Elevation::_internal_rotate_to() const {
  return cmd_case() == kRotateTo ? *_impl_.cmd_.rotate_to_ : reinterpret_cast<::cmd::RotaryPlatform::RotateElevationTo&>(::cmd::RotaryPlatform::_RotateElevationTo_default_instance_);
}
inline const ::cmd::RotaryPlatform::RotateElevationTo& Elevation::rotate_to() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Elevation.rotate_to)
  return _internal_rotate_to();
}
inline ::cmd::RotaryPlatform::RotateElevationTo* Elevation::unsafe_arena_release_rotate_to() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Elevation.rotate_to)
  if (cmd_case() == kRotateTo) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.rotate_to_;
    _impl_.cmd_.rotate_to_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Elevation::unsafe_arena_set_allocated_rotate_to(::cmd::RotaryPlatform::RotateElevationTo* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_rotate_to();
    _impl_.cmd_.rotate_to_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Elevation.rotate_to)
}
inline ::cmd::RotaryPlatform::RotateElevationTo* Elevation::_internal_mutable_rotate_to() {
  if (cmd_case() != kRotateTo) {
    clear_cmd();
    set_has_rotate_to();
    _impl_.cmd_.rotate_to_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::RotateElevationTo>(GetArena());
  }
  return _impl_.cmd_.rotate_to_;
}
inline ::cmd::RotaryPlatform::RotateElevationTo* Elevation::mutable_rotate_to() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::RotateElevationTo* _msg = _internal_mutable_rotate_to();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Elevation.rotate_to)
  return _msg;
}

// .cmd.RotaryPlatform.RotateElevation rotate = 3;
inline bool Elevation::has_rotate() const {
  return cmd_case() == kRotate;
}
inline bool Elevation::_internal_has_rotate() const {
  return cmd_case() == kRotate;
}
inline void Elevation::set_has_rotate() {
  _impl_._oneof_case_[0] = kRotate;
}
inline void Elevation::clear_rotate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kRotate) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.rotate_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.rotate_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::RotateElevation* Elevation::release_rotate() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Elevation.rotate)
  if (cmd_case() == kRotate) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.rotate_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.rotate_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::RotateElevation& Elevation::_internal_rotate() const {
  return cmd_case() == kRotate ? *_impl_.cmd_.rotate_ : reinterpret_cast<::cmd::RotaryPlatform::RotateElevation&>(::cmd::RotaryPlatform::_RotateElevation_default_instance_);
}
inline const ::cmd::RotaryPlatform::RotateElevation& Elevation::rotate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Elevation.rotate)
  return _internal_rotate();
}
inline ::cmd::RotaryPlatform::RotateElevation* Elevation::unsafe_arena_release_rotate() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Elevation.rotate)
  if (cmd_case() == kRotate) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.rotate_;
    _impl_.cmd_.rotate_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Elevation::unsafe_arena_set_allocated_rotate(::cmd::RotaryPlatform::RotateElevation* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_rotate();
    _impl_.cmd_.rotate_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Elevation.rotate)
}
inline ::cmd::RotaryPlatform::RotateElevation* Elevation::_internal_mutable_rotate() {
  if (cmd_case() != kRotate) {
    clear_cmd();
    set_has_rotate();
    _impl_.cmd_.rotate_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::RotateElevation>(GetArena());
  }
  return _impl_.cmd_.rotate_;
}
inline ::cmd::RotaryPlatform::RotateElevation* Elevation::mutable_rotate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::RotateElevation* _msg = _internal_mutable_rotate();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Elevation.rotate)
  return _msg;
}

// .cmd.RotaryPlatform.RotateElevationRelative relative = 4;
inline bool Elevation::has_relative() const {
  return cmd_case() == kRelative;
}
inline bool Elevation::_internal_has_relative() const {
  return cmd_case() == kRelative;
}
inline void Elevation::set_has_relative() {
  _impl_._oneof_case_[0] = kRelative;
}
inline void Elevation::clear_relative() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kRelative) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.relative_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.relative_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::RotateElevationRelative* Elevation::release_relative() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Elevation.relative)
  if (cmd_case() == kRelative) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.relative_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.relative_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::RotateElevationRelative& Elevation::_internal_relative() const {
  return cmd_case() == kRelative ? *_impl_.cmd_.relative_ : reinterpret_cast<::cmd::RotaryPlatform::RotateElevationRelative&>(::cmd::RotaryPlatform::_RotateElevationRelative_default_instance_);
}
inline const ::cmd::RotaryPlatform::RotateElevationRelative& Elevation::relative() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Elevation.relative)
  return _internal_relative();
}
inline ::cmd::RotaryPlatform::RotateElevationRelative* Elevation::unsafe_arena_release_relative() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Elevation.relative)
  if (cmd_case() == kRelative) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.relative_;
    _impl_.cmd_.relative_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Elevation::unsafe_arena_set_allocated_relative(::cmd::RotaryPlatform::RotateElevationRelative* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_relative();
    _impl_.cmd_.relative_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Elevation.relative)
}
inline ::cmd::RotaryPlatform::RotateElevationRelative* Elevation::_internal_mutable_relative() {
  if (cmd_case() != kRelative) {
    clear_cmd();
    set_has_relative();
    _impl_.cmd_.relative_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::RotateElevationRelative>(GetArena());
  }
  return _impl_.cmd_.relative_;
}
inline ::cmd::RotaryPlatform::RotateElevationRelative* Elevation::mutable_relative() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::RotateElevationRelative* _msg = _internal_mutable_relative();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Elevation.relative)
  return _msg;
}

// .cmd.RotaryPlatform.RotateElevationRelativeSet relative_set = 5;
inline bool Elevation::has_relative_set() const {
  return cmd_case() == kRelativeSet;
}
inline bool Elevation::_internal_has_relative_set() const {
  return cmd_case() == kRelativeSet;
}
inline void Elevation::set_has_relative_set() {
  _impl_._oneof_case_[0] = kRelativeSet;
}
inline void Elevation::clear_relative_set() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kRelativeSet) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.relative_set_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.relative_set_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::RotateElevationRelativeSet* Elevation::release_relative_set() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Elevation.relative_set)
  if (cmd_case() == kRelativeSet) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.relative_set_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.relative_set_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::RotateElevationRelativeSet& Elevation::_internal_relative_set() const {
  return cmd_case() == kRelativeSet ? *_impl_.cmd_.relative_set_ : reinterpret_cast<::cmd::RotaryPlatform::RotateElevationRelativeSet&>(::cmd::RotaryPlatform::_RotateElevationRelativeSet_default_instance_);
}
inline const ::cmd::RotaryPlatform::RotateElevationRelativeSet& Elevation::relative_set() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Elevation.relative_set)
  return _internal_relative_set();
}
inline ::cmd::RotaryPlatform::RotateElevationRelativeSet* Elevation::unsafe_arena_release_relative_set() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Elevation.relative_set)
  if (cmd_case() == kRelativeSet) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.relative_set_;
    _impl_.cmd_.relative_set_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Elevation::unsafe_arena_set_allocated_relative_set(::cmd::RotaryPlatform::RotateElevationRelativeSet* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_relative_set();
    _impl_.cmd_.relative_set_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Elevation.relative_set)
}
inline ::cmd::RotaryPlatform::RotateElevationRelativeSet* Elevation::_internal_mutable_relative_set() {
  if (cmd_case() != kRelativeSet) {
    clear_cmd();
    set_has_relative_set();
    _impl_.cmd_.relative_set_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::RotateElevationRelativeSet>(GetArena());
  }
  return _impl_.cmd_.relative_set_;
}
inline ::cmd::RotaryPlatform::RotateElevationRelativeSet* Elevation::mutable_relative_set() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::RotateElevationRelativeSet* _msg = _internal_mutable_relative_set();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Elevation.relative_set)
  return _msg;
}

// .cmd.RotaryPlatform.HaltElevation halt = 6;
inline bool Elevation::has_halt() const {
  return cmd_case() == kHalt;
}
inline bool Elevation::_internal_has_halt() const {
  return cmd_case() == kHalt;
}
inline void Elevation::set_has_halt() {
  _impl_._oneof_case_[0] = kHalt;
}
inline void Elevation::clear_halt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kHalt) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.halt_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.halt_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::RotaryPlatform::HaltElevation* Elevation::release_halt() {
  // @@protoc_insertion_point(field_release:cmd.RotaryPlatform.Elevation.halt)
  if (cmd_case() == kHalt) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.halt_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.halt_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::RotaryPlatform::HaltElevation& Elevation::_internal_halt() const {
  return cmd_case() == kHalt ? *_impl_.cmd_.halt_ : reinterpret_cast<::cmd::RotaryPlatform::HaltElevation&>(::cmd::RotaryPlatform::_HaltElevation_default_instance_);
}
inline const ::cmd::RotaryPlatform::HaltElevation& Elevation::halt() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.Elevation.halt)
  return _internal_halt();
}
inline ::cmd::RotaryPlatform::HaltElevation* Elevation::unsafe_arena_release_halt() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.RotaryPlatform.Elevation.halt)
  if (cmd_case() == kHalt) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.halt_;
    _impl_.cmd_.halt_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Elevation::unsafe_arena_set_allocated_halt(::cmd::RotaryPlatform::HaltElevation* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_halt();
    _impl_.cmd_.halt_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.RotaryPlatform.Elevation.halt)
}
inline ::cmd::RotaryPlatform::HaltElevation* Elevation::_internal_mutable_halt() {
  if (cmd_case() != kHalt) {
    clear_cmd();
    set_has_halt();
    _impl_.cmd_.halt_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::RotaryPlatform::HaltElevation>(GetArena());
  }
  return _impl_.cmd_.halt_;
}
inline ::cmd::RotaryPlatform::HaltElevation* Elevation::mutable_halt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::RotaryPlatform::HaltElevation* _msg = _internal_mutable_halt();
  // @@protoc_insertion_point(field_mutable:cmd.RotaryPlatform.Elevation.halt)
  return _msg;
}

inline bool Elevation::has_cmd() const {
  return cmd_case() != CMD_NOT_SET;
}
inline void Elevation::clear_has_cmd() {
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}
inline Elevation::CmdCase Elevation::cmd_case() const {
  return Elevation::CmdCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// setUseRotaryAsCompass

// bool flag = 1;
inline void setUseRotaryAsCompass::clear_flag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flag_ = false;
}
inline bool setUseRotaryAsCompass::flag() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.setUseRotaryAsCompass.flag)
  return _internal_flag();
}
inline void setUseRotaryAsCompass::set_flag(bool value) {
  _internal_set_flag(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.setUseRotaryAsCompass.flag)
}
inline bool setUseRotaryAsCompass::_internal_flag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flag_;
}
inline void setUseRotaryAsCompass::_internal_set_flag(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flag_ = value;
}

// -------------------------------------------------------------------

// RotateToGPS

// double latitude = 1;
inline void RotateToGPS::clear_latitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_ = 0;
}
inline double RotateToGPS::latitude() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateToGPS.latitude)
  return _internal_latitude();
}
inline void RotateToGPS::set_latitude(double value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateToGPS.latitude)
}
inline double RotateToGPS::_internal_latitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latitude_;
}
inline void RotateToGPS::_internal_set_latitude(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_ = value;
}

// double longitude = 2;
inline void RotateToGPS::clear_longitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_ = 0;
}
inline double RotateToGPS::longitude() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateToGPS.longitude)
  return _internal_longitude();
}
inline void RotateToGPS::set_longitude(double value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateToGPS.longitude)
}
inline double RotateToGPS::_internal_longitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.longitude_;
}
inline void RotateToGPS::_internal_set_longitude(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_ = value;
}

// double altitude = 3;
inline void RotateToGPS::clear_altitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.altitude_ = 0;
}
inline double RotateToGPS::altitude() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateToGPS.altitude)
  return _internal_altitude();
}
inline void RotateToGPS::set_altitude(double value) {
  _internal_set_altitude(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateToGPS.altitude)
}
inline double RotateToGPS::_internal_altitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.altitude_;
}
inline void RotateToGPS::_internal_set_altitude(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.altitude_ = value;
}

// -------------------------------------------------------------------

// SetOriginGPS

// double latitude = 1;
inline void SetOriginGPS::clear_latitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_ = 0;
}
inline double SetOriginGPS::latitude() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.SetOriginGPS.latitude)
  return _internal_latitude();
}
inline void SetOriginGPS::set_latitude(double value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.SetOriginGPS.latitude)
}
inline double SetOriginGPS::_internal_latitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latitude_;
}
inline void SetOriginGPS::_internal_set_latitude(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_ = value;
}

// double longitude = 2;
inline void SetOriginGPS::clear_longitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_ = 0;
}
inline double SetOriginGPS::longitude() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.SetOriginGPS.longitude)
  return _internal_longitude();
}
inline void SetOriginGPS::set_longitude(double value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.SetOriginGPS.longitude)
}
inline double SetOriginGPS::_internal_longitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.longitude_;
}
inline void SetOriginGPS::_internal_set_longitude(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_ = value;
}

// double altitude = 3;
inline void SetOriginGPS::clear_altitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.altitude_ = 0;
}
inline double SetOriginGPS::altitude() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.SetOriginGPS.altitude)
  return _internal_altitude();
}
inline void SetOriginGPS::set_altitude(double value) {
  _internal_set_altitude(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.SetOriginGPS.altitude)
}
inline double SetOriginGPS::_internal_altitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.altitude_;
}
inline void SetOriginGPS::_internal_set_altitude(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.altitude_ = value;
}

// -------------------------------------------------------------------

// RotateToNDC

// .ser.JonGuiDataVideoChannel channel = 1;
inline void RotateToNDC::clear_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_ = 0;
}
inline ::ser::JonGuiDataVideoChannel RotateToNDC::channel() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateToNDC.channel)
  return _internal_channel();
}
inline void RotateToNDC::set_channel(::ser::JonGuiDataVideoChannel value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateToNDC.channel)
}
inline ::ser::JonGuiDataVideoChannel RotateToNDC::_internal_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ser::JonGuiDataVideoChannel>(_impl_.channel_);
}
inline void RotateToNDC::_internal_set_channel(::ser::JonGuiDataVideoChannel value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_ = value;
}

// double x = 2;
inline void RotateToNDC::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline double RotateToNDC::x() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateToNDC.x)
  return _internal_x();
}
inline void RotateToNDC::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateToNDC.x)
}
inline double RotateToNDC::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void RotateToNDC::_internal_set_x(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// double y = 3;
inline void RotateToNDC::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline double RotateToNDC::y() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateToNDC.y)
  return _internal_y();
}
inline void RotateToNDC::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateToNDC.y)
}
inline double RotateToNDC::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void RotateToNDC::_internal_set_y(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// uint64 frame_time = 4;
inline void RotateToNDC::clear_frame_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_time_ = ::uint64_t{0u};
}
inline ::uint64_t RotateToNDC::frame_time() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateToNDC.frame_time)
  return _internal_frame_time();
}
inline void RotateToNDC::set_frame_time(::uint64_t value) {
  _internal_set_frame_time(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateToNDC.frame_time)
}
inline ::uint64_t RotateToNDC::_internal_frame_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_time_;
}
inline void RotateToNDC::_internal_set_frame_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_time_ = value;
}

// uint64 state_time = 5;
inline void RotateToNDC::clear_state_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_time_ = ::uint64_t{0u};
}
inline ::uint64_t RotateToNDC::state_time() const {
  // @@protoc_insertion_point(field_get:cmd.RotaryPlatform.RotateToNDC.state_time)
  return _internal_state_time();
}
inline void RotateToNDC::set_state_time(::uint64_t value) {
  _internal_set_state_time(value);
  // @@protoc_insertion_point(field_set:cmd.RotaryPlatform.RotateToNDC.state_time)
}
inline ::uint64_t RotateToNDC::_internal_state_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.state_time_;
}
inline void RotateToNDC::_internal_set_state_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_time_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace RotaryPlatform
}  // namespace cmd


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // jon_5fshared_5fcmd_5frotary_2eproto_2epb_2eh
