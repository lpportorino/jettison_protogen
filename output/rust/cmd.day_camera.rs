// This file is @generated by prost-build.
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SetValue {
    #[prost(double, tag = "1")]
    pub value: f64,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Move {
    #[prost(double, tag = "1")]
    pub target_value: f64,
    #[prost(double, tag = "2")]
    pub speed: f64,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Offset {
    #[prost(double, tag = "1")]
    pub offset_value: f64,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SetClaheLevel {
    #[prost(double, tag = "1")]
    pub value: f64,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ShiftClaheLevel {
    #[prost(double, tag = "1")]
    pub value: f64,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Root {
    #[prost(
        oneof = "root::Cmd",
        tags = "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20"
    )]
    pub cmd: ::core::option::Option<root::Cmd>,
}
/// Nested message and enum types in `Root`.
pub mod root {
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Cmd {
        #[prost(message, tag = "1")]
        Focus(super::Focus),
        #[prost(message, tag = "2")]
        Zoom(super::Zoom),
        #[prost(message, tag = "3")]
        SetIris(super::SetIris),
        #[prost(message, tag = "4")]
        SetInfraRedFilter(super::SetInfraRedFilter),
        #[prost(message, tag = "5")]
        Start(super::Start),
        #[prost(message, tag = "6")]
        Stop(super::Stop),
        #[prost(message, tag = "7")]
        Photo(super::Photo),
        #[prost(message, tag = "8")]
        SetAutoIris(super::SetAutoIris),
        #[prost(message, tag = "9")]
        HaltAll(super::HaltAll),
        #[prost(message, tag = "10")]
        SetFxMode(super::SetFxMode),
        #[prost(message, tag = "11")]
        NextFxMode(super::NextFxMode),
        #[prost(message, tag = "12")]
        PrevFxMode(super::PrevFxMode),
        #[prost(message, tag = "13")]
        GetMeteo(super::GetMeteo),
        #[prost(message, tag = "14")]
        RefreshFxMode(super::RefreshFxMode),
        #[prost(message, tag = "15")]
        SetDigitalZoomLevel(super::SetDigitalZoomLevel),
        #[prost(message, tag = "16")]
        SetClaheLevel(super::SetClaheLevel),
        #[prost(message, tag = "17")]
        ShiftClaheLevel(super::ShiftClaheLevel),
        #[prost(message, tag = "18")]
        FocusAtRoi(super::FocusAtRoi),
        #[prost(message, tag = "19")]
        TrackRoi(super::TrackRoi),
        #[prost(message, tag = "20")]
        ZoomRoi(super::ZoomRoi),
    }
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct GetPos {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct NextFxMode {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PrevFxMode {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct RefreshFxMode {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct HaltAll {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SetFxMode {
    #[prost(enumeration = "super::super::ser::JonGuiDataFxModeDay", tag = "1")]
    pub mode: i32,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SetDigitalZoomLevel {
    #[prost(double, tag = "1")]
    pub value: f64,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Focus {
    #[prost(oneof = "focus::Cmd", tags = "1, 2, 3, 4, 5, 6")]
    pub cmd: ::core::option::Option<focus::Cmd>,
}
/// Nested message and enum types in `Focus`.
pub mod focus {
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Cmd {
        #[prost(message, tag = "1")]
        SetValue(super::SetValue),
        #[prost(message, tag = "2")]
        Move(super::Move),
        #[prost(message, tag = "3")]
        Halt(super::Halt),
        #[prost(message, tag = "4")]
        Offset(super::Offset),
        #[prost(message, tag = "5")]
        ResetFocus(super::ResetFocus),
        #[prost(message, tag = "6")]
        SaveToTableFocus(super::SaveToTableFocus),
    }
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Zoom {
    #[prost(oneof = "zoom::Cmd", tags = "1, 2, 3, 4, 5, 6, 7, 8, 9")]
    pub cmd: ::core::option::Option<zoom::Cmd>,
}
/// Nested message and enum types in `Zoom`.
pub mod zoom {
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum Cmd {
        #[prost(message, tag = "1")]
        SetValue(super::SetValue),
        #[prost(message, tag = "2")]
        Move(super::Move),
        #[prost(message, tag = "3")]
        Halt(super::Halt),
        #[prost(message, tag = "4")]
        SetZoomTableValue(super::SetZoomTableValue),
        #[prost(message, tag = "5")]
        NextZoomTablePos(super::NextZoomTablePos),
        #[prost(message, tag = "6")]
        PrevZoomTablePos(super::PrevZoomTablePos),
        #[prost(message, tag = "7")]
        Offset(super::Offset),
        #[prost(message, tag = "8")]
        ResetZoom(super::ResetZoom),
        #[prost(message, tag = "9")]
        SaveToTable(super::SaveToTable),
    }
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct NextZoomTablePos {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PrevZoomTablePos {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SetIris {
    #[prost(double, tag = "1")]
    pub value: f64,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SetInfraRedFilter {
    #[prost(bool, tag = "1")]
    pub value: bool,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SetAutoIris {
    #[prost(bool, tag = "1")]
    pub value: bool,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SetZoomTableValue {
    #[prost(int32, tag = "1")]
    pub value: i32,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Stop {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Start {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Photo {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Halt {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct GetMeteo {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ResetZoom {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ResetFocus {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SaveToTable {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SaveToTableFocus {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct FocusAtRoi {
    #[prost(double, tag = "1")]
    pub x: f64,
    #[prost(double, tag = "2")]
    pub y: f64,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct TrackRoi {
    #[prost(double, tag = "1")]
    pub x1: f64,
    #[prost(double, tag = "2")]
    pub y1: f64,
    #[prost(double, tag = "3")]
    pub x2: f64,
    #[prost(double, tag = "4")]
    pub y2: f64,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ZoomRoi {
    #[prost(double, tag = "1")]
    pub x1: f64,
    #[prost(double, tag = "2")]
    pub y1: f64,
    #[prost(double, tag = "3")]
    pub x2: f64,
    #[prost(double, tag = "4")]
    pub y2: f64,
}
