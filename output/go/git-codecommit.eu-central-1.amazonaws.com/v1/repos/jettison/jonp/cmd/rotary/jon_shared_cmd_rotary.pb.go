// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: jon_shared_cmd_rotary.proto

package rotary

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	types "git-codecommit.eu-central-1.amazonaws.com/v1/repos/jettison/jonp/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Root struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Cmd:
	//
	//	*Root_Start
	//	*Root_Stop
	//	*Root_Axis
	//	*Root_SetPlatformAzimuth
	//	*Root_SetPlatformElevation
	//	*Root_SetPlatformBank
	//	*Root_Halt
	//	*Root_SetUseRotaryAsCompass
	//	*Root_RotateToGps
	//	*Root_SetOriginGps
	//	*Root_SetMode
	//	*Root_RotateToNdc
	//	*Root_ScanStart
	//	*Root_ScanStop
	//	*Root_ScanPause
	//	*Root_ScanUnpause
	//	*Root_GetMeteo
	//	*Root_ScanPrev
	//	*Root_ScanNext
	//	*Root_ScanRefreshNodeList
	//	*Root_ScanSelectNode
	//	*Root_ScanDeleteNode
	//	*Root_ScanUpdateNode
	//	*Root_ScanAddNode
	Cmd           isRoot_Cmd `protobuf_oneof:"cmd"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Root) Reset() {
	*x = Root{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Root) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Root) ProtoMessage() {}

func (x *Root) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Root.ProtoReflect.Descriptor instead.
func (*Root) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{0}
}

func (x *Root) GetCmd() isRoot_Cmd {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *Root) GetStart() *Start {
	if x != nil {
		if x, ok := x.Cmd.(*Root_Start); ok {
			return x.Start
		}
	}
	return nil
}

func (x *Root) GetStop() *Stop {
	if x != nil {
		if x, ok := x.Cmd.(*Root_Stop); ok {
			return x.Stop
		}
	}
	return nil
}

func (x *Root) GetAxis() *Axis {
	if x != nil {
		if x, ok := x.Cmd.(*Root_Axis); ok {
			return x.Axis
		}
	}
	return nil
}

func (x *Root) GetSetPlatformAzimuth() *SetPlatformAzimuth {
	if x != nil {
		if x, ok := x.Cmd.(*Root_SetPlatformAzimuth); ok {
			return x.SetPlatformAzimuth
		}
	}
	return nil
}

func (x *Root) GetSetPlatformElevation() *SetPlatformElevation {
	if x != nil {
		if x, ok := x.Cmd.(*Root_SetPlatformElevation); ok {
			return x.SetPlatformElevation
		}
	}
	return nil
}

func (x *Root) GetSetPlatformBank() *SetPlatformBank {
	if x != nil {
		if x, ok := x.Cmd.(*Root_SetPlatformBank); ok {
			return x.SetPlatformBank
		}
	}
	return nil
}

func (x *Root) GetHalt() *Halt {
	if x != nil {
		if x, ok := x.Cmd.(*Root_Halt); ok {
			return x.Halt
		}
	}
	return nil
}

func (x *Root) GetSetUseRotaryAsCompass() *SetUseRotaryAsCompass {
	if x != nil {
		if x, ok := x.Cmd.(*Root_SetUseRotaryAsCompass); ok {
			return x.SetUseRotaryAsCompass
		}
	}
	return nil
}

func (x *Root) GetRotateToGps() *RotateToGPS {
	if x != nil {
		if x, ok := x.Cmd.(*Root_RotateToGps); ok {
			return x.RotateToGps
		}
	}
	return nil
}

func (x *Root) GetSetOriginGps() *SetOriginGPS {
	if x != nil {
		if x, ok := x.Cmd.(*Root_SetOriginGps); ok {
			return x.SetOriginGps
		}
	}
	return nil
}

func (x *Root) GetSetMode() *SetMode {
	if x != nil {
		if x, ok := x.Cmd.(*Root_SetMode); ok {
			return x.SetMode
		}
	}
	return nil
}

func (x *Root) GetRotateToNdc() *RotateToNDC {
	if x != nil {
		if x, ok := x.Cmd.(*Root_RotateToNdc); ok {
			return x.RotateToNdc
		}
	}
	return nil
}

func (x *Root) GetScanStart() *ScanStart {
	if x != nil {
		if x, ok := x.Cmd.(*Root_ScanStart); ok {
			return x.ScanStart
		}
	}
	return nil
}

func (x *Root) GetScanStop() *ScanStop {
	if x != nil {
		if x, ok := x.Cmd.(*Root_ScanStop); ok {
			return x.ScanStop
		}
	}
	return nil
}

func (x *Root) GetScanPause() *ScanPause {
	if x != nil {
		if x, ok := x.Cmd.(*Root_ScanPause); ok {
			return x.ScanPause
		}
	}
	return nil
}

func (x *Root) GetScanUnpause() *ScanUnpause {
	if x != nil {
		if x, ok := x.Cmd.(*Root_ScanUnpause); ok {
			return x.ScanUnpause
		}
	}
	return nil
}

func (x *Root) GetGetMeteo() *GetMeteo {
	if x != nil {
		if x, ok := x.Cmd.(*Root_GetMeteo); ok {
			return x.GetMeteo
		}
	}
	return nil
}

func (x *Root) GetScanPrev() *ScanPrev {
	if x != nil {
		if x, ok := x.Cmd.(*Root_ScanPrev); ok {
			return x.ScanPrev
		}
	}
	return nil
}

func (x *Root) GetScanNext() *ScanNext {
	if x != nil {
		if x, ok := x.Cmd.(*Root_ScanNext); ok {
			return x.ScanNext
		}
	}
	return nil
}

func (x *Root) GetScanRefreshNodeList() *ScanRefreshNodeList {
	if x != nil {
		if x, ok := x.Cmd.(*Root_ScanRefreshNodeList); ok {
			return x.ScanRefreshNodeList
		}
	}
	return nil
}

func (x *Root) GetScanSelectNode() *ScanSelectNode {
	if x != nil {
		if x, ok := x.Cmd.(*Root_ScanSelectNode); ok {
			return x.ScanSelectNode
		}
	}
	return nil
}

func (x *Root) GetScanDeleteNode() *ScanDeleteNode {
	if x != nil {
		if x, ok := x.Cmd.(*Root_ScanDeleteNode); ok {
			return x.ScanDeleteNode
		}
	}
	return nil
}

func (x *Root) GetScanUpdateNode() *ScanUpdateNode {
	if x != nil {
		if x, ok := x.Cmd.(*Root_ScanUpdateNode); ok {
			return x.ScanUpdateNode
		}
	}
	return nil
}

func (x *Root) GetScanAddNode() *ScanAddNode {
	if x != nil {
		if x, ok := x.Cmd.(*Root_ScanAddNode); ok {
			return x.ScanAddNode
		}
	}
	return nil
}

type isRoot_Cmd interface {
	isRoot_Cmd()
}

type Root_Start struct {
	Start *Start `protobuf:"bytes,1,opt,name=start,proto3,oneof"`
}

type Root_Stop struct {
	Stop *Stop `protobuf:"bytes,2,opt,name=stop,proto3,oneof"`
}

type Root_Axis struct {
	Axis *Axis `protobuf:"bytes,3,opt,name=axis,proto3,oneof"`
}

type Root_SetPlatformAzimuth struct {
	SetPlatformAzimuth *SetPlatformAzimuth `protobuf:"bytes,4,opt,name=set_platform_azimuth,json=setPlatformAzimuth,proto3,oneof"`
}

type Root_SetPlatformElevation struct {
	SetPlatformElevation *SetPlatformElevation `protobuf:"bytes,5,opt,name=set_platform_elevation,json=setPlatformElevation,proto3,oneof"`
}

type Root_SetPlatformBank struct {
	SetPlatformBank *SetPlatformBank `protobuf:"bytes,6,opt,name=set_platform_bank,json=setPlatformBank,proto3,oneof"`
}

type Root_Halt struct {
	Halt *Halt `protobuf:"bytes,7,opt,name=halt,proto3,oneof"`
}

type Root_SetUseRotaryAsCompass struct {
	SetUseRotaryAsCompass *SetUseRotaryAsCompass `protobuf:"bytes,8,opt,name=set_use_rotary_as_compass,json=setUseRotaryAsCompass,proto3,oneof"`
}

type Root_RotateToGps struct {
	RotateToGps *RotateToGPS `protobuf:"bytes,9,opt,name=rotate_to_gps,json=rotateToGps,proto3,oneof"`
}

type Root_SetOriginGps struct {
	SetOriginGps *SetOriginGPS `protobuf:"bytes,10,opt,name=set_origin_gps,json=setOriginGps,proto3,oneof"`
}

type Root_SetMode struct {
	SetMode *SetMode `protobuf:"bytes,11,opt,name=set_mode,json=setMode,proto3,oneof"`
}

type Root_RotateToNdc struct {
	RotateToNdc *RotateToNDC `protobuf:"bytes,12,opt,name=rotate_to_ndc,json=rotateToNdc,proto3,oneof"`
}

type Root_ScanStart struct {
	ScanStart *ScanStart `protobuf:"bytes,13,opt,name=scan_start,json=scanStart,proto3,oneof"`
}

type Root_ScanStop struct {
	ScanStop *ScanStop `protobuf:"bytes,14,opt,name=scan_stop,json=scanStop,proto3,oneof"`
}

type Root_ScanPause struct {
	ScanPause *ScanPause `protobuf:"bytes,15,opt,name=scan_pause,json=scanPause,proto3,oneof"`
}

type Root_ScanUnpause struct {
	ScanUnpause *ScanUnpause `protobuf:"bytes,16,opt,name=scan_unpause,json=scanUnpause,proto3,oneof"`
}

type Root_GetMeteo struct {
	GetMeteo *GetMeteo `protobuf:"bytes,17,opt,name=get_meteo,json=getMeteo,proto3,oneof"`
}

type Root_ScanPrev struct {
	ScanPrev *ScanPrev `protobuf:"bytes,18,opt,name=scan_prev,json=scanPrev,proto3,oneof"`
}

type Root_ScanNext struct {
	ScanNext *ScanNext `protobuf:"bytes,19,opt,name=scan_next,json=scanNext,proto3,oneof"`
}

type Root_ScanRefreshNodeList struct {
	ScanRefreshNodeList *ScanRefreshNodeList `protobuf:"bytes,20,opt,name=scan_refresh_node_list,json=scanRefreshNodeList,proto3,oneof"`
}

type Root_ScanSelectNode struct {
	ScanSelectNode *ScanSelectNode `protobuf:"bytes,21,opt,name=scan_select_node,json=scanSelectNode,proto3,oneof"`
}

type Root_ScanDeleteNode struct {
	ScanDeleteNode *ScanDeleteNode `protobuf:"bytes,22,opt,name=scan_delete_node,json=scanDeleteNode,proto3,oneof"`
}

type Root_ScanUpdateNode struct {
	ScanUpdateNode *ScanUpdateNode `protobuf:"bytes,23,opt,name=scan_update_node,json=scanUpdateNode,proto3,oneof"`
}

type Root_ScanAddNode struct {
	ScanAddNode *ScanAddNode `protobuf:"bytes,24,opt,name=scan_add_node,json=scanAddNode,proto3,oneof"`
}

func (*Root_Start) isRoot_Cmd() {}

func (*Root_Stop) isRoot_Cmd() {}

func (*Root_Axis) isRoot_Cmd() {}

func (*Root_SetPlatformAzimuth) isRoot_Cmd() {}

func (*Root_SetPlatformElevation) isRoot_Cmd() {}

func (*Root_SetPlatformBank) isRoot_Cmd() {}

func (*Root_Halt) isRoot_Cmd() {}

func (*Root_SetUseRotaryAsCompass) isRoot_Cmd() {}

func (*Root_RotateToGps) isRoot_Cmd() {}

func (*Root_SetOriginGps) isRoot_Cmd() {}

func (*Root_SetMode) isRoot_Cmd() {}

func (*Root_RotateToNdc) isRoot_Cmd() {}

func (*Root_ScanStart) isRoot_Cmd() {}

func (*Root_ScanStop) isRoot_Cmd() {}

func (*Root_ScanPause) isRoot_Cmd() {}

func (*Root_ScanUnpause) isRoot_Cmd() {}

func (*Root_GetMeteo) isRoot_Cmd() {}

func (*Root_ScanPrev) isRoot_Cmd() {}

func (*Root_ScanNext) isRoot_Cmd() {}

func (*Root_ScanRefreshNodeList) isRoot_Cmd() {}

func (*Root_ScanSelectNode) isRoot_Cmd() {}

func (*Root_ScanDeleteNode) isRoot_Cmd() {}

func (*Root_ScanUpdateNode) isRoot_Cmd() {}

func (*Root_ScanAddNode) isRoot_Cmd() {}

type Axis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Azimuth       *Azimuth               `protobuf:"bytes,1,opt,name=azimuth,proto3" json:"azimuth,omitempty"`
	Elevation     *Elevation             `protobuf:"bytes,2,opt,name=elevation,proto3" json:"elevation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Axis) Reset() {
	*x = Axis{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Axis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Axis) ProtoMessage() {}

func (x *Axis) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Axis.ProtoReflect.Descriptor instead.
func (*Axis) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{1}
}

func (x *Axis) GetAzimuth() *Azimuth {
	if x != nil {
		return x.Azimuth
	}
	return nil
}

func (x *Axis) GetElevation() *Elevation {
	if x != nil {
		return x.Elevation
	}
	return nil
}

type SetMode struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Mode          types.JonGuiDataRotaryMode `protobuf:"varint,1,opt,name=mode,proto3,enum=ser.JonGuiDataRotaryMode" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetMode) Reset() {
	*x = SetMode{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMode) ProtoMessage() {}

func (x *SetMode) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMode.ProtoReflect.Descriptor instead.
func (*SetMode) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{2}
}

func (x *SetMode) GetMode() types.JonGuiDataRotaryMode {
	if x != nil {
		return x.Mode
	}
	return types.JonGuiDataRotaryMode(0)
}

type SetAzimuthValue struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Value         float64                         `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	Direction     types.JonGuiDataRotaryDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=ser.JonGuiDataRotaryDirection" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetAzimuthValue) Reset() {
	*x = SetAzimuthValue{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAzimuthValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAzimuthValue) ProtoMessage() {}

func (x *SetAzimuthValue) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAzimuthValue.ProtoReflect.Descriptor instead.
func (*SetAzimuthValue) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{3}
}

func (x *SetAzimuthValue) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *SetAzimuthValue) GetDirection() types.JonGuiDataRotaryDirection {
	if x != nil {
		return x.Direction
	}
	return types.JonGuiDataRotaryDirection(0)
}

type RotateAzimuthTo struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	TargetValue   float64                         `protobuf:"fixed64,1,opt,name=target_value,json=targetValue,proto3" json:"target_value,omitempty"`
	Speed         float64                         `protobuf:"fixed64,2,opt,name=speed,proto3" json:"speed,omitempty"`
	Direction     types.JonGuiDataRotaryDirection `protobuf:"varint,3,opt,name=direction,proto3,enum=ser.JonGuiDataRotaryDirection" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateAzimuthTo) Reset() {
	*x = RotateAzimuthTo{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateAzimuthTo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateAzimuthTo) ProtoMessage() {}

func (x *RotateAzimuthTo) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateAzimuthTo.ProtoReflect.Descriptor instead.
func (*RotateAzimuthTo) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{4}
}

func (x *RotateAzimuthTo) GetTargetValue() float64 {
	if x != nil {
		return x.TargetValue
	}
	return 0
}

func (x *RotateAzimuthTo) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *RotateAzimuthTo) GetDirection() types.JonGuiDataRotaryDirection {
	if x != nil {
		return x.Direction
	}
	return types.JonGuiDataRotaryDirection(0)
}

type RotateAzimuth struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Speed         float64                         `protobuf:"fixed64,1,opt,name=speed,proto3" json:"speed,omitempty"`
	Direction     types.JonGuiDataRotaryDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=ser.JonGuiDataRotaryDirection" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateAzimuth) Reset() {
	*x = RotateAzimuth{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateAzimuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateAzimuth) ProtoMessage() {}

func (x *RotateAzimuth) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateAzimuth.ProtoReflect.Descriptor instead.
func (*RotateAzimuth) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{5}
}

func (x *RotateAzimuth) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *RotateAzimuth) GetDirection() types.JonGuiDataRotaryDirection {
	if x != nil {
		return x.Direction
	}
	return types.JonGuiDataRotaryDirection(0)
}

type RotateElevation struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Speed         float64                         `protobuf:"fixed64,1,opt,name=speed,proto3" json:"speed,omitempty"`
	Direction     types.JonGuiDataRotaryDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=ser.JonGuiDataRotaryDirection" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateElevation) Reset() {
	*x = RotateElevation{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateElevation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateElevation) ProtoMessage() {}

func (x *RotateElevation) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateElevation.ProtoReflect.Descriptor instead.
func (*RotateElevation) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{6}
}

func (x *RotateElevation) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *RotateElevation) GetDirection() types.JonGuiDataRotaryDirection {
	if x != nil {
		return x.Direction
	}
	return types.JonGuiDataRotaryDirection(0)
}

type SetElevationValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         float64                `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetElevationValue) Reset() {
	*x = SetElevationValue{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetElevationValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetElevationValue) ProtoMessage() {}

func (x *SetElevationValue) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetElevationValue.ProtoReflect.Descriptor instead.
func (*SetElevationValue) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{7}
}

func (x *SetElevationValue) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type RotateElevationTo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetValue   float64                `protobuf:"fixed64,1,opt,name=target_value,json=targetValue,proto3" json:"target_value,omitempty"`
	Speed         float64                `protobuf:"fixed64,2,opt,name=speed,proto3" json:"speed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateElevationTo) Reset() {
	*x = RotateElevationTo{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateElevationTo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateElevationTo) ProtoMessage() {}

func (x *RotateElevationTo) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateElevationTo.ProtoReflect.Descriptor instead.
func (*RotateElevationTo) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{8}
}

func (x *RotateElevationTo) GetTargetValue() float64 {
	if x != nil {
		return x.TargetValue
	}
	return 0
}

func (x *RotateElevationTo) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type RotateElevationRelative struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Value         float64                         `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	Speed         float64                         `protobuf:"fixed64,2,opt,name=speed,proto3" json:"speed,omitempty"`
	Direction     types.JonGuiDataRotaryDirection `protobuf:"varint,3,opt,name=direction,proto3,enum=ser.JonGuiDataRotaryDirection" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateElevationRelative) Reset() {
	*x = RotateElevationRelative{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateElevationRelative) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateElevationRelative) ProtoMessage() {}

func (x *RotateElevationRelative) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateElevationRelative.ProtoReflect.Descriptor instead.
func (*RotateElevationRelative) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{9}
}

func (x *RotateElevationRelative) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *RotateElevationRelative) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *RotateElevationRelative) GetDirection() types.JonGuiDataRotaryDirection {
	if x != nil {
		return x.Direction
	}
	return types.JonGuiDataRotaryDirection(0)
}

type RotateElevationRelativeSet struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Value         float64                         `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	Direction     types.JonGuiDataRotaryDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=ser.JonGuiDataRotaryDirection" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateElevationRelativeSet) Reset() {
	*x = RotateElevationRelativeSet{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateElevationRelativeSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateElevationRelativeSet) ProtoMessage() {}

func (x *RotateElevationRelativeSet) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateElevationRelativeSet.ProtoReflect.Descriptor instead.
func (*RotateElevationRelativeSet) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{10}
}

func (x *RotateElevationRelativeSet) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *RotateElevationRelativeSet) GetDirection() types.JonGuiDataRotaryDirection {
	if x != nil {
		return x.Direction
	}
	return types.JonGuiDataRotaryDirection(0)
}

type RotateAzimuthRelative struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Value         float64                         `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	Speed         float64                         `protobuf:"fixed64,2,opt,name=speed,proto3" json:"speed,omitempty"`
	Direction     types.JonGuiDataRotaryDirection `protobuf:"varint,3,opt,name=direction,proto3,enum=ser.JonGuiDataRotaryDirection" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateAzimuthRelative) Reset() {
	*x = RotateAzimuthRelative{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateAzimuthRelative) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateAzimuthRelative) ProtoMessage() {}

func (x *RotateAzimuthRelative) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateAzimuthRelative.ProtoReflect.Descriptor instead.
func (*RotateAzimuthRelative) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{11}
}

func (x *RotateAzimuthRelative) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *RotateAzimuthRelative) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *RotateAzimuthRelative) GetDirection() types.JonGuiDataRotaryDirection {
	if x != nil {
		return x.Direction
	}
	return types.JonGuiDataRotaryDirection(0)
}

type RotateAzimuthRelativeSet struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Value         float64                         `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	Direction     types.JonGuiDataRotaryDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=ser.JonGuiDataRotaryDirection" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateAzimuthRelativeSet) Reset() {
	*x = RotateAzimuthRelativeSet{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateAzimuthRelativeSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateAzimuthRelativeSet) ProtoMessage() {}

func (x *RotateAzimuthRelativeSet) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateAzimuthRelativeSet.ProtoReflect.Descriptor instead.
func (*RotateAzimuthRelativeSet) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{12}
}

func (x *RotateAzimuthRelativeSet) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *RotateAzimuthRelativeSet) GetDirection() types.JonGuiDataRotaryDirection {
	if x != nil {
		return x.Direction
	}
	return types.JonGuiDataRotaryDirection(0)
}

type SetPlatformAzimuth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         float64                `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetPlatformAzimuth) Reset() {
	*x = SetPlatformAzimuth{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPlatformAzimuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlatformAzimuth) ProtoMessage() {}

func (x *SetPlatformAzimuth) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlatformAzimuth.ProtoReflect.Descriptor instead.
func (*SetPlatformAzimuth) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{13}
}

func (x *SetPlatformAzimuth) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SetPlatformElevation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         float64                `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetPlatformElevation) Reset() {
	*x = SetPlatformElevation{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPlatformElevation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlatformElevation) ProtoMessage() {}

func (x *SetPlatformElevation) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlatformElevation.ProtoReflect.Descriptor instead.
func (*SetPlatformElevation) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{14}
}

func (x *SetPlatformElevation) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SetPlatformBank struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         float64                `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetPlatformBank) Reset() {
	*x = SetPlatformBank{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPlatformBank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlatformBank) ProtoMessage() {}

func (x *SetPlatformBank) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlatformBank.ProtoReflect.Descriptor instead.
func (*SetPlatformBank) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{15}
}

func (x *SetPlatformBank) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type GetMeteo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMeteo) Reset() {
	*x = GetMeteo{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMeteo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeteo) ProtoMessage() {}

func (x *GetMeteo) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeteo.ProtoReflect.Descriptor instead.
func (*GetMeteo) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{16}
}

type Azimuth struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Cmd:
	//
	//	*Azimuth_SetValue
	//	*Azimuth_RotateTo
	//	*Azimuth_Rotate
	//	*Azimuth_Relative
	//	*Azimuth_RelativeSet
	//	*Azimuth_Halt
	Cmd           isAzimuth_Cmd `protobuf_oneof:"cmd"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Azimuth) Reset() {
	*x = Azimuth{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Azimuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Azimuth) ProtoMessage() {}

func (x *Azimuth) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Azimuth.ProtoReflect.Descriptor instead.
func (*Azimuth) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{17}
}

func (x *Azimuth) GetCmd() isAzimuth_Cmd {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *Azimuth) GetSetValue() *SetAzimuthValue {
	if x != nil {
		if x, ok := x.Cmd.(*Azimuth_SetValue); ok {
			return x.SetValue
		}
	}
	return nil
}

func (x *Azimuth) GetRotateTo() *RotateAzimuthTo {
	if x != nil {
		if x, ok := x.Cmd.(*Azimuth_RotateTo); ok {
			return x.RotateTo
		}
	}
	return nil
}

func (x *Azimuth) GetRotate() *RotateAzimuth {
	if x != nil {
		if x, ok := x.Cmd.(*Azimuth_Rotate); ok {
			return x.Rotate
		}
	}
	return nil
}

func (x *Azimuth) GetRelative() *RotateAzimuthRelative {
	if x != nil {
		if x, ok := x.Cmd.(*Azimuth_Relative); ok {
			return x.Relative
		}
	}
	return nil
}

func (x *Azimuth) GetRelativeSet() *RotateAzimuthRelativeSet {
	if x != nil {
		if x, ok := x.Cmd.(*Azimuth_RelativeSet); ok {
			return x.RelativeSet
		}
	}
	return nil
}

func (x *Azimuth) GetHalt() *HaltAzimuth {
	if x != nil {
		if x, ok := x.Cmd.(*Azimuth_Halt); ok {
			return x.Halt
		}
	}
	return nil
}

type isAzimuth_Cmd interface {
	isAzimuth_Cmd()
}

type Azimuth_SetValue struct {
	SetValue *SetAzimuthValue `protobuf:"bytes,1,opt,name=set_value,json=setValue,proto3,oneof"`
}

type Azimuth_RotateTo struct {
	RotateTo *RotateAzimuthTo `protobuf:"bytes,2,opt,name=rotate_to,json=rotateTo,proto3,oneof"`
}

type Azimuth_Rotate struct {
	Rotate *RotateAzimuth `protobuf:"bytes,3,opt,name=rotate,proto3,oneof"`
}

type Azimuth_Relative struct {
	Relative *RotateAzimuthRelative `protobuf:"bytes,4,opt,name=relative,proto3,oneof"`
}

type Azimuth_RelativeSet struct {
	RelativeSet *RotateAzimuthRelativeSet `protobuf:"bytes,5,opt,name=relative_set,json=relativeSet,proto3,oneof"`
}

type Azimuth_Halt struct {
	Halt *HaltAzimuth `protobuf:"bytes,6,opt,name=halt,proto3,oneof"`
}

func (*Azimuth_SetValue) isAzimuth_Cmd() {}

func (*Azimuth_RotateTo) isAzimuth_Cmd() {}

func (*Azimuth_Rotate) isAzimuth_Cmd() {}

func (*Azimuth_Relative) isAzimuth_Cmd() {}

func (*Azimuth_RelativeSet) isAzimuth_Cmd() {}

func (*Azimuth_Halt) isAzimuth_Cmd() {}

type Start struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Start) Reset() {
	*x = Start{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Start) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Start) ProtoMessage() {}

func (x *Start) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Start.ProtoReflect.Descriptor instead.
func (*Start) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{18}
}

type Stop struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stop) Reset() {
	*x = Stop{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stop) ProtoMessage() {}

func (x *Stop) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stop.ProtoReflect.Descriptor instead.
func (*Stop) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{19}
}

type Halt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Halt) Reset() {
	*x = Halt{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Halt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Halt) ProtoMessage() {}

func (x *Halt) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Halt.ProtoReflect.Descriptor instead.
func (*Halt) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{20}
}

type ScanStart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanStart) Reset() {
	*x = ScanStart{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanStart) ProtoMessage() {}

func (x *ScanStart) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanStart.ProtoReflect.Descriptor instead.
func (*ScanStart) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{21}
}

type ScanStop struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanStop) Reset() {
	*x = ScanStop{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanStop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanStop) ProtoMessage() {}

func (x *ScanStop) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanStop.ProtoReflect.Descriptor instead.
func (*ScanStop) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{22}
}

type ScanPause struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanPause) Reset() {
	*x = ScanPause{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanPause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanPause) ProtoMessage() {}

func (x *ScanPause) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanPause.ProtoReflect.Descriptor instead.
func (*ScanPause) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{23}
}

type ScanUnpause struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanUnpause) Reset() {
	*x = ScanUnpause{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanUnpause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanUnpause) ProtoMessage() {}

func (x *ScanUnpause) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanUnpause.ProtoReflect.Descriptor instead.
func (*ScanUnpause) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{24}
}

type HaltAzimuth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HaltAzimuth) Reset() {
	*x = HaltAzimuth{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HaltAzimuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaltAzimuth) ProtoMessage() {}

func (x *HaltAzimuth) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaltAzimuth.ProtoReflect.Descriptor instead.
func (*HaltAzimuth) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{25}
}

type HaltElevation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HaltElevation) Reset() {
	*x = HaltElevation{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HaltElevation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaltElevation) ProtoMessage() {}

func (x *HaltElevation) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaltElevation.ProtoReflect.Descriptor instead.
func (*HaltElevation) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{26}
}

type ScanPrev struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanPrev) Reset() {
	*x = ScanPrev{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanPrev) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanPrev) ProtoMessage() {}

func (x *ScanPrev) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanPrev.ProtoReflect.Descriptor instead.
func (*ScanPrev) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{27}
}

type ScanNext struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanNext) Reset() {
	*x = ScanNext{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanNext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanNext) ProtoMessage() {}

func (x *ScanNext) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanNext.ProtoReflect.Descriptor instead.
func (*ScanNext) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{28}
}

type ScanRefreshNodeList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanRefreshNodeList) Reset() {
	*x = ScanRefreshNodeList{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanRefreshNodeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanRefreshNodeList) ProtoMessage() {}

func (x *ScanRefreshNodeList) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanRefreshNodeList.ProtoReflect.Descriptor instead.
func (*ScanRefreshNodeList) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{29}
}

type ScanSelectNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanSelectNode) Reset() {
	*x = ScanSelectNode{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanSelectNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanSelectNode) ProtoMessage() {}

func (x *ScanSelectNode) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanSelectNode.ProtoReflect.Descriptor instead.
func (*ScanSelectNode) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{30}
}

func (x *ScanSelectNode) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type ScanDeleteNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanDeleteNode) Reset() {
	*x = ScanDeleteNode{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanDeleteNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanDeleteNode) ProtoMessage() {}

func (x *ScanDeleteNode) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanDeleteNode.ProtoReflect.Descriptor instead.
func (*ScanDeleteNode) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{31}
}

func (x *ScanDeleteNode) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type ScanUpdateNode struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Index              int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	DayZoomTableValue  int32                  `protobuf:"varint,2,opt,name=DayZoomTableValue,proto3" json:"DayZoomTableValue,omitempty"`
	HeatZoomTableValue int32                  `protobuf:"varint,3,opt,name=HeatZoomTableValue,proto3" json:"HeatZoomTableValue,omitempty"`
	Azimuth            float64                `protobuf:"fixed64,4,opt,name=azimuth,proto3" json:"azimuth,omitempty"`
	Elevation          float64                `protobuf:"fixed64,5,opt,name=elevation,proto3" json:"elevation,omitempty"`
	Linger             float64                `protobuf:"fixed64,6,opt,name=linger,proto3" json:"linger,omitempty"`
	Speed              float64                `protobuf:"fixed64,7,opt,name=speed,proto3" json:"speed,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ScanUpdateNode) Reset() {
	*x = ScanUpdateNode{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanUpdateNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanUpdateNode) ProtoMessage() {}

func (x *ScanUpdateNode) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanUpdateNode.ProtoReflect.Descriptor instead.
func (*ScanUpdateNode) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{32}
}

func (x *ScanUpdateNode) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ScanUpdateNode) GetDayZoomTableValue() int32 {
	if x != nil {
		return x.DayZoomTableValue
	}
	return 0
}

func (x *ScanUpdateNode) GetHeatZoomTableValue() int32 {
	if x != nil {
		return x.HeatZoomTableValue
	}
	return 0
}

func (x *ScanUpdateNode) GetAzimuth() float64 {
	if x != nil {
		return x.Azimuth
	}
	return 0
}

func (x *ScanUpdateNode) GetElevation() float64 {
	if x != nil {
		return x.Elevation
	}
	return 0
}

func (x *ScanUpdateNode) GetLinger() float64 {
	if x != nil {
		return x.Linger
	}
	return 0
}

func (x *ScanUpdateNode) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type ScanAddNode struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Index              int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	DayZoomTableValue  int32                  `protobuf:"varint,2,opt,name=DayZoomTableValue,proto3" json:"DayZoomTableValue,omitempty"`
	HeatZoomTableValue int32                  `protobuf:"varint,3,opt,name=HeatZoomTableValue,proto3" json:"HeatZoomTableValue,omitempty"`
	Azimuth            float64                `protobuf:"fixed64,4,opt,name=azimuth,proto3" json:"azimuth,omitempty"`
	Elevation          float64                `protobuf:"fixed64,5,opt,name=elevation,proto3" json:"elevation,omitempty"`
	Linger             float64                `protobuf:"fixed64,6,opt,name=linger,proto3" json:"linger,omitempty"`
	Speed              float64                `protobuf:"fixed64,7,opt,name=speed,proto3" json:"speed,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ScanAddNode) Reset() {
	*x = ScanAddNode{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanAddNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanAddNode) ProtoMessage() {}

func (x *ScanAddNode) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanAddNode.ProtoReflect.Descriptor instead.
func (*ScanAddNode) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{33}
}

func (x *ScanAddNode) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ScanAddNode) GetDayZoomTableValue() int32 {
	if x != nil {
		return x.DayZoomTableValue
	}
	return 0
}

func (x *ScanAddNode) GetHeatZoomTableValue() int32 {
	if x != nil {
		return x.HeatZoomTableValue
	}
	return 0
}

func (x *ScanAddNode) GetAzimuth() float64 {
	if x != nil {
		return x.Azimuth
	}
	return 0
}

func (x *ScanAddNode) GetElevation() float64 {
	if x != nil {
		return x.Elevation
	}
	return 0
}

func (x *ScanAddNode) GetLinger() float64 {
	if x != nil {
		return x.Linger
	}
	return 0
}

func (x *ScanAddNode) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type Elevation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Cmd:
	//
	//	*Elevation_SetValue
	//	*Elevation_RotateTo
	//	*Elevation_Rotate
	//	*Elevation_Relative
	//	*Elevation_RelativeSet
	//	*Elevation_Halt
	Cmd           isElevation_Cmd `protobuf_oneof:"cmd"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Elevation) Reset() {
	*x = Elevation{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Elevation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Elevation) ProtoMessage() {}

func (x *Elevation) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Elevation.ProtoReflect.Descriptor instead.
func (*Elevation) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{34}
}

func (x *Elevation) GetCmd() isElevation_Cmd {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *Elevation) GetSetValue() *SetElevationValue {
	if x != nil {
		if x, ok := x.Cmd.(*Elevation_SetValue); ok {
			return x.SetValue
		}
	}
	return nil
}

func (x *Elevation) GetRotateTo() *RotateElevationTo {
	if x != nil {
		if x, ok := x.Cmd.(*Elevation_RotateTo); ok {
			return x.RotateTo
		}
	}
	return nil
}

func (x *Elevation) GetRotate() *RotateElevation {
	if x != nil {
		if x, ok := x.Cmd.(*Elevation_Rotate); ok {
			return x.Rotate
		}
	}
	return nil
}

func (x *Elevation) GetRelative() *RotateElevationRelative {
	if x != nil {
		if x, ok := x.Cmd.(*Elevation_Relative); ok {
			return x.Relative
		}
	}
	return nil
}

func (x *Elevation) GetRelativeSet() *RotateElevationRelativeSet {
	if x != nil {
		if x, ok := x.Cmd.(*Elevation_RelativeSet); ok {
			return x.RelativeSet
		}
	}
	return nil
}

func (x *Elevation) GetHalt() *HaltElevation {
	if x != nil {
		if x, ok := x.Cmd.(*Elevation_Halt); ok {
			return x.Halt
		}
	}
	return nil
}

type isElevation_Cmd interface {
	isElevation_Cmd()
}

type Elevation_SetValue struct {
	SetValue *SetElevationValue `protobuf:"bytes,1,opt,name=set_value,json=setValue,proto3,oneof"`
}

type Elevation_RotateTo struct {
	RotateTo *RotateElevationTo `protobuf:"bytes,2,opt,name=rotate_to,json=rotateTo,proto3,oneof"`
}

type Elevation_Rotate struct {
	Rotate *RotateElevation `protobuf:"bytes,3,opt,name=rotate,proto3,oneof"`
}

type Elevation_Relative struct {
	Relative *RotateElevationRelative `protobuf:"bytes,4,opt,name=relative,proto3,oneof"`
}

type Elevation_RelativeSet struct {
	RelativeSet *RotateElevationRelativeSet `protobuf:"bytes,5,opt,name=relative_set,json=relativeSet,proto3,oneof"`
}

type Elevation_Halt struct {
	Halt *HaltElevation `protobuf:"bytes,6,opt,name=halt,proto3,oneof"`
}

func (*Elevation_SetValue) isElevation_Cmd() {}

func (*Elevation_RotateTo) isElevation_Cmd() {}

func (*Elevation_Rotate) isElevation_Cmd() {}

func (*Elevation_Relative) isElevation_Cmd() {}

func (*Elevation_RelativeSet) isElevation_Cmd() {}

func (*Elevation_Halt) isElevation_Cmd() {}

type SetUseRotaryAsCompass struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Flag          bool                   `protobuf:"varint,1,opt,name=flag,proto3" json:"flag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetUseRotaryAsCompass) Reset() {
	*x = SetUseRotaryAsCompass{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetUseRotaryAsCompass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUseRotaryAsCompass) ProtoMessage() {}

func (x *SetUseRotaryAsCompass) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUseRotaryAsCompass.ProtoReflect.Descriptor instead.
func (*SetUseRotaryAsCompass) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{35}
}

func (x *SetUseRotaryAsCompass) GetFlag() bool {
	if x != nil {
		return x.Flag
	}
	return false
}

type RotateToGPS struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Altitude      float64                `protobuf:"fixed64,3,opt,name=altitude,proto3" json:"altitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateToGPS) Reset() {
	*x = RotateToGPS{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateToGPS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateToGPS) ProtoMessage() {}

func (x *RotateToGPS) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateToGPS.ProtoReflect.Descriptor instead.
func (*RotateToGPS) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{36}
}

func (x *RotateToGPS) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *RotateToGPS) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *RotateToGPS) GetAltitude() float64 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

type SetOriginGPS struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Altitude      float64                `protobuf:"fixed64,3,opt,name=altitude,proto3" json:"altitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetOriginGPS) Reset() {
	*x = SetOriginGPS{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetOriginGPS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOriginGPS) ProtoMessage() {}

func (x *SetOriginGPS) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOriginGPS.ProtoReflect.Descriptor instead.
func (*SetOriginGPS) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{37}
}

func (x *SetOriginGPS) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *SetOriginGPS) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *SetOriginGPS) GetAltitude() float64 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

type RotateToNDC struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Channel       types.JonGuiDataVideoChannel `protobuf:"varint,1,opt,name=channel,proto3,enum=ser.JonGuiDataVideoChannel" json:"channel,omitempty"`
	X             float64                      `protobuf:"fixed64,2,opt,name=x,proto3" json:"x,omitempty"`
	Y             float64                      `protobuf:"fixed64,3,opt,name=y,proto3" json:"y,omitempty"`
	FrameTime     uint64                       `protobuf:"varint,4,opt,name=frame_time,json=frameTime,proto3" json:"frame_time,omitempty"` // Video frame timestamp
	StateTime     uint64                       `protobuf:"varint,5,opt,name=state_time,json=stateTime,proto3" json:"state_time,omitempty"` // System monotonic time from state when user performed action
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateToNDC) Reset() {
	*x = RotateToNDC{}
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateToNDC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateToNDC) ProtoMessage() {}

func (x *RotateToNDC) ProtoReflect() protoreflect.Message {
	mi := &file_jon_shared_cmd_rotary_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateToNDC.ProtoReflect.Descriptor instead.
func (*RotateToNDC) Descriptor() ([]byte, []int) {
	return file_jon_shared_cmd_rotary_proto_rawDescGZIP(), []int{38}
}

func (x *RotateToNDC) GetChannel() types.JonGuiDataVideoChannel {
	if x != nil {
		return x.Channel
	}
	return types.JonGuiDataVideoChannel(0)
}

func (x *RotateToNDC) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *RotateToNDC) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *RotateToNDC) GetFrameTime() uint64 {
	if x != nil {
		return x.FrameTime
	}
	return 0
}

func (x *RotateToNDC) GetStateTime() uint64 {
	if x != nil {
		return x.StateTime
	}
	return 0
}

var File_jon_shared_cmd_rotary_proto protoreflect.FileDescriptor

const file_jon_shared_cmd_rotary_proto_rawDesc = "" +
	"\n" +
	"\x1bjon_shared_cmd_rotary.proto\x12\x12cmd.RotaryPlatform\x1a\x1bbuf/validate/validate.proto\x1a\x1bjon_shared_data_types.proto\"\xb2\r\n" +
	"\x04Root\x121\n" +
	"\x05start\x18\x01 \x01(\v2\x19.cmd.RotaryPlatform.StartH\x00R\x05start\x12.\n" +
	"\x04stop\x18\x02 \x01(\v2\x18.cmd.RotaryPlatform.StopH\x00R\x04stop\x12.\n" +
	"\x04axis\x18\x03 \x01(\v2\x18.cmd.RotaryPlatform.AxisH\x00R\x04axis\x12Z\n" +
	"\x14set_platform_azimuth\x18\x04 \x01(\v2&.cmd.RotaryPlatform.SetPlatformAzimuthH\x00R\x12setPlatformAzimuth\x12`\n" +
	"\x16set_platform_elevation\x18\x05 \x01(\v2(.cmd.RotaryPlatform.SetPlatformElevationH\x00R\x14setPlatformElevation\x12Q\n" +
	"\x11set_platform_bank\x18\x06 \x01(\v2#.cmd.RotaryPlatform.SetPlatformBankH\x00R\x0fsetPlatformBank\x12.\n" +
	"\x04halt\x18\a \x01(\v2\x18.cmd.RotaryPlatform.HaltH\x00R\x04halt\x12e\n" +
	"\x19set_use_rotary_as_compass\x18\b \x01(\v2).cmd.RotaryPlatform.setUseRotaryAsCompassH\x00R\x15setUseRotaryAsCompass\x12E\n" +
	"\rrotate_to_gps\x18\t \x01(\v2\x1f.cmd.RotaryPlatform.RotateToGPSH\x00R\vrotateToGps\x12H\n" +
	"\x0eset_origin_gps\x18\n" +
	" \x01(\v2 .cmd.RotaryPlatform.SetOriginGPSH\x00R\fsetOriginGps\x128\n" +
	"\bset_mode\x18\v \x01(\v2\x1b.cmd.RotaryPlatform.SetModeH\x00R\asetMode\x12E\n" +
	"\rrotate_to_ndc\x18\f \x01(\v2\x1f.cmd.RotaryPlatform.RotateToNDCH\x00R\vrotateToNdc\x12>\n" +
	"\n" +
	"scan_start\x18\r \x01(\v2\x1d.cmd.RotaryPlatform.ScanStartH\x00R\tscanStart\x12;\n" +
	"\tscan_stop\x18\x0e \x01(\v2\x1c.cmd.RotaryPlatform.ScanStopH\x00R\bscanStop\x12>\n" +
	"\n" +
	"scan_pause\x18\x0f \x01(\v2\x1d.cmd.RotaryPlatform.ScanPauseH\x00R\tscanPause\x12D\n" +
	"\fscan_unpause\x18\x10 \x01(\v2\x1f.cmd.RotaryPlatform.ScanUnpauseH\x00R\vscanUnpause\x12;\n" +
	"\tget_meteo\x18\x11 \x01(\v2\x1c.cmd.RotaryPlatform.GetMeteoH\x00R\bgetMeteo\x12;\n" +
	"\tscan_prev\x18\x12 \x01(\v2\x1c.cmd.RotaryPlatform.ScanPrevH\x00R\bscanPrev\x12;\n" +
	"\tscan_next\x18\x13 \x01(\v2\x1c.cmd.RotaryPlatform.ScanNextH\x00R\bscanNext\x12^\n" +
	"\x16scan_refresh_node_list\x18\x14 \x01(\v2'.cmd.RotaryPlatform.ScanRefreshNodeListH\x00R\x13scanRefreshNodeList\x12N\n" +
	"\x10scan_select_node\x18\x15 \x01(\v2\".cmd.RotaryPlatform.ScanSelectNodeH\x00R\x0escanSelectNode\x12N\n" +
	"\x10scan_delete_node\x18\x16 \x01(\v2\".cmd.RotaryPlatform.ScanDeleteNodeH\x00R\x0escanDeleteNode\x12N\n" +
	"\x10scan_update_node\x18\x17 \x01(\v2\".cmd.RotaryPlatform.ScanUpdateNodeH\x00R\x0escanUpdateNode\x12E\n" +
	"\rscan_add_node\x18\x18 \x01(\v2\x1f.cmd.RotaryPlatform.ScanAddNodeH\x00R\vscanAddNodeB\f\n" +
	"\x03cmd\x12\x05\xbaH\x02\b\x01\"z\n" +
	"\x04Axis\x125\n" +
	"\aazimuth\x18\x01 \x01(\v2\x1b.cmd.RotaryPlatform.AzimuthR\aazimuth\x12;\n" +
	"\televation\x18\x02 \x01(\v2\x1d.cmd.RotaryPlatform.ElevationR\televation\"D\n" +
	"\aSetMode\x129\n" +
	"\x04mode\x18\x01 \x01(\x0e2\x19.ser.JonGuiDataRotaryModeB\n" +
	"\xbaH\a\x82\x01\x04\x10\x01 \x00R\x04mode\"\x8a\x01\n" +
	"\x0fSetAzimuthValue\x12-\n" +
	"\x05value\x18\x01 \x01(\x01B\x17\xbaH\x14\x12\x12\x11\x00\x00\x00\x00\x00\x80v@)\x00\x00\x00\x00\x00\x00\x00\x00R\x05value\x12H\n" +
	"\tdirection\x18\x02 \x01(\x0e2\x1e.ser.JonGuiDataRotaryDirectionB\n" +
	"\xbaH\a\x82\x01\x04\x10\x01 \x00R\tdirection\"\xc6\x01\n" +
	"\x0fRotateAzimuthTo\x12:\n" +
	"\ftarget_value\x18\x01 \x01(\x01B\x17\xbaH\x14\x12\x12\x11\x00\x00\x00\x00\x00\x80v@)\x00\x00\x00\x00\x00\x00\x00\x00R\vtargetValue\x12-\n" +
	"\x05speed\x18\x02 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00\xf0?)\x00\x00\x00\x00\x00\x00\x00\x00R\x05speed\x12H\n" +
	"\tdirection\x18\x03 \x01(\x0e2\x1e.ser.JonGuiDataRotaryDirectionB\n" +
	"\xbaH\a\x82\x01\x04\x10\x01 \x00R\tdirection\"\x88\x01\n" +
	"\rRotateAzimuth\x12-\n" +
	"\x05speed\x18\x01 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00\xf0?)\x00\x00\x00\x00\x00\x00\x00\x00R\x05speed\x12H\n" +
	"\tdirection\x18\x02 \x01(\x0e2\x1e.ser.JonGuiDataRotaryDirectionB\n" +
	"\xbaH\a\x82\x01\x04\x10\x01 \x00R\tdirection\"\x8a\x01\n" +
	"\x0fRotateElevation\x12-\n" +
	"\x05speed\x18\x01 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00\xf0?)\x00\x00\x00\x00\x00\x00\x00\x00R\x05speed\x12H\n" +
	"\tdirection\x18\x02 \x01(\x0e2\x1e.ser.JonGuiDataRotaryDirectionB\n" +
	"\xbaH\a\x82\x01\x04\x10\x01 \x00R\tdirection\"B\n" +
	"\x11SetElevationValue\x12-\n" +
	"\x05value\x18\x01 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x80V@)\x00\x00\x00\x00\x00\x80V\xc0R\x05value\"~\n" +
	"\x11RotateElevationTo\x12:\n" +
	"\ftarget_value\x18\x01 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x80V@)\x00\x00\x00\x00\x00\x80V\xc0R\vtargetValue\x12-\n" +
	"\x05speed\x18\x02 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00\xf0?)\x00\x00\x00\x00\x00\x00\x00\x00R\x05speed\"\xc1\x01\n" +
	"\x17RotateElevationRelative\x12-\n" +
	"\x05value\x18\x01 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x80V@)\x00\x00\x00\x00\x00\x80V\xc0R\x05value\x12-\n" +
	"\x05speed\x18\x02 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00\xf0?)\x00\x00\x00\x00\x00\x00\x00\x00R\x05speed\x12H\n" +
	"\tdirection\x18\x03 \x01(\x0e2\x1e.ser.JonGuiDataRotaryDirectionB\n" +
	"\xbaH\a\x82\x01\x04\x10\x01 \x00R\tdirection\"\x95\x01\n" +
	"\x1aRotateElevationRelativeSet\x12-\n" +
	"\x05value\x18\x01 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x80V@)\x00\x00\x00\x00\x00\x80V\xc0R\x05value\x12H\n" +
	"\tdirection\x18\x02 \x01(\x0e2\x1e.ser.JonGuiDataRotaryDirectionB\n" +
	"\xbaH\a\x82\x01\x04\x10\x01 \x00R\tdirection\"\xbf\x01\n" +
	"\x15RotateAzimuthRelative\x12-\n" +
	"\x05value\x18\x01 \x01(\x01B\x17\xbaH\x14\x12\x12\x11\x00\x00\x00\x00\x00\x80f@)\x00\x00\x00\x00\x00\x80f\xc0R\x05value\x12-\n" +
	"\x05speed\x18\x02 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00\xf0?)\x00\x00\x00\x00\x00\x00\x00\x00R\x05speed\x12H\n" +
	"\tdirection\x18\x03 \x01(\x0e2\x1e.ser.JonGuiDataRotaryDirectionB\n" +
	"\xbaH\a\x82\x01\x04\x10\x01 \x00R\tdirection\"\x93\x01\n" +
	"\x18RotateAzimuthRelativeSet\x12-\n" +
	"\x05value\x18\x01 \x01(\x01B\x17\xbaH\x14\x12\x12\x11\x00\x00\x00\x00\x00\x80f@)\x00\x00\x00\x00\x00\x80f\xc0R\x05value\x12H\n" +
	"\tdirection\x18\x02 \x01(\x0e2\x1e.ser.JonGuiDataRotaryDirectionB\n" +
	"\xbaH\a\x82\x01\x04\x10\x01 \x00R\tdirection\"C\n" +
	"\x12SetPlatformAzimuth\x12-\n" +
	"\x05value\x18\x01 \x01(\x01B\x17\xbaH\x14\x12\x12\x11\x00\x00\x00\x00\x00\x80v@!\x00\x00\x00\x00\x00\x80v\xc0R\x05value\"E\n" +
	"\x14SetPlatformElevation\x12-\n" +
	"\x05value\x18\x01 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x80V@)\x00\x00\x00\x00\x00\x80V\xc0R\x05value\"@\n" +
	"\x0fSetPlatformBank\x12-\n" +
	"\x05value\x18\x01 \x01(\x01B\x17\xbaH\x14\x12\x12\x11\x00\x00\x00\x00\x00\x80f@)\x00\x00\x00\x00\x00\x80f\xc0R\x05value\"\n" +
	"\n" +
	"\bGetMeteo\"\xaf\x03\n" +
	"\aAzimuth\x12B\n" +
	"\tset_value\x18\x01 \x01(\v2#.cmd.RotaryPlatform.SetAzimuthValueH\x00R\bsetValue\x12B\n" +
	"\trotate_to\x18\x02 \x01(\v2#.cmd.RotaryPlatform.RotateAzimuthToH\x00R\brotateTo\x12;\n" +
	"\x06rotate\x18\x03 \x01(\v2!.cmd.RotaryPlatform.RotateAzimuthH\x00R\x06rotate\x12G\n" +
	"\brelative\x18\x04 \x01(\v2).cmd.RotaryPlatform.RotateAzimuthRelativeH\x00R\brelative\x12Q\n" +
	"\frelative_set\x18\x05 \x01(\v2,.cmd.RotaryPlatform.RotateAzimuthRelativeSetH\x00R\vrelativeSet\x125\n" +
	"\x04halt\x18\x06 \x01(\v2\x1f.cmd.RotaryPlatform.HaltAzimuthH\x00R\x04haltB\f\n" +
	"\x03cmd\x12\x05\xbaH\x02\b\x01\"\a\n" +
	"\x05Start\"\x06\n" +
	"\x04Stop\"\x06\n" +
	"\x04Halt\"\v\n" +
	"\tScanStart\"\n" +
	"\n" +
	"\bScanStop\"\v\n" +
	"\tScanPause\"\r\n" +
	"\vScanUnpause\"\r\n" +
	"\vHaltAzimuth\"\x0f\n" +
	"\rHaltElevation\"\n" +
	"\n" +
	"\bScanPrev\"\n" +
	"\n" +
	"\bScanNext\"\x15\n" +
	"\x13ScanRefreshNodeList\"/\n" +
	"\x0eScanSelectNode\x12\x1d\n" +
	"\x05index\x18\x01 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\x05index\"/\n" +
	"\x0eScanDeleteNode\x12\x1d\n" +
	"\x05index\x18\x01 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\x05index\"\xe0\x02\n" +
	"\x0eScanUpdateNode\x12\x1d\n" +
	"\x05index\x18\x01 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\x05index\x125\n" +
	"\x11DayZoomTableValue\x18\x02 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\x11DayZoomTableValue\x127\n" +
	"\x12HeatZoomTableValue\x18\x03 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\x12HeatZoomTableValue\x121\n" +
	"\aazimuth\x18\x04 \x01(\x01B\x17\xbaH\x14\x12\x12\x11\x00\x00\x00\x00\x00\x80v@)\x00\x00\x00\x00\x00\x00\x00\x00R\aazimuth\x125\n" +
	"\televation\x18\x05 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x80V@)\x00\x00\x00\x00\x00\x80V\xc0R\televation\x12&\n" +
	"\x06linger\x18\x06 \x01(\x01B\x0e\xbaH\v\x12\t)\x00\x00\x00\x00\x00\x00\x00\x00R\x06linger\x12-\n" +
	"\x05speed\x18\a \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00\xf0?!\x00\x00\x00\x00\x00\x00\x00\x00R\x05speed\"\xdd\x02\n" +
	"\vScanAddNode\x12\x1d\n" +
	"\x05index\x18\x01 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\x05index\x125\n" +
	"\x11DayZoomTableValue\x18\x02 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\x11DayZoomTableValue\x127\n" +
	"\x12HeatZoomTableValue\x18\x03 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\x12HeatZoomTableValue\x121\n" +
	"\aazimuth\x18\x04 \x01(\x01B\x17\xbaH\x14\x12\x12\x11\x00\x00\x00\x00\x00\x80v@)\x00\x00\x00\x00\x00\x00\x00\x00R\aazimuth\x125\n" +
	"\televation\x18\x05 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x80V@)\x00\x00\x00\x00\x00\x80V\xc0R\televation\x12&\n" +
	"\x06linger\x18\x06 \x01(\x01B\x0e\xbaH\v\x12\t)\x00\x00\x00\x00\x00\x00\x00\x00R\x06linger\x12-\n" +
	"\x05speed\x18\a \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00\xf0?!\x00\x00\x00\x00\x00\x00\x00\x00R\x05speed\"\xbd\x03\n" +
	"\tElevation\x12D\n" +
	"\tset_value\x18\x01 \x01(\v2%.cmd.RotaryPlatform.SetElevationValueH\x00R\bsetValue\x12D\n" +
	"\trotate_to\x18\x02 \x01(\v2%.cmd.RotaryPlatform.RotateElevationToH\x00R\brotateTo\x12=\n" +
	"\x06rotate\x18\x03 \x01(\v2#.cmd.RotaryPlatform.RotateElevationH\x00R\x06rotate\x12I\n" +
	"\brelative\x18\x04 \x01(\v2+.cmd.RotaryPlatform.RotateElevationRelativeH\x00R\brelative\x12S\n" +
	"\frelative_set\x18\x05 \x01(\v2..cmd.RotaryPlatform.RotateElevationRelativeSetH\x00R\vrelativeSet\x127\n" +
	"\x04halt\x18\x06 \x01(\v2!.cmd.RotaryPlatform.HaltElevationH\x00R\x04haltB\f\n" +
	"\x03cmd\x12\x05\xbaH\x02\b\x01\"+\n" +
	"\x15setUseRotaryAsCompass\x12\x12\n" +
	"\x04flag\x18\x01 \x01(\bR\x04flag\"\xae\x01\n" +
	"\vRotateToGPS\x123\n" +
	"\blatitude\x18\x01 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x80V@)\x00\x00\x00\x00\x00\x80V\xc0R\blatitude\x125\n" +
	"\tlongitude\x18\x02 \x01(\x01B\x17\xbaH\x14\x12\x12\x11\x00\x00\x00\x00\x00\x80f@)\x00\x00\x00\x00\x00\x80f\xc0R\tlongitude\x123\n" +
	"\baltitude\x18\x03 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00j\xf8@)\x00\x00\x00\x00\x00\xe0z\xc0R\baltitude\"\xaf\x01\n" +
	"\fSetOriginGPS\x123\n" +
	"\blatitude\x18\x01 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x80V@)\x00\x00\x00\x00\x00\x80V\xc0R\blatitude\x125\n" +
	"\tlongitude\x18\x02 \x01(\x01B\x17\xbaH\x14\x12\x12\x11\x00\x00\x00\x00\x00\x80f@)\x00\x00\x00\x00\x00\x80f\xc0R\tlongitude\x123\n" +
	"\baltitude\x18\x03 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00j\xf8@)\x00\x00\x00\x00\x00\xe0z\xc0R\baltitude\"\xdc\x01\n" +
	"\vRotateToNDC\x12A\n" +
	"\achannel\x18\x01 \x01(\x0e2\x1b.ser.JonGuiDataVideoChannelB\n" +
	"\xbaH\a\x82\x01\x04\x10\x01 \x00R\achannel\x12%\n" +
	"\x01x\x18\x02 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00\xf0?)\x00\x00\x00\x00\x00\x00\xf0\xbfR\x01x\x12%\n" +
	"\x01y\x18\x03 \x01(\x01B\x17\xbaH\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00\xf0?)\x00\x00\x00\x00\x00\x00\xf0\xbfR\x01y\x12\x1d\n" +
	"\n" +
	"frame_time\x18\x04 \x01(\x04R\tframeTime\x12\x1d\n" +
	"\n" +
	"state_time\x18\x05 \x01(\x04R\tstateTimeB\xe7\x01\n" +
	"\x16com.cmd.RotaryPlatformB\x17JonSharedCmdRotaryProtoP\x01ZKgit-codecommit.eu-central-1.amazonaws.com/v1/repos/jettison/jonp/cmd/rotary\xa2\x02\x03CRX\xaa\x02\x12Cmd.RotaryPlatform\xca\x02\x12Cmd\\RotaryPlatform\xe2\x02\x1eCmd\\RotaryPlatform\\GPBMetadata\xea\x02\x13Cmd::RotaryPlatformb\x06proto3"

var (
	file_jon_shared_cmd_rotary_proto_rawDescOnce sync.Once
	file_jon_shared_cmd_rotary_proto_rawDescData []byte
)

func file_jon_shared_cmd_rotary_proto_rawDescGZIP() []byte {
	file_jon_shared_cmd_rotary_proto_rawDescOnce.Do(func() {
		file_jon_shared_cmd_rotary_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_jon_shared_cmd_rotary_proto_rawDesc), len(file_jon_shared_cmd_rotary_proto_rawDesc)))
	})
	return file_jon_shared_cmd_rotary_proto_rawDescData
}

var file_jon_shared_cmd_rotary_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_jon_shared_cmd_rotary_proto_goTypes = []any{
	(*Root)(nil),                         // 0: cmd.RotaryPlatform.Root
	(*Axis)(nil),                         // 1: cmd.RotaryPlatform.Axis
	(*SetMode)(nil),                      // 2: cmd.RotaryPlatform.SetMode
	(*SetAzimuthValue)(nil),              // 3: cmd.RotaryPlatform.SetAzimuthValue
	(*RotateAzimuthTo)(nil),              // 4: cmd.RotaryPlatform.RotateAzimuthTo
	(*RotateAzimuth)(nil),                // 5: cmd.RotaryPlatform.RotateAzimuth
	(*RotateElevation)(nil),              // 6: cmd.RotaryPlatform.RotateElevation
	(*SetElevationValue)(nil),            // 7: cmd.RotaryPlatform.SetElevationValue
	(*RotateElevationTo)(nil),            // 8: cmd.RotaryPlatform.RotateElevationTo
	(*RotateElevationRelative)(nil),      // 9: cmd.RotaryPlatform.RotateElevationRelative
	(*RotateElevationRelativeSet)(nil),   // 10: cmd.RotaryPlatform.RotateElevationRelativeSet
	(*RotateAzimuthRelative)(nil),        // 11: cmd.RotaryPlatform.RotateAzimuthRelative
	(*RotateAzimuthRelativeSet)(nil),     // 12: cmd.RotaryPlatform.RotateAzimuthRelativeSet
	(*SetPlatformAzimuth)(nil),           // 13: cmd.RotaryPlatform.SetPlatformAzimuth
	(*SetPlatformElevation)(nil),         // 14: cmd.RotaryPlatform.SetPlatformElevation
	(*SetPlatformBank)(nil),              // 15: cmd.RotaryPlatform.SetPlatformBank
	(*GetMeteo)(nil),                     // 16: cmd.RotaryPlatform.GetMeteo
	(*Azimuth)(nil),                      // 17: cmd.RotaryPlatform.Azimuth
	(*Start)(nil),                        // 18: cmd.RotaryPlatform.Start
	(*Stop)(nil),                         // 19: cmd.RotaryPlatform.Stop
	(*Halt)(nil),                         // 20: cmd.RotaryPlatform.Halt
	(*ScanStart)(nil),                    // 21: cmd.RotaryPlatform.ScanStart
	(*ScanStop)(nil),                     // 22: cmd.RotaryPlatform.ScanStop
	(*ScanPause)(nil),                    // 23: cmd.RotaryPlatform.ScanPause
	(*ScanUnpause)(nil),                  // 24: cmd.RotaryPlatform.ScanUnpause
	(*HaltAzimuth)(nil),                  // 25: cmd.RotaryPlatform.HaltAzimuth
	(*HaltElevation)(nil),                // 26: cmd.RotaryPlatform.HaltElevation
	(*ScanPrev)(nil),                     // 27: cmd.RotaryPlatform.ScanPrev
	(*ScanNext)(nil),                     // 28: cmd.RotaryPlatform.ScanNext
	(*ScanRefreshNodeList)(nil),          // 29: cmd.RotaryPlatform.ScanRefreshNodeList
	(*ScanSelectNode)(nil),               // 30: cmd.RotaryPlatform.ScanSelectNode
	(*ScanDeleteNode)(nil),               // 31: cmd.RotaryPlatform.ScanDeleteNode
	(*ScanUpdateNode)(nil),               // 32: cmd.RotaryPlatform.ScanUpdateNode
	(*ScanAddNode)(nil),                  // 33: cmd.RotaryPlatform.ScanAddNode
	(*Elevation)(nil),                    // 34: cmd.RotaryPlatform.Elevation
	(*SetUseRotaryAsCompass)(nil),        // 35: cmd.RotaryPlatform.setUseRotaryAsCompass
	(*RotateToGPS)(nil),                  // 36: cmd.RotaryPlatform.RotateToGPS
	(*SetOriginGPS)(nil),                 // 37: cmd.RotaryPlatform.SetOriginGPS
	(*RotateToNDC)(nil),                  // 38: cmd.RotaryPlatform.RotateToNDC
	(types.JonGuiDataRotaryMode)(0),      // 39: ser.JonGuiDataRotaryMode
	(types.JonGuiDataRotaryDirection)(0), // 40: ser.JonGuiDataRotaryDirection
	(types.JonGuiDataVideoChannel)(0),    // 41: ser.JonGuiDataVideoChannel
}
var file_jon_shared_cmd_rotary_proto_depIdxs = []int32{
	18, // 0: cmd.RotaryPlatform.Root.start:type_name -> cmd.RotaryPlatform.Start
	19, // 1: cmd.RotaryPlatform.Root.stop:type_name -> cmd.RotaryPlatform.Stop
	1,  // 2: cmd.RotaryPlatform.Root.axis:type_name -> cmd.RotaryPlatform.Axis
	13, // 3: cmd.RotaryPlatform.Root.set_platform_azimuth:type_name -> cmd.RotaryPlatform.SetPlatformAzimuth
	14, // 4: cmd.RotaryPlatform.Root.set_platform_elevation:type_name -> cmd.RotaryPlatform.SetPlatformElevation
	15, // 5: cmd.RotaryPlatform.Root.set_platform_bank:type_name -> cmd.RotaryPlatform.SetPlatformBank
	20, // 6: cmd.RotaryPlatform.Root.halt:type_name -> cmd.RotaryPlatform.Halt
	35, // 7: cmd.RotaryPlatform.Root.set_use_rotary_as_compass:type_name -> cmd.RotaryPlatform.setUseRotaryAsCompass
	36, // 8: cmd.RotaryPlatform.Root.rotate_to_gps:type_name -> cmd.RotaryPlatform.RotateToGPS
	37, // 9: cmd.RotaryPlatform.Root.set_origin_gps:type_name -> cmd.RotaryPlatform.SetOriginGPS
	2,  // 10: cmd.RotaryPlatform.Root.set_mode:type_name -> cmd.RotaryPlatform.SetMode
	38, // 11: cmd.RotaryPlatform.Root.rotate_to_ndc:type_name -> cmd.RotaryPlatform.RotateToNDC
	21, // 12: cmd.RotaryPlatform.Root.scan_start:type_name -> cmd.RotaryPlatform.ScanStart
	22, // 13: cmd.RotaryPlatform.Root.scan_stop:type_name -> cmd.RotaryPlatform.ScanStop
	23, // 14: cmd.RotaryPlatform.Root.scan_pause:type_name -> cmd.RotaryPlatform.ScanPause
	24, // 15: cmd.RotaryPlatform.Root.scan_unpause:type_name -> cmd.RotaryPlatform.ScanUnpause
	16, // 16: cmd.RotaryPlatform.Root.get_meteo:type_name -> cmd.RotaryPlatform.GetMeteo
	27, // 17: cmd.RotaryPlatform.Root.scan_prev:type_name -> cmd.RotaryPlatform.ScanPrev
	28, // 18: cmd.RotaryPlatform.Root.scan_next:type_name -> cmd.RotaryPlatform.ScanNext
	29, // 19: cmd.RotaryPlatform.Root.scan_refresh_node_list:type_name -> cmd.RotaryPlatform.ScanRefreshNodeList
	30, // 20: cmd.RotaryPlatform.Root.scan_select_node:type_name -> cmd.RotaryPlatform.ScanSelectNode
	31, // 21: cmd.RotaryPlatform.Root.scan_delete_node:type_name -> cmd.RotaryPlatform.ScanDeleteNode
	32, // 22: cmd.RotaryPlatform.Root.scan_update_node:type_name -> cmd.RotaryPlatform.ScanUpdateNode
	33, // 23: cmd.RotaryPlatform.Root.scan_add_node:type_name -> cmd.RotaryPlatform.ScanAddNode
	17, // 24: cmd.RotaryPlatform.Axis.azimuth:type_name -> cmd.RotaryPlatform.Azimuth
	34, // 25: cmd.RotaryPlatform.Axis.elevation:type_name -> cmd.RotaryPlatform.Elevation
	39, // 26: cmd.RotaryPlatform.SetMode.mode:type_name -> ser.JonGuiDataRotaryMode
	40, // 27: cmd.RotaryPlatform.SetAzimuthValue.direction:type_name -> ser.JonGuiDataRotaryDirection
	40, // 28: cmd.RotaryPlatform.RotateAzimuthTo.direction:type_name -> ser.JonGuiDataRotaryDirection
	40, // 29: cmd.RotaryPlatform.RotateAzimuth.direction:type_name -> ser.JonGuiDataRotaryDirection
	40, // 30: cmd.RotaryPlatform.RotateElevation.direction:type_name -> ser.JonGuiDataRotaryDirection
	40, // 31: cmd.RotaryPlatform.RotateElevationRelative.direction:type_name -> ser.JonGuiDataRotaryDirection
	40, // 32: cmd.RotaryPlatform.RotateElevationRelativeSet.direction:type_name -> ser.JonGuiDataRotaryDirection
	40, // 33: cmd.RotaryPlatform.RotateAzimuthRelative.direction:type_name -> ser.JonGuiDataRotaryDirection
	40, // 34: cmd.RotaryPlatform.RotateAzimuthRelativeSet.direction:type_name -> ser.JonGuiDataRotaryDirection
	3,  // 35: cmd.RotaryPlatform.Azimuth.set_value:type_name -> cmd.RotaryPlatform.SetAzimuthValue
	4,  // 36: cmd.RotaryPlatform.Azimuth.rotate_to:type_name -> cmd.RotaryPlatform.RotateAzimuthTo
	5,  // 37: cmd.RotaryPlatform.Azimuth.rotate:type_name -> cmd.RotaryPlatform.RotateAzimuth
	11, // 38: cmd.RotaryPlatform.Azimuth.relative:type_name -> cmd.RotaryPlatform.RotateAzimuthRelative
	12, // 39: cmd.RotaryPlatform.Azimuth.relative_set:type_name -> cmd.RotaryPlatform.RotateAzimuthRelativeSet
	25, // 40: cmd.RotaryPlatform.Azimuth.halt:type_name -> cmd.RotaryPlatform.HaltAzimuth
	7,  // 41: cmd.RotaryPlatform.Elevation.set_value:type_name -> cmd.RotaryPlatform.SetElevationValue
	8,  // 42: cmd.RotaryPlatform.Elevation.rotate_to:type_name -> cmd.RotaryPlatform.RotateElevationTo
	6,  // 43: cmd.RotaryPlatform.Elevation.rotate:type_name -> cmd.RotaryPlatform.RotateElevation
	9,  // 44: cmd.RotaryPlatform.Elevation.relative:type_name -> cmd.RotaryPlatform.RotateElevationRelative
	10, // 45: cmd.RotaryPlatform.Elevation.relative_set:type_name -> cmd.RotaryPlatform.RotateElevationRelativeSet
	26, // 46: cmd.RotaryPlatform.Elevation.halt:type_name -> cmd.RotaryPlatform.HaltElevation
	41, // 47: cmd.RotaryPlatform.RotateToNDC.channel:type_name -> ser.JonGuiDataVideoChannel
	48, // [48:48] is the sub-list for method output_type
	48, // [48:48] is the sub-list for method input_type
	48, // [48:48] is the sub-list for extension type_name
	48, // [48:48] is the sub-list for extension extendee
	0,  // [0:48] is the sub-list for field type_name
}

func init() { file_jon_shared_cmd_rotary_proto_init() }
func file_jon_shared_cmd_rotary_proto_init() {
	if File_jon_shared_cmd_rotary_proto != nil {
		return
	}
	file_jon_shared_cmd_rotary_proto_msgTypes[0].OneofWrappers = []any{
		(*Root_Start)(nil),
		(*Root_Stop)(nil),
		(*Root_Axis)(nil),
		(*Root_SetPlatformAzimuth)(nil),
		(*Root_SetPlatformElevation)(nil),
		(*Root_SetPlatformBank)(nil),
		(*Root_Halt)(nil),
		(*Root_SetUseRotaryAsCompass)(nil),
		(*Root_RotateToGps)(nil),
		(*Root_SetOriginGps)(nil),
		(*Root_SetMode)(nil),
		(*Root_RotateToNdc)(nil),
		(*Root_ScanStart)(nil),
		(*Root_ScanStop)(nil),
		(*Root_ScanPause)(nil),
		(*Root_ScanUnpause)(nil),
		(*Root_GetMeteo)(nil),
		(*Root_ScanPrev)(nil),
		(*Root_ScanNext)(nil),
		(*Root_ScanRefreshNodeList)(nil),
		(*Root_ScanSelectNode)(nil),
		(*Root_ScanDeleteNode)(nil),
		(*Root_ScanUpdateNode)(nil),
		(*Root_ScanAddNode)(nil),
	}
	file_jon_shared_cmd_rotary_proto_msgTypes[17].OneofWrappers = []any{
		(*Azimuth_SetValue)(nil),
		(*Azimuth_RotateTo)(nil),
		(*Azimuth_Rotate)(nil),
		(*Azimuth_Relative)(nil),
		(*Azimuth_RelativeSet)(nil),
		(*Azimuth_Halt)(nil),
	}
	file_jon_shared_cmd_rotary_proto_msgTypes[34].OneofWrappers = []any{
		(*Elevation_SetValue)(nil),
		(*Elevation_RotateTo)(nil),
		(*Elevation_Rotate)(nil),
		(*Elevation_Relative)(nil),
		(*Elevation_RelativeSet)(nil),
		(*Elevation_Halt)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_jon_shared_cmd_rotary_proto_rawDesc), len(file_jon_shared_cmd_rotary_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_jon_shared_cmd_rotary_proto_goTypes,
		DependencyIndexes: file_jon_shared_cmd_rotary_proto_depIdxs,
		MessageInfos:      file_jon_shared_cmd_rotary_proto_msgTypes,
	}.Build()
	File_jon_shared_cmd_rotary_proto = out.File
	file_jon_shared_cmd_rotary_proto_goTypes = nil
	file_jon_shared_cmd_rotary_proto_depIdxs = nil
}
