// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: jon_shared_cmd_cv.proto
// Protobuf C++ Version: 5.29.2

#ifndef jon_5fshared_5fcmd_5fcv_2eproto_2epb_2eh
#define jon_5fshared_5fcmd_5fcv_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "jon_shared_data_types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_jon_5fshared_5fcmd_5fcv_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_jon_5fshared_5fcmd_5fcv_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_jon_5fshared_5fcmd_5fcv_2eproto;
namespace cmd {
namespace CV {
class DumpStart;
struct DumpStartDefaultTypeInternal;
extern DumpStartDefaultTypeInternal _DumpStart_default_instance_;
class DumpStop;
struct DumpStopDefaultTypeInternal;
extern DumpStopDefaultTypeInternal _DumpStop_default_instance_;
class RecognitionModeDisable;
struct RecognitionModeDisableDefaultTypeInternal;
extern RecognitionModeDisableDefaultTypeInternal _RecognitionModeDisable_default_instance_;
class RecognitionModeEnable;
struct RecognitionModeEnableDefaultTypeInternal;
extern RecognitionModeEnableDefaultTypeInternal _RecognitionModeEnable_default_instance_;
class Root;
struct RootDefaultTypeInternal;
extern RootDefaultTypeInternal _Root_default_instance_;
class SetAutoFocus;
struct SetAutoFocusDefaultTypeInternal;
extern SetAutoFocusDefaultTypeInternal _SetAutoFocus_default_instance_;
class StabilizationModeDisable;
struct StabilizationModeDisableDefaultTypeInternal;
extern StabilizationModeDisableDefaultTypeInternal _StabilizationModeDisable_default_instance_;
class StabilizationModeEnable;
struct StabilizationModeEnableDefaultTypeInternal;
extern StabilizationModeEnableDefaultTypeInternal _StabilizationModeEnable_default_instance_;
class StartTrackNDC;
struct StartTrackNDCDefaultTypeInternal;
extern StartTrackNDCDefaultTypeInternal _StartTrackNDC_default_instance_;
class StopTrack;
struct StopTrackDefaultTypeInternal;
extern StopTrackDefaultTypeInternal _StopTrack_default_instance_;
class VampireModeDisable;
struct VampireModeDisableDefaultTypeInternal;
extern VampireModeDisableDefaultTypeInternal _VampireModeDisable_default_instance_;
class VampireModeEnable;
struct VampireModeEnableDefaultTypeInternal;
extern VampireModeEnableDefaultTypeInternal _VampireModeEnable_default_instance_;
}  // namespace CV
}  // namespace cmd
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cmd {
namespace CV {

// ===================================================================


// -------------------------------------------------------------------

class VampireModeEnable final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.CV.VampireModeEnable) */ {
 public:
  inline VampireModeEnable() : VampireModeEnable(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VampireModeEnable* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VampireModeEnable));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VampireModeEnable(
      ::google::protobuf::internal::ConstantInitialized);

  inline VampireModeEnable(const VampireModeEnable& from) : VampireModeEnable(nullptr, from) {}
  inline VampireModeEnable(VampireModeEnable&& from) noexcept
      : VampireModeEnable(nullptr, std::move(from)) {}
  inline VampireModeEnable& operator=(const VampireModeEnable& from) {
    CopyFrom(from);
    return *this;
  }
  inline VampireModeEnable& operator=(VampireModeEnable&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VampireModeEnable& default_instance() {
    return *internal_default_instance();
  }
  static inline const VampireModeEnable* internal_default_instance() {
    return reinterpret_cast<const VampireModeEnable*>(
        &_VampireModeEnable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(VampireModeEnable& a, VampireModeEnable& b) { a.Swap(&b); }
  inline void Swap(VampireModeEnable* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VampireModeEnable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VampireModeEnable* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<VampireModeEnable>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const VampireModeEnable& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const VampireModeEnable& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.CV.VampireModeEnable"; }

 protected:
  explicit VampireModeEnable(::google::protobuf::Arena* arena);
  VampireModeEnable(::google::protobuf::Arena* arena, const VampireModeEnable& from);
  VampireModeEnable(::google::protobuf::Arena* arena, VampireModeEnable&& from) noexcept
      : VampireModeEnable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.CV.VampireModeEnable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VampireModeEnable& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fcv_2eproto;
};
// -------------------------------------------------------------------

class VampireModeDisable final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.CV.VampireModeDisable) */ {
 public:
  inline VampireModeDisable() : VampireModeDisable(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VampireModeDisable* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VampireModeDisable));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VampireModeDisable(
      ::google::protobuf::internal::ConstantInitialized);

  inline VampireModeDisable(const VampireModeDisable& from) : VampireModeDisable(nullptr, from) {}
  inline VampireModeDisable(VampireModeDisable&& from) noexcept
      : VampireModeDisable(nullptr, std::move(from)) {}
  inline VampireModeDisable& operator=(const VampireModeDisable& from) {
    CopyFrom(from);
    return *this;
  }
  inline VampireModeDisable& operator=(VampireModeDisable&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VampireModeDisable& default_instance() {
    return *internal_default_instance();
  }
  static inline const VampireModeDisable* internal_default_instance() {
    return reinterpret_cast<const VampireModeDisable*>(
        &_VampireModeDisable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(VampireModeDisable& a, VampireModeDisable& b) { a.Swap(&b); }
  inline void Swap(VampireModeDisable* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VampireModeDisable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VampireModeDisable* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<VampireModeDisable>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const VampireModeDisable& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const VampireModeDisable& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.CV.VampireModeDisable"; }

 protected:
  explicit VampireModeDisable(::google::protobuf::Arena* arena);
  VampireModeDisable(::google::protobuf::Arena* arena, const VampireModeDisable& from);
  VampireModeDisable(::google::protobuf::Arena* arena, VampireModeDisable&& from) noexcept
      : VampireModeDisable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.CV.VampireModeDisable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VampireModeDisable& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fcv_2eproto;
};
// -------------------------------------------------------------------

class StopTrack final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.CV.StopTrack) */ {
 public:
  inline StopTrack() : StopTrack(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StopTrack* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StopTrack));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StopTrack(
      ::google::protobuf::internal::ConstantInitialized);

  inline StopTrack(const StopTrack& from) : StopTrack(nullptr, from) {}
  inline StopTrack(StopTrack&& from) noexcept
      : StopTrack(nullptr, std::move(from)) {}
  inline StopTrack& operator=(const StopTrack& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopTrack& operator=(StopTrack&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopTrack& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopTrack* internal_default_instance() {
    return reinterpret_cast<const StopTrack*>(
        &_StopTrack_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(StopTrack& a, StopTrack& b) { a.Swap(&b); }
  inline void Swap(StopTrack* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopTrack* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopTrack* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<StopTrack>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StopTrack& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StopTrack& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.CV.StopTrack"; }

 protected:
  explicit StopTrack(::google::protobuf::Arena* arena);
  StopTrack(::google::protobuf::Arena* arena, const StopTrack& from);
  StopTrack(::google::protobuf::Arena* arena, StopTrack&& from) noexcept
      : StopTrack(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.CV.StopTrack)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StopTrack& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fcv_2eproto;
};
// -------------------------------------------------------------------

class StartTrackNDC final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.CV.StartTrackNDC) */ {
 public:
  inline StartTrackNDC() : StartTrackNDC(nullptr) {}
  ~StartTrackNDC() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StartTrackNDC* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StartTrackNDC));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartTrackNDC(
      ::google::protobuf::internal::ConstantInitialized);

  inline StartTrackNDC(const StartTrackNDC& from) : StartTrackNDC(nullptr, from) {}
  inline StartTrackNDC(StartTrackNDC&& from) noexcept
      : StartTrackNDC(nullptr, std::move(from)) {}
  inline StartTrackNDC& operator=(const StartTrackNDC& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartTrackNDC& operator=(StartTrackNDC&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartTrackNDC& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartTrackNDC* internal_default_instance() {
    return reinterpret_cast<const StartTrackNDC*>(
        &_StartTrackNDC_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(StartTrackNDC& a, StartTrackNDC& b) { a.Swap(&b); }
  inline void Swap(StartTrackNDC* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartTrackNDC* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartTrackNDC* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StartTrackNDC>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StartTrackNDC& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StartTrackNDC& from) { StartTrackNDC::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StartTrackNDC* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.CV.StartTrackNDC"; }

 protected:
  explicit StartTrackNDC(::google::protobuf::Arena* arena);
  StartTrackNDC(::google::protobuf::Arena* arena, const StartTrackNDC& from);
  StartTrackNDC(::google::protobuf::Arena* arena, StartTrackNDC&& from) noexcept
      : StartTrackNDC(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 2,
    kYFieldNumber = 3,
    kFrameTimeFieldNumber = 4,
    kStateTimeFieldNumber = 5,
    kChannelFieldNumber = 1,
  };
  // double x = 2;
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 3;
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // uint64 frame_time = 4;
  void clear_frame_time() ;
  ::uint64_t frame_time() const;
  void set_frame_time(::uint64_t value);

  private:
  ::uint64_t _internal_frame_time() const;
  void _internal_set_frame_time(::uint64_t value);

  public:
  // uint64 state_time = 5;
  void clear_state_time() ;
  ::uint64_t state_time() const;
  void set_state_time(::uint64_t value);

  private:
  ::uint64_t _internal_state_time() const;
  void _internal_set_state_time(::uint64_t value);

  public:
  // .ser.JonGuiDataVideoChannel channel = 1;
  void clear_channel() ;
  ::ser::JonGuiDataVideoChannel channel() const;
  void set_channel(::ser::JonGuiDataVideoChannel value);

  private:
  ::ser::JonGuiDataVideoChannel _internal_channel() const;
  void _internal_set_channel(::ser::JonGuiDataVideoChannel value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.CV.StartTrackNDC)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StartTrackNDC& from_msg);
    double x_;
    double y_;
    ::uint64_t frame_time_;
    ::uint64_t state_time_;
    int channel_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fcv_2eproto;
};
// -------------------------------------------------------------------

class StabilizationModeEnable final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.CV.StabilizationModeEnable) */ {
 public:
  inline StabilizationModeEnable() : StabilizationModeEnable(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StabilizationModeEnable* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StabilizationModeEnable));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StabilizationModeEnable(
      ::google::protobuf::internal::ConstantInitialized);

  inline StabilizationModeEnable(const StabilizationModeEnable& from) : StabilizationModeEnable(nullptr, from) {}
  inline StabilizationModeEnable(StabilizationModeEnable&& from) noexcept
      : StabilizationModeEnable(nullptr, std::move(from)) {}
  inline StabilizationModeEnable& operator=(const StabilizationModeEnable& from) {
    CopyFrom(from);
    return *this;
  }
  inline StabilizationModeEnable& operator=(StabilizationModeEnable&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StabilizationModeEnable& default_instance() {
    return *internal_default_instance();
  }
  static inline const StabilizationModeEnable* internal_default_instance() {
    return reinterpret_cast<const StabilizationModeEnable*>(
        &_StabilizationModeEnable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(StabilizationModeEnable& a, StabilizationModeEnable& b) { a.Swap(&b); }
  inline void Swap(StabilizationModeEnable* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StabilizationModeEnable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StabilizationModeEnable* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<StabilizationModeEnable>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StabilizationModeEnable& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StabilizationModeEnable& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.CV.StabilizationModeEnable"; }

 protected:
  explicit StabilizationModeEnable(::google::protobuf::Arena* arena);
  StabilizationModeEnable(::google::protobuf::Arena* arena, const StabilizationModeEnable& from);
  StabilizationModeEnable(::google::protobuf::Arena* arena, StabilizationModeEnable&& from) noexcept
      : StabilizationModeEnable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.CV.StabilizationModeEnable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StabilizationModeEnable& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fcv_2eproto;
};
// -------------------------------------------------------------------

class StabilizationModeDisable final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.CV.StabilizationModeDisable) */ {
 public:
  inline StabilizationModeDisable() : StabilizationModeDisable(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StabilizationModeDisable* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StabilizationModeDisable));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StabilizationModeDisable(
      ::google::protobuf::internal::ConstantInitialized);

  inline StabilizationModeDisable(const StabilizationModeDisable& from) : StabilizationModeDisable(nullptr, from) {}
  inline StabilizationModeDisable(StabilizationModeDisable&& from) noexcept
      : StabilizationModeDisable(nullptr, std::move(from)) {}
  inline StabilizationModeDisable& operator=(const StabilizationModeDisable& from) {
    CopyFrom(from);
    return *this;
  }
  inline StabilizationModeDisable& operator=(StabilizationModeDisable&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StabilizationModeDisable& default_instance() {
    return *internal_default_instance();
  }
  static inline const StabilizationModeDisable* internal_default_instance() {
    return reinterpret_cast<const StabilizationModeDisable*>(
        &_StabilizationModeDisable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(StabilizationModeDisable& a, StabilizationModeDisable& b) { a.Swap(&b); }
  inline void Swap(StabilizationModeDisable* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StabilizationModeDisable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StabilizationModeDisable* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<StabilizationModeDisable>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StabilizationModeDisable& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StabilizationModeDisable& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.CV.StabilizationModeDisable"; }

 protected:
  explicit StabilizationModeDisable(::google::protobuf::Arena* arena);
  StabilizationModeDisable(::google::protobuf::Arena* arena, const StabilizationModeDisable& from);
  StabilizationModeDisable(::google::protobuf::Arena* arena, StabilizationModeDisable&& from) noexcept
      : StabilizationModeDisable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.CV.StabilizationModeDisable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StabilizationModeDisable& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fcv_2eproto;
};
// -------------------------------------------------------------------

class SetAutoFocus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.CV.SetAutoFocus) */ {
 public:
  inline SetAutoFocus() : SetAutoFocus(nullptr) {}
  ~SetAutoFocus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetAutoFocus* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetAutoFocus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetAutoFocus(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetAutoFocus(const SetAutoFocus& from) : SetAutoFocus(nullptr, from) {}
  inline SetAutoFocus(SetAutoFocus&& from) noexcept
      : SetAutoFocus(nullptr, std::move(from)) {}
  inline SetAutoFocus& operator=(const SetAutoFocus& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetAutoFocus& operator=(SetAutoFocus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetAutoFocus& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetAutoFocus* internal_default_instance() {
    return reinterpret_cast<const SetAutoFocus*>(
        &_SetAutoFocus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(SetAutoFocus& a, SetAutoFocus& b) { a.Swap(&b); }
  inline void Swap(SetAutoFocus* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetAutoFocus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetAutoFocus* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetAutoFocus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetAutoFocus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetAutoFocus& from) { SetAutoFocus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetAutoFocus* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.CV.SetAutoFocus"; }

 protected:
  explicit SetAutoFocus(::google::protobuf::Arena* arena);
  SetAutoFocus(::google::protobuf::Arena* arena, const SetAutoFocus& from);
  SetAutoFocus(::google::protobuf::Arena* arena, SetAutoFocus&& from) noexcept
      : SetAutoFocus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // .ser.JonGuiDataVideoChannel channel = 1;
  void clear_channel() ;
  ::ser::JonGuiDataVideoChannel channel() const;
  void set_channel(::ser::JonGuiDataVideoChannel value);

  private:
  ::ser::JonGuiDataVideoChannel _internal_channel() const;
  void _internal_set_channel(::ser::JonGuiDataVideoChannel value);

  public:
  // bool value = 2;
  void clear_value() ;
  bool value() const;
  void set_value(bool value);

  private:
  bool _internal_value() const;
  void _internal_set_value(bool value);

  public:
  // @@protoc_insertion_point(class_scope:cmd.CV.SetAutoFocus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetAutoFocus& from_msg);
    int channel_;
    bool value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fcv_2eproto;
};
// -------------------------------------------------------------------

class RecognitionModeEnable final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.CV.RecognitionModeEnable) */ {
 public:
  inline RecognitionModeEnable() : RecognitionModeEnable(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RecognitionModeEnable* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RecognitionModeEnable));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RecognitionModeEnable(
      ::google::protobuf::internal::ConstantInitialized);

  inline RecognitionModeEnable(const RecognitionModeEnable& from) : RecognitionModeEnable(nullptr, from) {}
  inline RecognitionModeEnable(RecognitionModeEnable&& from) noexcept
      : RecognitionModeEnable(nullptr, std::move(from)) {}
  inline RecognitionModeEnable& operator=(const RecognitionModeEnable& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecognitionModeEnable& operator=(RecognitionModeEnable&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RecognitionModeEnable& default_instance() {
    return *internal_default_instance();
  }
  static inline const RecognitionModeEnable* internal_default_instance() {
    return reinterpret_cast<const RecognitionModeEnable*>(
        &_RecognitionModeEnable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(RecognitionModeEnable& a, RecognitionModeEnable& b) { a.Swap(&b); }
  inline void Swap(RecognitionModeEnable* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecognitionModeEnable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RecognitionModeEnable* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<RecognitionModeEnable>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RecognitionModeEnable& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RecognitionModeEnable& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.CV.RecognitionModeEnable"; }

 protected:
  explicit RecognitionModeEnable(::google::protobuf::Arena* arena);
  RecognitionModeEnable(::google::protobuf::Arena* arena, const RecognitionModeEnable& from);
  RecognitionModeEnable(::google::protobuf::Arena* arena, RecognitionModeEnable&& from) noexcept
      : RecognitionModeEnable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.CV.RecognitionModeEnable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RecognitionModeEnable& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fcv_2eproto;
};
// -------------------------------------------------------------------

class RecognitionModeDisable final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.CV.RecognitionModeDisable) */ {
 public:
  inline RecognitionModeDisable() : RecognitionModeDisable(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RecognitionModeDisable* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RecognitionModeDisable));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RecognitionModeDisable(
      ::google::protobuf::internal::ConstantInitialized);

  inline RecognitionModeDisable(const RecognitionModeDisable& from) : RecognitionModeDisable(nullptr, from) {}
  inline RecognitionModeDisable(RecognitionModeDisable&& from) noexcept
      : RecognitionModeDisable(nullptr, std::move(from)) {}
  inline RecognitionModeDisable& operator=(const RecognitionModeDisable& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecognitionModeDisable& operator=(RecognitionModeDisable&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RecognitionModeDisable& default_instance() {
    return *internal_default_instance();
  }
  static inline const RecognitionModeDisable* internal_default_instance() {
    return reinterpret_cast<const RecognitionModeDisable*>(
        &_RecognitionModeDisable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(RecognitionModeDisable& a, RecognitionModeDisable& b) { a.Swap(&b); }
  inline void Swap(RecognitionModeDisable* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecognitionModeDisable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RecognitionModeDisable* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<RecognitionModeDisable>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RecognitionModeDisable& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RecognitionModeDisable& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.CV.RecognitionModeDisable"; }

 protected:
  explicit RecognitionModeDisable(::google::protobuf::Arena* arena);
  RecognitionModeDisable(::google::protobuf::Arena* arena, const RecognitionModeDisable& from);
  RecognitionModeDisable(::google::protobuf::Arena* arena, RecognitionModeDisable&& from) noexcept
      : RecognitionModeDisable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.CV.RecognitionModeDisable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RecognitionModeDisable& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fcv_2eproto;
};
// -------------------------------------------------------------------

class DumpStop final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.CV.DumpStop) */ {
 public:
  inline DumpStop() : DumpStop(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DumpStop* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DumpStop));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DumpStop(
      ::google::protobuf::internal::ConstantInitialized);

  inline DumpStop(const DumpStop& from) : DumpStop(nullptr, from) {}
  inline DumpStop(DumpStop&& from) noexcept
      : DumpStop(nullptr, std::move(from)) {}
  inline DumpStop& operator=(const DumpStop& from) {
    CopyFrom(from);
    return *this;
  }
  inline DumpStop& operator=(DumpStop&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DumpStop& default_instance() {
    return *internal_default_instance();
  }
  static inline const DumpStop* internal_default_instance() {
    return reinterpret_cast<const DumpStop*>(
        &_DumpStop_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(DumpStop& a, DumpStop& b) { a.Swap(&b); }
  inline void Swap(DumpStop* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DumpStop* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DumpStop* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DumpStop>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DumpStop& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DumpStop& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.CV.DumpStop"; }

 protected:
  explicit DumpStop(::google::protobuf::Arena* arena);
  DumpStop(::google::protobuf::Arena* arena, const DumpStop& from);
  DumpStop(::google::protobuf::Arena* arena, DumpStop&& from) noexcept
      : DumpStop(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.CV.DumpStop)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DumpStop& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fcv_2eproto;
};
// -------------------------------------------------------------------

class DumpStart final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cmd.CV.DumpStart) */ {
 public:
  inline DumpStart() : DumpStart(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DumpStart* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DumpStart));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DumpStart(
      ::google::protobuf::internal::ConstantInitialized);

  inline DumpStart(const DumpStart& from) : DumpStart(nullptr, from) {}
  inline DumpStart(DumpStart&& from) noexcept
      : DumpStart(nullptr, std::move(from)) {}
  inline DumpStart& operator=(const DumpStart& from) {
    CopyFrom(from);
    return *this;
  }
  inline DumpStart& operator=(DumpStart&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DumpStart& default_instance() {
    return *internal_default_instance();
  }
  static inline const DumpStart* internal_default_instance() {
    return reinterpret_cast<const DumpStart*>(
        &_DumpStart_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(DumpStart& a, DumpStart& b) { a.Swap(&b); }
  inline void Swap(DumpStart* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DumpStart* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DumpStart* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DumpStart>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DumpStart& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DumpStart& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.CV.DumpStart"; }

 protected:
  explicit DumpStart(::google::protobuf::Arena* arena);
  DumpStart(::google::protobuf::Arena* arena, const DumpStart& from);
  DumpStart(::google::protobuf::Arena* arena, DumpStart&& from) noexcept
      : DumpStart(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cmd.CV.DumpStart)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DumpStart& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fcv_2eproto;
};
// -------------------------------------------------------------------

class Root final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cmd.CV.Root) */ {
 public:
  inline Root() : Root(nullptr) {}
  ~Root() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Root* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Root));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Root(
      ::google::protobuf::internal::ConstantInitialized);

  inline Root(const Root& from) : Root(nullptr, from) {}
  inline Root(Root&& from) noexcept
      : Root(nullptr, std::move(from)) {}
  inline Root& operator=(const Root& from) {
    CopyFrom(from);
    return *this;
  }
  inline Root& operator=(Root&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Root& default_instance() {
    return *internal_default_instance();
  }
  enum CmdCase {
    kSetAutoFocus = 1,
    kStartTrackNdc = 2,
    kStopTrack = 3,
    kVampireModeEnable = 4,
    kVampireModeDisable = 5,
    kStabilizationModeEnable = 6,
    kStabilizationModeDisable = 7,
    kDumpStart = 8,
    kDumpStop = 9,
    kRecognitionModeEnable = 10,
    kRecognitionModeDisable = 11,
    CMD_NOT_SET = 0,
  };
  static inline const Root* internal_default_instance() {
    return reinterpret_cast<const Root*>(
        &_Root_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Root& a, Root& b) { a.Swap(&b); }
  inline void Swap(Root* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Root* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Root* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Root>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Root& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Root& from) { Root::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Root* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cmd.CV.Root"; }

 protected:
  explicit Root(::google::protobuf::Arena* arena);
  Root(::google::protobuf::Arena* arena, const Root& from);
  Root(::google::protobuf::Arena* arena, Root&& from) noexcept
      : Root(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSetAutoFocusFieldNumber = 1,
    kStartTrackNdcFieldNumber = 2,
    kStopTrackFieldNumber = 3,
    kVampireModeEnableFieldNumber = 4,
    kVampireModeDisableFieldNumber = 5,
    kStabilizationModeEnableFieldNumber = 6,
    kStabilizationModeDisableFieldNumber = 7,
    kDumpStartFieldNumber = 8,
    kDumpStopFieldNumber = 9,
    kRecognitionModeEnableFieldNumber = 10,
    kRecognitionModeDisableFieldNumber = 11,
  };
  // .cmd.CV.SetAutoFocus set_auto_focus = 1;
  bool has_set_auto_focus() const;
  private:
  bool _internal_has_set_auto_focus() const;

  public:
  void clear_set_auto_focus() ;
  const ::cmd::CV::SetAutoFocus& set_auto_focus() const;
  PROTOBUF_NODISCARD ::cmd::CV::SetAutoFocus* release_set_auto_focus();
  ::cmd::CV::SetAutoFocus* mutable_set_auto_focus();
  void set_allocated_set_auto_focus(::cmd::CV::SetAutoFocus* value);
  void unsafe_arena_set_allocated_set_auto_focus(::cmd::CV::SetAutoFocus* value);
  ::cmd::CV::SetAutoFocus* unsafe_arena_release_set_auto_focus();

  private:
  const ::cmd::CV::SetAutoFocus& _internal_set_auto_focus() const;
  ::cmd::CV::SetAutoFocus* _internal_mutable_set_auto_focus();

  public:
  // .cmd.CV.StartTrackNDC start_track_ndc = 2;
  bool has_start_track_ndc() const;
  private:
  bool _internal_has_start_track_ndc() const;

  public:
  void clear_start_track_ndc() ;
  const ::cmd::CV::StartTrackNDC& start_track_ndc() const;
  PROTOBUF_NODISCARD ::cmd::CV::StartTrackNDC* release_start_track_ndc();
  ::cmd::CV::StartTrackNDC* mutable_start_track_ndc();
  void set_allocated_start_track_ndc(::cmd::CV::StartTrackNDC* value);
  void unsafe_arena_set_allocated_start_track_ndc(::cmd::CV::StartTrackNDC* value);
  ::cmd::CV::StartTrackNDC* unsafe_arena_release_start_track_ndc();

  private:
  const ::cmd::CV::StartTrackNDC& _internal_start_track_ndc() const;
  ::cmd::CV::StartTrackNDC* _internal_mutable_start_track_ndc();

  public:
  // .cmd.CV.StopTrack stop_track = 3;
  bool has_stop_track() const;
  private:
  bool _internal_has_stop_track() const;

  public:
  void clear_stop_track() ;
  const ::cmd::CV::StopTrack& stop_track() const;
  PROTOBUF_NODISCARD ::cmd::CV::StopTrack* release_stop_track();
  ::cmd::CV::StopTrack* mutable_stop_track();
  void set_allocated_stop_track(::cmd::CV::StopTrack* value);
  void unsafe_arena_set_allocated_stop_track(::cmd::CV::StopTrack* value);
  ::cmd::CV::StopTrack* unsafe_arena_release_stop_track();

  private:
  const ::cmd::CV::StopTrack& _internal_stop_track() const;
  ::cmd::CV::StopTrack* _internal_mutable_stop_track();

  public:
  // .cmd.CV.VampireModeEnable vampire_mode_enable = 4;
  bool has_vampire_mode_enable() const;
  private:
  bool _internal_has_vampire_mode_enable() const;

  public:
  void clear_vampire_mode_enable() ;
  const ::cmd::CV::VampireModeEnable& vampire_mode_enable() const;
  PROTOBUF_NODISCARD ::cmd::CV::VampireModeEnable* release_vampire_mode_enable();
  ::cmd::CV::VampireModeEnable* mutable_vampire_mode_enable();
  void set_allocated_vampire_mode_enable(::cmd::CV::VampireModeEnable* value);
  void unsafe_arena_set_allocated_vampire_mode_enable(::cmd::CV::VampireModeEnable* value);
  ::cmd::CV::VampireModeEnable* unsafe_arena_release_vampire_mode_enable();

  private:
  const ::cmd::CV::VampireModeEnable& _internal_vampire_mode_enable() const;
  ::cmd::CV::VampireModeEnable* _internal_mutable_vampire_mode_enable();

  public:
  // .cmd.CV.VampireModeDisable vampire_mode_disable = 5;
  bool has_vampire_mode_disable() const;
  private:
  bool _internal_has_vampire_mode_disable() const;

  public:
  void clear_vampire_mode_disable() ;
  const ::cmd::CV::VampireModeDisable& vampire_mode_disable() const;
  PROTOBUF_NODISCARD ::cmd::CV::VampireModeDisable* release_vampire_mode_disable();
  ::cmd::CV::VampireModeDisable* mutable_vampire_mode_disable();
  void set_allocated_vampire_mode_disable(::cmd::CV::VampireModeDisable* value);
  void unsafe_arena_set_allocated_vampire_mode_disable(::cmd::CV::VampireModeDisable* value);
  ::cmd::CV::VampireModeDisable* unsafe_arena_release_vampire_mode_disable();

  private:
  const ::cmd::CV::VampireModeDisable& _internal_vampire_mode_disable() const;
  ::cmd::CV::VampireModeDisable* _internal_mutable_vampire_mode_disable();

  public:
  // .cmd.CV.StabilizationModeEnable stabilization_mode_enable = 6;
  bool has_stabilization_mode_enable() const;
  private:
  bool _internal_has_stabilization_mode_enable() const;

  public:
  void clear_stabilization_mode_enable() ;
  const ::cmd::CV::StabilizationModeEnable& stabilization_mode_enable() const;
  PROTOBUF_NODISCARD ::cmd::CV::StabilizationModeEnable* release_stabilization_mode_enable();
  ::cmd::CV::StabilizationModeEnable* mutable_stabilization_mode_enable();
  void set_allocated_stabilization_mode_enable(::cmd::CV::StabilizationModeEnable* value);
  void unsafe_arena_set_allocated_stabilization_mode_enable(::cmd::CV::StabilizationModeEnable* value);
  ::cmd::CV::StabilizationModeEnable* unsafe_arena_release_stabilization_mode_enable();

  private:
  const ::cmd::CV::StabilizationModeEnable& _internal_stabilization_mode_enable() const;
  ::cmd::CV::StabilizationModeEnable* _internal_mutable_stabilization_mode_enable();

  public:
  // .cmd.CV.StabilizationModeDisable stabilization_mode_disable = 7;
  bool has_stabilization_mode_disable() const;
  private:
  bool _internal_has_stabilization_mode_disable() const;

  public:
  void clear_stabilization_mode_disable() ;
  const ::cmd::CV::StabilizationModeDisable& stabilization_mode_disable() const;
  PROTOBUF_NODISCARD ::cmd::CV::StabilizationModeDisable* release_stabilization_mode_disable();
  ::cmd::CV::StabilizationModeDisable* mutable_stabilization_mode_disable();
  void set_allocated_stabilization_mode_disable(::cmd::CV::StabilizationModeDisable* value);
  void unsafe_arena_set_allocated_stabilization_mode_disable(::cmd::CV::StabilizationModeDisable* value);
  ::cmd::CV::StabilizationModeDisable* unsafe_arena_release_stabilization_mode_disable();

  private:
  const ::cmd::CV::StabilizationModeDisable& _internal_stabilization_mode_disable() const;
  ::cmd::CV::StabilizationModeDisable* _internal_mutable_stabilization_mode_disable();

  public:
  // .cmd.CV.DumpStart dump_start = 8;
  bool has_dump_start() const;
  private:
  bool _internal_has_dump_start() const;

  public:
  void clear_dump_start() ;
  const ::cmd::CV::DumpStart& dump_start() const;
  PROTOBUF_NODISCARD ::cmd::CV::DumpStart* release_dump_start();
  ::cmd::CV::DumpStart* mutable_dump_start();
  void set_allocated_dump_start(::cmd::CV::DumpStart* value);
  void unsafe_arena_set_allocated_dump_start(::cmd::CV::DumpStart* value);
  ::cmd::CV::DumpStart* unsafe_arena_release_dump_start();

  private:
  const ::cmd::CV::DumpStart& _internal_dump_start() const;
  ::cmd::CV::DumpStart* _internal_mutable_dump_start();

  public:
  // .cmd.CV.DumpStop dump_stop = 9;
  bool has_dump_stop() const;
  private:
  bool _internal_has_dump_stop() const;

  public:
  void clear_dump_stop() ;
  const ::cmd::CV::DumpStop& dump_stop() const;
  PROTOBUF_NODISCARD ::cmd::CV::DumpStop* release_dump_stop();
  ::cmd::CV::DumpStop* mutable_dump_stop();
  void set_allocated_dump_stop(::cmd::CV::DumpStop* value);
  void unsafe_arena_set_allocated_dump_stop(::cmd::CV::DumpStop* value);
  ::cmd::CV::DumpStop* unsafe_arena_release_dump_stop();

  private:
  const ::cmd::CV::DumpStop& _internal_dump_stop() const;
  ::cmd::CV::DumpStop* _internal_mutable_dump_stop();

  public:
  // .cmd.CV.RecognitionModeEnable recognition_mode_enable = 10;
  bool has_recognition_mode_enable() const;
  private:
  bool _internal_has_recognition_mode_enable() const;

  public:
  void clear_recognition_mode_enable() ;
  const ::cmd::CV::RecognitionModeEnable& recognition_mode_enable() const;
  PROTOBUF_NODISCARD ::cmd::CV::RecognitionModeEnable* release_recognition_mode_enable();
  ::cmd::CV::RecognitionModeEnable* mutable_recognition_mode_enable();
  void set_allocated_recognition_mode_enable(::cmd::CV::RecognitionModeEnable* value);
  void unsafe_arena_set_allocated_recognition_mode_enable(::cmd::CV::RecognitionModeEnable* value);
  ::cmd::CV::RecognitionModeEnable* unsafe_arena_release_recognition_mode_enable();

  private:
  const ::cmd::CV::RecognitionModeEnable& _internal_recognition_mode_enable() const;
  ::cmd::CV::RecognitionModeEnable* _internal_mutable_recognition_mode_enable();

  public:
  // .cmd.CV.RecognitionModeDisable recognition_mode_disable = 11;
  bool has_recognition_mode_disable() const;
  private:
  bool _internal_has_recognition_mode_disable() const;

  public:
  void clear_recognition_mode_disable() ;
  const ::cmd::CV::RecognitionModeDisable& recognition_mode_disable() const;
  PROTOBUF_NODISCARD ::cmd::CV::RecognitionModeDisable* release_recognition_mode_disable();
  ::cmd::CV::RecognitionModeDisable* mutable_recognition_mode_disable();
  void set_allocated_recognition_mode_disable(::cmd::CV::RecognitionModeDisable* value);
  void unsafe_arena_set_allocated_recognition_mode_disable(::cmd::CV::RecognitionModeDisable* value);
  ::cmd::CV::RecognitionModeDisable* unsafe_arena_release_recognition_mode_disable();

  private:
  const ::cmd::CV::RecognitionModeDisable& _internal_recognition_mode_disable() const;
  ::cmd::CV::RecognitionModeDisable* _internal_mutable_recognition_mode_disable();

  public:
  void clear_cmd();
  CmdCase cmd_case() const;
  // @@protoc_insertion_point(class_scope:cmd.CV.Root)
 private:
  class _Internal;
  void set_has_set_auto_focus();
  void set_has_start_track_ndc();
  void set_has_stop_track();
  void set_has_vampire_mode_enable();
  void set_has_vampire_mode_disable();
  void set_has_stabilization_mode_enable();
  void set_has_stabilization_mode_disable();
  void set_has_dump_start();
  void set_has_dump_stop();
  void set_has_recognition_mode_enable();
  void set_has_recognition_mode_disable();
  inline bool has_cmd() const;
  inline void clear_has_cmd();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 11, 11,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Root& from_msg);
    union CmdUnion {
      constexpr CmdUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::cmd::CV::SetAutoFocus* set_auto_focus_;
      ::cmd::CV::StartTrackNDC* start_track_ndc_;
      ::cmd::CV::StopTrack* stop_track_;
      ::cmd::CV::VampireModeEnable* vampire_mode_enable_;
      ::cmd::CV::VampireModeDisable* vampire_mode_disable_;
      ::cmd::CV::StabilizationModeEnable* stabilization_mode_enable_;
      ::cmd::CV::StabilizationModeDisable* stabilization_mode_disable_;
      ::cmd::CV::DumpStart* dump_start_;
      ::cmd::CV::DumpStop* dump_stop_;
      ::cmd::CV::RecognitionModeEnable* recognition_mode_enable_;
      ::cmd::CV::RecognitionModeDisable* recognition_mode_disable_;
    } cmd_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_jon_5fshared_5fcmd_5fcv_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Root

// .cmd.CV.SetAutoFocus set_auto_focus = 1;
inline bool Root::has_set_auto_focus() const {
  return cmd_case() == kSetAutoFocus;
}
inline bool Root::_internal_has_set_auto_focus() const {
  return cmd_case() == kSetAutoFocus;
}
inline void Root::set_has_set_auto_focus() {
  _impl_._oneof_case_[0] = kSetAutoFocus;
}
inline void Root::clear_set_auto_focus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kSetAutoFocus) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.set_auto_focus_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.set_auto_focus_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::CV::SetAutoFocus* Root::release_set_auto_focus() {
  // @@protoc_insertion_point(field_release:cmd.CV.Root.set_auto_focus)
  if (cmd_case() == kSetAutoFocus) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_auto_focus_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.set_auto_focus_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::CV::SetAutoFocus& Root::_internal_set_auto_focus() const {
  return cmd_case() == kSetAutoFocus ? *_impl_.cmd_.set_auto_focus_ : reinterpret_cast<::cmd::CV::SetAutoFocus&>(::cmd::CV::_SetAutoFocus_default_instance_);
}
inline const ::cmd::CV::SetAutoFocus& Root::set_auto_focus() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.CV.Root.set_auto_focus)
  return _internal_set_auto_focus();
}
inline ::cmd::CV::SetAutoFocus* Root::unsafe_arena_release_set_auto_focus() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.CV.Root.set_auto_focus)
  if (cmd_case() == kSetAutoFocus) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.set_auto_focus_;
    _impl_.cmd_.set_auto_focus_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_set_auto_focus(::cmd::CV::SetAutoFocus* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_set_auto_focus();
    _impl_.cmd_.set_auto_focus_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.CV.Root.set_auto_focus)
}
inline ::cmd::CV::SetAutoFocus* Root::_internal_mutable_set_auto_focus() {
  if (cmd_case() != kSetAutoFocus) {
    clear_cmd();
    set_has_set_auto_focus();
    _impl_.cmd_.set_auto_focus_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::CV::SetAutoFocus>(GetArena());
  }
  return _impl_.cmd_.set_auto_focus_;
}
inline ::cmd::CV::SetAutoFocus* Root::mutable_set_auto_focus() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::CV::SetAutoFocus* _msg = _internal_mutable_set_auto_focus();
  // @@protoc_insertion_point(field_mutable:cmd.CV.Root.set_auto_focus)
  return _msg;
}

// .cmd.CV.StartTrackNDC start_track_ndc = 2;
inline bool Root::has_start_track_ndc() const {
  return cmd_case() == kStartTrackNdc;
}
inline bool Root::_internal_has_start_track_ndc() const {
  return cmd_case() == kStartTrackNdc;
}
inline void Root::set_has_start_track_ndc() {
  _impl_._oneof_case_[0] = kStartTrackNdc;
}
inline void Root::clear_start_track_ndc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStartTrackNdc) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.start_track_ndc_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.start_track_ndc_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::CV::StartTrackNDC* Root::release_start_track_ndc() {
  // @@protoc_insertion_point(field_release:cmd.CV.Root.start_track_ndc)
  if (cmd_case() == kStartTrackNdc) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.start_track_ndc_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.start_track_ndc_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::CV::StartTrackNDC& Root::_internal_start_track_ndc() const {
  return cmd_case() == kStartTrackNdc ? *_impl_.cmd_.start_track_ndc_ : reinterpret_cast<::cmd::CV::StartTrackNDC&>(::cmd::CV::_StartTrackNDC_default_instance_);
}
inline const ::cmd::CV::StartTrackNDC& Root::start_track_ndc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.CV.Root.start_track_ndc)
  return _internal_start_track_ndc();
}
inline ::cmd::CV::StartTrackNDC* Root::unsafe_arena_release_start_track_ndc() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.CV.Root.start_track_ndc)
  if (cmd_case() == kStartTrackNdc) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.start_track_ndc_;
    _impl_.cmd_.start_track_ndc_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_start_track_ndc(::cmd::CV::StartTrackNDC* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_start_track_ndc();
    _impl_.cmd_.start_track_ndc_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.CV.Root.start_track_ndc)
}
inline ::cmd::CV::StartTrackNDC* Root::_internal_mutable_start_track_ndc() {
  if (cmd_case() != kStartTrackNdc) {
    clear_cmd();
    set_has_start_track_ndc();
    _impl_.cmd_.start_track_ndc_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::CV::StartTrackNDC>(GetArena());
  }
  return _impl_.cmd_.start_track_ndc_;
}
inline ::cmd::CV::StartTrackNDC* Root::mutable_start_track_ndc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::CV::StartTrackNDC* _msg = _internal_mutable_start_track_ndc();
  // @@protoc_insertion_point(field_mutable:cmd.CV.Root.start_track_ndc)
  return _msg;
}

// .cmd.CV.StopTrack stop_track = 3;
inline bool Root::has_stop_track() const {
  return cmd_case() == kStopTrack;
}
inline bool Root::_internal_has_stop_track() const {
  return cmd_case() == kStopTrack;
}
inline void Root::set_has_stop_track() {
  _impl_._oneof_case_[0] = kStopTrack;
}
inline void Root::clear_stop_track() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStopTrack) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.stop_track_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.stop_track_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::CV::StopTrack* Root::release_stop_track() {
  // @@protoc_insertion_point(field_release:cmd.CV.Root.stop_track)
  if (cmd_case() == kStopTrack) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.stop_track_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.stop_track_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::CV::StopTrack& Root::_internal_stop_track() const {
  return cmd_case() == kStopTrack ? *_impl_.cmd_.stop_track_ : reinterpret_cast<::cmd::CV::StopTrack&>(::cmd::CV::_StopTrack_default_instance_);
}
inline const ::cmd::CV::StopTrack& Root::stop_track() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.CV.Root.stop_track)
  return _internal_stop_track();
}
inline ::cmd::CV::StopTrack* Root::unsafe_arena_release_stop_track() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.CV.Root.stop_track)
  if (cmd_case() == kStopTrack) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.stop_track_;
    _impl_.cmd_.stop_track_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_stop_track(::cmd::CV::StopTrack* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_stop_track();
    _impl_.cmd_.stop_track_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.CV.Root.stop_track)
}
inline ::cmd::CV::StopTrack* Root::_internal_mutable_stop_track() {
  if (cmd_case() != kStopTrack) {
    clear_cmd();
    set_has_stop_track();
    _impl_.cmd_.stop_track_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::CV::StopTrack>(GetArena());
  }
  return _impl_.cmd_.stop_track_;
}
inline ::cmd::CV::StopTrack* Root::mutable_stop_track() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::CV::StopTrack* _msg = _internal_mutable_stop_track();
  // @@protoc_insertion_point(field_mutable:cmd.CV.Root.stop_track)
  return _msg;
}

// .cmd.CV.VampireModeEnable vampire_mode_enable = 4;
inline bool Root::has_vampire_mode_enable() const {
  return cmd_case() == kVampireModeEnable;
}
inline bool Root::_internal_has_vampire_mode_enable() const {
  return cmd_case() == kVampireModeEnable;
}
inline void Root::set_has_vampire_mode_enable() {
  _impl_._oneof_case_[0] = kVampireModeEnable;
}
inline void Root::clear_vampire_mode_enable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kVampireModeEnable) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.vampire_mode_enable_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.vampire_mode_enable_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::CV::VampireModeEnable* Root::release_vampire_mode_enable() {
  // @@protoc_insertion_point(field_release:cmd.CV.Root.vampire_mode_enable)
  if (cmd_case() == kVampireModeEnable) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.vampire_mode_enable_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.vampire_mode_enable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::CV::VampireModeEnable& Root::_internal_vampire_mode_enable() const {
  return cmd_case() == kVampireModeEnable ? *_impl_.cmd_.vampire_mode_enable_ : reinterpret_cast<::cmd::CV::VampireModeEnable&>(::cmd::CV::_VampireModeEnable_default_instance_);
}
inline const ::cmd::CV::VampireModeEnable& Root::vampire_mode_enable() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.CV.Root.vampire_mode_enable)
  return _internal_vampire_mode_enable();
}
inline ::cmd::CV::VampireModeEnable* Root::unsafe_arena_release_vampire_mode_enable() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.CV.Root.vampire_mode_enable)
  if (cmd_case() == kVampireModeEnable) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.vampire_mode_enable_;
    _impl_.cmd_.vampire_mode_enable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_vampire_mode_enable(::cmd::CV::VampireModeEnable* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_vampire_mode_enable();
    _impl_.cmd_.vampire_mode_enable_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.CV.Root.vampire_mode_enable)
}
inline ::cmd::CV::VampireModeEnable* Root::_internal_mutable_vampire_mode_enable() {
  if (cmd_case() != kVampireModeEnable) {
    clear_cmd();
    set_has_vampire_mode_enable();
    _impl_.cmd_.vampire_mode_enable_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::CV::VampireModeEnable>(GetArena());
  }
  return _impl_.cmd_.vampire_mode_enable_;
}
inline ::cmd::CV::VampireModeEnable* Root::mutable_vampire_mode_enable() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::CV::VampireModeEnable* _msg = _internal_mutable_vampire_mode_enable();
  // @@protoc_insertion_point(field_mutable:cmd.CV.Root.vampire_mode_enable)
  return _msg;
}

// .cmd.CV.VampireModeDisable vampire_mode_disable = 5;
inline bool Root::has_vampire_mode_disable() const {
  return cmd_case() == kVampireModeDisable;
}
inline bool Root::_internal_has_vampire_mode_disable() const {
  return cmd_case() == kVampireModeDisable;
}
inline void Root::set_has_vampire_mode_disable() {
  _impl_._oneof_case_[0] = kVampireModeDisable;
}
inline void Root::clear_vampire_mode_disable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kVampireModeDisable) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.vampire_mode_disable_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.vampire_mode_disable_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::CV::VampireModeDisable* Root::release_vampire_mode_disable() {
  // @@protoc_insertion_point(field_release:cmd.CV.Root.vampire_mode_disable)
  if (cmd_case() == kVampireModeDisable) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.vampire_mode_disable_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.vampire_mode_disable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::CV::VampireModeDisable& Root::_internal_vampire_mode_disable() const {
  return cmd_case() == kVampireModeDisable ? *_impl_.cmd_.vampire_mode_disable_ : reinterpret_cast<::cmd::CV::VampireModeDisable&>(::cmd::CV::_VampireModeDisable_default_instance_);
}
inline const ::cmd::CV::VampireModeDisable& Root::vampire_mode_disable() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.CV.Root.vampire_mode_disable)
  return _internal_vampire_mode_disable();
}
inline ::cmd::CV::VampireModeDisable* Root::unsafe_arena_release_vampire_mode_disable() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.CV.Root.vampire_mode_disable)
  if (cmd_case() == kVampireModeDisable) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.vampire_mode_disable_;
    _impl_.cmd_.vampire_mode_disable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_vampire_mode_disable(::cmd::CV::VampireModeDisable* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_vampire_mode_disable();
    _impl_.cmd_.vampire_mode_disable_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.CV.Root.vampire_mode_disable)
}
inline ::cmd::CV::VampireModeDisable* Root::_internal_mutable_vampire_mode_disable() {
  if (cmd_case() != kVampireModeDisable) {
    clear_cmd();
    set_has_vampire_mode_disable();
    _impl_.cmd_.vampire_mode_disable_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::CV::VampireModeDisable>(GetArena());
  }
  return _impl_.cmd_.vampire_mode_disable_;
}
inline ::cmd::CV::VampireModeDisable* Root::mutable_vampire_mode_disable() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::CV::VampireModeDisable* _msg = _internal_mutable_vampire_mode_disable();
  // @@protoc_insertion_point(field_mutable:cmd.CV.Root.vampire_mode_disable)
  return _msg;
}

// .cmd.CV.StabilizationModeEnable stabilization_mode_enable = 6;
inline bool Root::has_stabilization_mode_enable() const {
  return cmd_case() == kStabilizationModeEnable;
}
inline bool Root::_internal_has_stabilization_mode_enable() const {
  return cmd_case() == kStabilizationModeEnable;
}
inline void Root::set_has_stabilization_mode_enable() {
  _impl_._oneof_case_[0] = kStabilizationModeEnable;
}
inline void Root::clear_stabilization_mode_enable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStabilizationModeEnable) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.stabilization_mode_enable_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.stabilization_mode_enable_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::CV::StabilizationModeEnable* Root::release_stabilization_mode_enable() {
  // @@protoc_insertion_point(field_release:cmd.CV.Root.stabilization_mode_enable)
  if (cmd_case() == kStabilizationModeEnable) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.stabilization_mode_enable_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.stabilization_mode_enable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::CV::StabilizationModeEnable& Root::_internal_stabilization_mode_enable() const {
  return cmd_case() == kStabilizationModeEnable ? *_impl_.cmd_.stabilization_mode_enable_ : reinterpret_cast<::cmd::CV::StabilizationModeEnable&>(::cmd::CV::_StabilizationModeEnable_default_instance_);
}
inline const ::cmd::CV::StabilizationModeEnable& Root::stabilization_mode_enable() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.CV.Root.stabilization_mode_enable)
  return _internal_stabilization_mode_enable();
}
inline ::cmd::CV::StabilizationModeEnable* Root::unsafe_arena_release_stabilization_mode_enable() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.CV.Root.stabilization_mode_enable)
  if (cmd_case() == kStabilizationModeEnable) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.stabilization_mode_enable_;
    _impl_.cmd_.stabilization_mode_enable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_stabilization_mode_enable(::cmd::CV::StabilizationModeEnable* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_stabilization_mode_enable();
    _impl_.cmd_.stabilization_mode_enable_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.CV.Root.stabilization_mode_enable)
}
inline ::cmd::CV::StabilizationModeEnable* Root::_internal_mutable_stabilization_mode_enable() {
  if (cmd_case() != kStabilizationModeEnable) {
    clear_cmd();
    set_has_stabilization_mode_enable();
    _impl_.cmd_.stabilization_mode_enable_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::CV::StabilizationModeEnable>(GetArena());
  }
  return _impl_.cmd_.stabilization_mode_enable_;
}
inline ::cmd::CV::StabilizationModeEnable* Root::mutable_stabilization_mode_enable() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::CV::StabilizationModeEnable* _msg = _internal_mutable_stabilization_mode_enable();
  // @@protoc_insertion_point(field_mutable:cmd.CV.Root.stabilization_mode_enable)
  return _msg;
}

// .cmd.CV.StabilizationModeDisable stabilization_mode_disable = 7;
inline bool Root::has_stabilization_mode_disable() const {
  return cmd_case() == kStabilizationModeDisable;
}
inline bool Root::_internal_has_stabilization_mode_disable() const {
  return cmd_case() == kStabilizationModeDisable;
}
inline void Root::set_has_stabilization_mode_disable() {
  _impl_._oneof_case_[0] = kStabilizationModeDisable;
}
inline void Root::clear_stabilization_mode_disable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStabilizationModeDisable) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.stabilization_mode_disable_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.stabilization_mode_disable_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::CV::StabilizationModeDisable* Root::release_stabilization_mode_disable() {
  // @@protoc_insertion_point(field_release:cmd.CV.Root.stabilization_mode_disable)
  if (cmd_case() == kStabilizationModeDisable) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.stabilization_mode_disable_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.stabilization_mode_disable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::CV::StabilizationModeDisable& Root::_internal_stabilization_mode_disable() const {
  return cmd_case() == kStabilizationModeDisable ? *_impl_.cmd_.stabilization_mode_disable_ : reinterpret_cast<::cmd::CV::StabilizationModeDisable&>(::cmd::CV::_StabilizationModeDisable_default_instance_);
}
inline const ::cmd::CV::StabilizationModeDisable& Root::stabilization_mode_disable() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.CV.Root.stabilization_mode_disable)
  return _internal_stabilization_mode_disable();
}
inline ::cmd::CV::StabilizationModeDisable* Root::unsafe_arena_release_stabilization_mode_disable() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.CV.Root.stabilization_mode_disable)
  if (cmd_case() == kStabilizationModeDisable) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.stabilization_mode_disable_;
    _impl_.cmd_.stabilization_mode_disable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_stabilization_mode_disable(::cmd::CV::StabilizationModeDisable* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_stabilization_mode_disable();
    _impl_.cmd_.stabilization_mode_disable_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.CV.Root.stabilization_mode_disable)
}
inline ::cmd::CV::StabilizationModeDisable* Root::_internal_mutable_stabilization_mode_disable() {
  if (cmd_case() != kStabilizationModeDisable) {
    clear_cmd();
    set_has_stabilization_mode_disable();
    _impl_.cmd_.stabilization_mode_disable_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::CV::StabilizationModeDisable>(GetArena());
  }
  return _impl_.cmd_.stabilization_mode_disable_;
}
inline ::cmd::CV::StabilizationModeDisable* Root::mutable_stabilization_mode_disable() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::CV::StabilizationModeDisable* _msg = _internal_mutable_stabilization_mode_disable();
  // @@protoc_insertion_point(field_mutable:cmd.CV.Root.stabilization_mode_disable)
  return _msg;
}

// .cmd.CV.DumpStart dump_start = 8;
inline bool Root::has_dump_start() const {
  return cmd_case() == kDumpStart;
}
inline bool Root::_internal_has_dump_start() const {
  return cmd_case() == kDumpStart;
}
inline void Root::set_has_dump_start() {
  _impl_._oneof_case_[0] = kDumpStart;
}
inline void Root::clear_dump_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kDumpStart) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.dump_start_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.dump_start_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::CV::DumpStart* Root::release_dump_start() {
  // @@protoc_insertion_point(field_release:cmd.CV.Root.dump_start)
  if (cmd_case() == kDumpStart) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.dump_start_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.dump_start_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::CV::DumpStart& Root::_internal_dump_start() const {
  return cmd_case() == kDumpStart ? *_impl_.cmd_.dump_start_ : reinterpret_cast<::cmd::CV::DumpStart&>(::cmd::CV::_DumpStart_default_instance_);
}
inline const ::cmd::CV::DumpStart& Root::dump_start() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.CV.Root.dump_start)
  return _internal_dump_start();
}
inline ::cmd::CV::DumpStart* Root::unsafe_arena_release_dump_start() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.CV.Root.dump_start)
  if (cmd_case() == kDumpStart) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.dump_start_;
    _impl_.cmd_.dump_start_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_dump_start(::cmd::CV::DumpStart* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_dump_start();
    _impl_.cmd_.dump_start_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.CV.Root.dump_start)
}
inline ::cmd::CV::DumpStart* Root::_internal_mutable_dump_start() {
  if (cmd_case() != kDumpStart) {
    clear_cmd();
    set_has_dump_start();
    _impl_.cmd_.dump_start_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::CV::DumpStart>(GetArena());
  }
  return _impl_.cmd_.dump_start_;
}
inline ::cmd::CV::DumpStart* Root::mutable_dump_start() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::CV::DumpStart* _msg = _internal_mutable_dump_start();
  // @@protoc_insertion_point(field_mutable:cmd.CV.Root.dump_start)
  return _msg;
}

// .cmd.CV.DumpStop dump_stop = 9;
inline bool Root::has_dump_stop() const {
  return cmd_case() == kDumpStop;
}
inline bool Root::_internal_has_dump_stop() const {
  return cmd_case() == kDumpStop;
}
inline void Root::set_has_dump_stop() {
  _impl_._oneof_case_[0] = kDumpStop;
}
inline void Root::clear_dump_stop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kDumpStop) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.dump_stop_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.dump_stop_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::CV::DumpStop* Root::release_dump_stop() {
  // @@protoc_insertion_point(field_release:cmd.CV.Root.dump_stop)
  if (cmd_case() == kDumpStop) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.dump_stop_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.dump_stop_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::CV::DumpStop& Root::_internal_dump_stop() const {
  return cmd_case() == kDumpStop ? *_impl_.cmd_.dump_stop_ : reinterpret_cast<::cmd::CV::DumpStop&>(::cmd::CV::_DumpStop_default_instance_);
}
inline const ::cmd::CV::DumpStop& Root::dump_stop() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.CV.Root.dump_stop)
  return _internal_dump_stop();
}
inline ::cmd::CV::DumpStop* Root::unsafe_arena_release_dump_stop() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.CV.Root.dump_stop)
  if (cmd_case() == kDumpStop) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.dump_stop_;
    _impl_.cmd_.dump_stop_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_dump_stop(::cmd::CV::DumpStop* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_dump_stop();
    _impl_.cmd_.dump_stop_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.CV.Root.dump_stop)
}
inline ::cmd::CV::DumpStop* Root::_internal_mutable_dump_stop() {
  if (cmd_case() != kDumpStop) {
    clear_cmd();
    set_has_dump_stop();
    _impl_.cmd_.dump_stop_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::CV::DumpStop>(GetArena());
  }
  return _impl_.cmd_.dump_stop_;
}
inline ::cmd::CV::DumpStop* Root::mutable_dump_stop() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::CV::DumpStop* _msg = _internal_mutable_dump_stop();
  // @@protoc_insertion_point(field_mutable:cmd.CV.Root.dump_stop)
  return _msg;
}

// .cmd.CV.RecognitionModeEnable recognition_mode_enable = 10;
inline bool Root::has_recognition_mode_enable() const {
  return cmd_case() == kRecognitionModeEnable;
}
inline bool Root::_internal_has_recognition_mode_enable() const {
  return cmd_case() == kRecognitionModeEnable;
}
inline void Root::set_has_recognition_mode_enable() {
  _impl_._oneof_case_[0] = kRecognitionModeEnable;
}
inline void Root::clear_recognition_mode_enable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kRecognitionModeEnable) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.recognition_mode_enable_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.recognition_mode_enable_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::CV::RecognitionModeEnable* Root::release_recognition_mode_enable() {
  // @@protoc_insertion_point(field_release:cmd.CV.Root.recognition_mode_enable)
  if (cmd_case() == kRecognitionModeEnable) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.recognition_mode_enable_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.recognition_mode_enable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::CV::RecognitionModeEnable& Root::_internal_recognition_mode_enable() const {
  return cmd_case() == kRecognitionModeEnable ? *_impl_.cmd_.recognition_mode_enable_ : reinterpret_cast<::cmd::CV::RecognitionModeEnable&>(::cmd::CV::_RecognitionModeEnable_default_instance_);
}
inline const ::cmd::CV::RecognitionModeEnable& Root::recognition_mode_enable() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.CV.Root.recognition_mode_enable)
  return _internal_recognition_mode_enable();
}
inline ::cmd::CV::RecognitionModeEnable* Root::unsafe_arena_release_recognition_mode_enable() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.CV.Root.recognition_mode_enable)
  if (cmd_case() == kRecognitionModeEnable) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.recognition_mode_enable_;
    _impl_.cmd_.recognition_mode_enable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_recognition_mode_enable(::cmd::CV::RecognitionModeEnable* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_recognition_mode_enable();
    _impl_.cmd_.recognition_mode_enable_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.CV.Root.recognition_mode_enable)
}
inline ::cmd::CV::RecognitionModeEnable* Root::_internal_mutable_recognition_mode_enable() {
  if (cmd_case() != kRecognitionModeEnable) {
    clear_cmd();
    set_has_recognition_mode_enable();
    _impl_.cmd_.recognition_mode_enable_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::CV::RecognitionModeEnable>(GetArena());
  }
  return _impl_.cmd_.recognition_mode_enable_;
}
inline ::cmd::CV::RecognitionModeEnable* Root::mutable_recognition_mode_enable() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::CV::RecognitionModeEnable* _msg = _internal_mutable_recognition_mode_enable();
  // @@protoc_insertion_point(field_mutable:cmd.CV.Root.recognition_mode_enable)
  return _msg;
}

// .cmd.CV.RecognitionModeDisable recognition_mode_disable = 11;
inline bool Root::has_recognition_mode_disable() const {
  return cmd_case() == kRecognitionModeDisable;
}
inline bool Root::_internal_has_recognition_mode_disable() const {
  return cmd_case() == kRecognitionModeDisable;
}
inline void Root::set_has_recognition_mode_disable() {
  _impl_._oneof_case_[0] = kRecognitionModeDisable;
}
inline void Root::clear_recognition_mode_disable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kRecognitionModeDisable) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.recognition_mode_disable_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.recognition_mode_disable_);
    }
    clear_has_cmd();
  }
}
inline ::cmd::CV::RecognitionModeDisable* Root::release_recognition_mode_disable() {
  // @@protoc_insertion_point(field_release:cmd.CV.Root.recognition_mode_disable)
  if (cmd_case() == kRecognitionModeDisable) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.recognition_mode_disable_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.recognition_mode_disable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cmd::CV::RecognitionModeDisable& Root::_internal_recognition_mode_disable() const {
  return cmd_case() == kRecognitionModeDisable ? *_impl_.cmd_.recognition_mode_disable_ : reinterpret_cast<::cmd::CV::RecognitionModeDisable&>(::cmd::CV::_RecognitionModeDisable_default_instance_);
}
inline const ::cmd::CV::RecognitionModeDisable& Root::recognition_mode_disable() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cmd.CV.Root.recognition_mode_disable)
  return _internal_recognition_mode_disable();
}
inline ::cmd::CV::RecognitionModeDisable* Root::unsafe_arena_release_recognition_mode_disable() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cmd.CV.Root.recognition_mode_disable)
  if (cmd_case() == kRecognitionModeDisable) {
    clear_has_cmd();
    auto* temp = _impl_.cmd_.recognition_mode_disable_;
    _impl_.cmd_.recognition_mode_disable_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Root::unsafe_arena_set_allocated_recognition_mode_disable(::cmd::CV::RecognitionModeDisable* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_recognition_mode_disable();
    _impl_.cmd_.recognition_mode_disable_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cmd.CV.Root.recognition_mode_disable)
}
inline ::cmd::CV::RecognitionModeDisable* Root::_internal_mutable_recognition_mode_disable() {
  if (cmd_case() != kRecognitionModeDisable) {
    clear_cmd();
    set_has_recognition_mode_disable();
    _impl_.cmd_.recognition_mode_disable_ =
        ::google::protobuf::Message::DefaultConstruct<::cmd::CV::RecognitionModeDisable>(GetArena());
  }
  return _impl_.cmd_.recognition_mode_disable_;
}
inline ::cmd::CV::RecognitionModeDisable* Root::mutable_recognition_mode_disable() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cmd::CV::RecognitionModeDisable* _msg = _internal_mutable_recognition_mode_disable();
  // @@protoc_insertion_point(field_mutable:cmd.CV.Root.recognition_mode_disable)
  return _msg;
}

inline bool Root::has_cmd() const {
  return cmd_case() != CMD_NOT_SET;
}
inline void Root::clear_has_cmd() {
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}
inline Root::CmdCase Root::cmd_case() const {
  return Root::CmdCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// VampireModeEnable

// -------------------------------------------------------------------

// DumpStart

// -------------------------------------------------------------------

// DumpStop

// -------------------------------------------------------------------

// VampireModeDisable

// -------------------------------------------------------------------

// StabilizationModeEnable

// -------------------------------------------------------------------

// StabilizationModeDisable

// -------------------------------------------------------------------

// RecognitionModeEnable

// -------------------------------------------------------------------

// RecognitionModeDisable

// -------------------------------------------------------------------

// SetAutoFocus

// .ser.JonGuiDataVideoChannel channel = 1;
inline void SetAutoFocus::clear_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_ = 0;
}
inline ::ser::JonGuiDataVideoChannel SetAutoFocus::channel() const {
  // @@protoc_insertion_point(field_get:cmd.CV.SetAutoFocus.channel)
  return _internal_channel();
}
inline void SetAutoFocus::set_channel(::ser::JonGuiDataVideoChannel value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:cmd.CV.SetAutoFocus.channel)
}
inline ::ser::JonGuiDataVideoChannel SetAutoFocus::_internal_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ser::JonGuiDataVideoChannel>(_impl_.channel_);
}
inline void SetAutoFocus::_internal_set_channel(::ser::JonGuiDataVideoChannel value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_ = value;
}

// bool value = 2;
inline void SetAutoFocus::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = false;
}
inline bool SetAutoFocus::value() const {
  // @@protoc_insertion_point(field_get:cmd.CV.SetAutoFocus.value)
  return _internal_value();
}
inline void SetAutoFocus::set_value(bool value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:cmd.CV.SetAutoFocus.value)
}
inline bool SetAutoFocus::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void SetAutoFocus::_internal_set_value(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// StartTrackNDC

// .ser.JonGuiDataVideoChannel channel = 1;
inline void StartTrackNDC::clear_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_ = 0;
}
inline ::ser::JonGuiDataVideoChannel StartTrackNDC::channel() const {
  // @@protoc_insertion_point(field_get:cmd.CV.StartTrackNDC.channel)
  return _internal_channel();
}
inline void StartTrackNDC::set_channel(::ser::JonGuiDataVideoChannel value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:cmd.CV.StartTrackNDC.channel)
}
inline ::ser::JonGuiDataVideoChannel StartTrackNDC::_internal_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ser::JonGuiDataVideoChannel>(_impl_.channel_);
}
inline void StartTrackNDC::_internal_set_channel(::ser::JonGuiDataVideoChannel value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_ = value;
}

// double x = 2;
inline void StartTrackNDC::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline double StartTrackNDC::x() const {
  // @@protoc_insertion_point(field_get:cmd.CV.StartTrackNDC.x)
  return _internal_x();
}
inline void StartTrackNDC::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:cmd.CV.StartTrackNDC.x)
}
inline double StartTrackNDC::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void StartTrackNDC::_internal_set_x(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// double y = 3;
inline void StartTrackNDC::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline double StartTrackNDC::y() const {
  // @@protoc_insertion_point(field_get:cmd.CV.StartTrackNDC.y)
  return _internal_y();
}
inline void StartTrackNDC::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:cmd.CV.StartTrackNDC.y)
}
inline double StartTrackNDC::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void StartTrackNDC::_internal_set_y(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// uint64 frame_time = 4;
inline void StartTrackNDC::clear_frame_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_time_ = ::uint64_t{0u};
}
inline ::uint64_t StartTrackNDC::frame_time() const {
  // @@protoc_insertion_point(field_get:cmd.CV.StartTrackNDC.frame_time)
  return _internal_frame_time();
}
inline void StartTrackNDC::set_frame_time(::uint64_t value) {
  _internal_set_frame_time(value);
  // @@protoc_insertion_point(field_set:cmd.CV.StartTrackNDC.frame_time)
}
inline ::uint64_t StartTrackNDC::_internal_frame_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_time_;
}
inline void StartTrackNDC::_internal_set_frame_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_time_ = value;
}

// uint64 state_time = 5;
inline void StartTrackNDC::clear_state_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_time_ = ::uint64_t{0u};
}
inline ::uint64_t StartTrackNDC::state_time() const {
  // @@protoc_insertion_point(field_get:cmd.CV.StartTrackNDC.state_time)
  return _internal_state_time();
}
inline void StartTrackNDC::set_state_time(::uint64_t value) {
  _internal_set_state_time(value);
  // @@protoc_insertion_point(field_set:cmd.CV.StartTrackNDC.state_time)
}
inline ::uint64_t StartTrackNDC::_internal_state_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.state_time_;
}
inline void StartTrackNDC::_internal_set_state_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_time_ = value;
}

// -------------------------------------------------------------------

// StopTrack

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace CV
}  // namespace cmd


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // jon_5fshared_5fcmd_5fcv_2eproto_2epb_2eh
